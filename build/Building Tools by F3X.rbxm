<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0.400000006</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">Building Tools</string>
			<Content name="TextureId"><null></null></Content>
			<string name="ToolTip">Building Tools by F3X</string>
		</Properties>
		<Item class="LocalScript" referent="RBX1">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Building Tools by F3X</string>
				<ProtectedString name="Source">------------------------------------------
-- Create references to important objects
------------------------------------------
Services = {
&#9;[&quot;Workspace&quot;] = Game:GetService( &quot;Workspace&quot; );
&#9;[&quot;Players&quot;] = Game:GetService( &quot;Players&quot; );
&#9;[&quot;Lighting&quot;] = Game:GetService( &quot;Lighting&quot; );
&#9;[&quot;Teams&quot;] = Game:GetService( &quot;Teams&quot; );
&#9;[&quot;Debris&quot;] = Game:GetService( &quot;Debris&quot; );
&#9;[&quot;MarketplaceService&quot;] = Game:GetService( &quot;MarketplaceService&quot; );
&#9;[&quot;JointsService&quot;] = Game.JointsService;
&#9;[&quot;BadgeService&quot;] = Game:GetService( &quot;BadgeService&quot; );
&#9;[&quot;RunService&quot;] = Game:GetService( &quot;RunService&quot; );
&#9;[&quot;ContentProvider&quot;] = Game:GetService( &quot;ContentProvider&quot; );
&#9;[&quot;TeleportService&quot;] = Game:GetService( &quot;TeleportService&quot; );
&#9;[&quot;SoundService&quot;] = Game:GetService( &quot;SoundService&quot; );
&#9;[&quot;InsertService&quot;] = Game:GetService( &quot;InsertService&quot; );
&#9;[&quot;CollectionService&quot;] = Game:GetService( &quot;CollectionService&quot; );
&#9;[&quot;UserInputService&quot;] = Game:GetService( &quot;UserInputService&quot; );
&#9;[&quot;GamePassService&quot;] = Game:GetService( &quot;GamePassService&quot; );
&#9;[&quot;StarterPack&quot;] = Game:GetService( &quot;StarterPack&quot; );
&#9;[&quot;StarterGui&quot;] = Game:GetService( &quot;StarterGui&quot; );
&#9;[&quot;TestService&quot;] = Game:GetService( &quot;TestService&quot; );
&#9;[&quot;ReplicatedStorage&quot;] = Game:GetService( &quot;ReplicatedStorage&quot; );
&#9;[&quot;Selection&quot;] = Game:GetService( &quot;Selection&quot; );
&#9;[&quot;CoreGui&quot;] = Game:GetService( &quot;CoreGui&quot; );
};

Tool = script.Parent;
Player = Services.Players.LocalPlayer;
Mouse = nil;

-- Determine whether this is the plugin or tool
if plugin then
&#9;ToolType = &apos;plugin&apos;;
elseif Tool:IsA( &apos;Tool&apos; ) then
&#9;ToolType = &apos;tool&apos;;
end;

-- Get tool type-specific resources
if ToolType == &apos;tool&apos; then
&#9;GUIContainer = Player:WaitForChild( &apos;PlayerGui&apos; );
&#9;in_server = not not Game:FindFirstChild( &apos;NetworkClient&apos; );
elseif ToolType == &apos;plugin&apos; then
&#9;GUIContainer = Services.CoreGui;
&#9;in_server = not not Game:FindFirstChild( &apos;NetworkServer&apos; );
end;
if in_server then
&#9;Tool:WaitForChild( &quot;GetAsync&quot; );
&#9;Tool:WaitForChild( &quot;PostAsync&quot; );
&#9;GetAsync = function ( ... )
&#9;&#9;return Tool.GetAsync:InvokeServer( ... );
&#9;end;
&#9;PostAsync = function ( ... )
&#9;&#9;return Tool.PostAsync:InvokeServer( ... );
&#9;end;
end;

ToolAssetID = 142785488;

dark_slanted_rectangle = &quot;http://www.roblox.com/asset/?id=127774197&quot;;
light_slanted_rectangle = &quot;http://www.roblox.com/asset/?id=127772502&quot;;
action_completion_sound = &quot;http://www.roblox.com/asset/?id=99666917&quot;;
expand_arrow = &quot;http://www.roblox.com/asset/?id=134367382&quot;;
tool_decal = &quot;http://www.roblox.com/asset/?id=129748355&quot;;
undo_active_decal = &quot;http://www.roblox.com/asset/?id=141741408&quot;;
undo_inactive_decal = &quot;http://www.roblox.com/asset/?id=142074557&quot;;
redo_active_decal = &quot;http://www.roblox.com/asset/?id=141741327&quot;;
redo_inactive_decal = &quot;http://www.roblox.com/asset/?id=142074553&quot;;
delete_active_decal = &quot;http://www.roblox.com/asset/?id=141896298&quot;;
delete_inactive_decal = &quot;http://www.roblox.com/asset/?id=142074644&quot;;
export_active_decal = &quot;http://www.roblox.com/asset/?id=141741337&quot;;
export_inactive_decal = &quot;http://www.roblox.com/asset/?id=142074569&quot;;
clone_active_decal = &quot;http://www.roblox.com/asset/?id=142073926&quot;;
clone_inactive_decal = &quot;http://www.roblox.com/asset/?id=142074563&quot;;
plugin_icon = &quot;http://www.roblox.com/asset/?id=142287521&quot;;

------------------------------------------
-- Load external dependencies
------------------------------------------
RbxUtility = LoadLibrary( &quot;RbxUtility&quot; );
Services.ContentProvider:Preload( dark_slanted_rectangle );
Services.ContentProvider:Preload( light_slanted_rectangle );
Services.ContentProvider:Preload( action_completion_sound );
Services.ContentProvider:Preload( expand_arrow );
Services.ContentProvider:Preload( tool_decal );
Services.ContentProvider:Preload( undo_active_decal );
Services.ContentProvider:Preload( undo_inactive_decal );
Services.ContentProvider:Preload( redo_inactive_decal );
Services.ContentProvider:Preload( redo_active_decal );
Services.ContentProvider:Preload( delete_active_decal );
Services.ContentProvider:Preload( delete_inactive_decal );
Services.ContentProvider:Preload( export_active_decal );
Services.ContentProvider:Preload( export_inactive_decal );
Services.ContentProvider:Preload( clone_active_decal );
Services.ContentProvider:Preload( clone_inactive_decal );
Services.ContentProvider:Preload( plugin_icon );
Tool:WaitForChild( &quot;Interfaces&quot; );
repeat wait( 0 ) until _G.gloo;
Gloo = _G.gloo;

------------------------------------------
-- Define functions that are depended-upon
------------------------------------------
function _findTableOccurrences( haystack, needle )
&#9;-- Returns the positions of instances of `needle` in table `haystack`
&#9;local positions = {};

&#9;-- Add any indexes from `haystack` that have `needle`
&#9;for index, value in pairs( haystack ) do
&#9;&#9;if value == needle then
&#9;&#9;&#9;table.insert( positions, index );
&#9;&#9;end;
&#9;end;

&#9;return positions;
end;

function _getCollectionInfo( part_collection )
&#9;-- Returns the size and position of collection of parts `part_collection`

&#9;-- Get the corners
&#9;local corners = {};

&#9;-- Create shortcuts to certain things that are expensive to call constantly
&#9;-- (note: otherwise it actually becomes an issue if the selection grows
&#9;-- considerably large)
&#9;local table_insert = table.insert;
&#9;local newCFrame = CFrame.new;

&#9;for _, Part in pairs( part_collection ) do

&#9;&#9;local PartCFrame = Part.CFrame;
&#9;&#9;local partCFrameOffset = PartCFrame.toWorldSpace;
&#9;&#9;local PartSize = Part.Size / 2;
&#9;&#9;local size_x, size_y, size_z = PartSize.x, PartSize.y, PartSize.z;

&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, -size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, -size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, -size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, -size_z ) ) );

&#9;end;

&#9;-- Get the extents
&#9;local x, y, z = {}, {}, {};

&#9;for _, Corner in pairs( corners ) do
&#9;&#9;table_insert( x, Corner.x );
&#9;&#9;table_insert( y, Corner.y );
&#9;&#9;table_insert( z, Corner.z );
&#9;end;

&#9;local x_min, y_min, z_min = math.min( unpack( x ) ),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;math.min( unpack( y ) ),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;math.min( unpack( z ) );

&#9;local x_max, y_max, z_max = math.max( unpack( x ) ),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;math.max( unpack( y ) ),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;math.max( unpack( z ) );

&#9;-- Get the size between the extents
&#9;local x_size, y_size, z_size = &#9;x_max - x_min,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;y_max - y_min,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;z_max - z_min;

&#9;local Size = Vector3.new( x_size, y_size, z_size );

&#9;-- Get the centroid of the collection of points
&#9;local Position = CFrame.new( &#9;x_min + ( x_max - x_min ) / 2,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;y_min + ( y_max - y_min ) / 2,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;z_min + ( z_max - z_min ) / 2 );

&#9;-- Return the size of the collection of parts
&#9;return Size, Position;
end;

function _round( number, places )
&#9;-- Returns `number` rounded to the number of decimal `places`
&#9;-- (from lua-users)

&#9;local mult = 10 ^ ( places or 0 );

&#9;return math.floor( number * mult + 0.5 ) / mult;

end

function _cloneTable( source )
&#9;-- Returns a deep copy of table `source`

&#9;-- Get a copy of `source`&apos;s metatable, since the hacky method
&#9;-- we&apos;re using to copy the table doesn&apos;t include its metatable
&#9;local source_mt = getmetatable( source );

&#9;-- Return a copy of `source` including its metatable
&#9;return setmetatable( { unpack( source ) }, source_mt );
end;

function _getAllDescendants( Parent )
&#9;-- Recursively gets all the descendants of  `Parent` and returns them

&#9;local descendants = {};

&#9;for _, Child in pairs( Parent:GetChildren() ) do

&#9;&#9;-- Add the direct descendants of `Parent`
&#9;&#9;table.insert( descendants, Child );

&#9;&#9;-- Add the descendants of each child
&#9;&#9;for _, Subchild in pairs( _getAllDescendants( Child ) ) do
&#9;&#9;&#9;table.insert( descendants, Subchild );
&#9;&#9;end;

&#9;end;

&#9;return descendants;

end;

function _pointToScreenSpace( Point )
&#9;-- Returns Vector3 `Point`&apos;s position on the screen when rendered
&#9;-- (kudos to stravant for this)

&#9;local point = Services.Workspace.CurrentCamera.CoordinateFrame:pointToObjectSpace( Point );
&#9;local aspectRatio = Mouse.ViewSizeX / Mouse.ViewSizeY;
&#9;local hfactor = math.tan( math.rad( Services.Workspace.CurrentCamera.FieldOfView ) / 2 )
&#9;local wfactor = aspectRatio * hfactor;

&#9;local x = ( point.x / point.z ) / -wfactor;
&#9;local y = ( point.y / point.z ) /  hfactor;

&#9;local screen_pos = Vector2.new( Mouse.ViewSizeX * ( 0.5 + 0.5 * x ), Mouse.ViewSizeY * ( 0.5 + 0.5 * y ) );
&#9;if ( screen_pos.x &lt; 0 or screen_pos.x &gt; Mouse.ViewSizeX ) or ( screen_pos.y &lt; 0 or screen_pos.y &gt; Mouse.ViewSizeY ) then
&#9;&#9;return nil;
&#9;end;
&#9;if Services.Workspace.CurrentCamera.CoordinateFrame:toObjectSpace( CFrame.new( Point ) ).z &gt; 0 then
&#9;&#9;return nil;
&#9;end;

&#9;return screen_pos;

end;

function _cloneParts( parts )
&#9;-- Returns a table of cloned `parts`

&#9;local new_parts = {};

&#9;-- Copy the parts into `new_parts`
&#9;for part_index, Part in pairs( parts ) do
&#9;&#9;new_parts[part_index] = Part:Clone();
&#9;end;

&#9;return new_parts;
end;

function _replaceParts( old_parts, new_parts )
&#9;-- Removes `old_parts` and inserts `new_parts`

&#9;-- Remove old parts
&#9;for _, OldPart in pairs( old_parts ) do
&#9;&#9;OldPart.Parent = nil;
&#9;end;

&#9;-- Insert `new_parts
&#9;for _, NewPart in pairs( new_parts ) do
&#9;&#9;NewPart.Parent = Services.Workspace;
&#9;&#9;NewPart:MakeJoints();
&#9;end;

end;

function _splitString( str, delimiter )
&#9;-- Returns a table of string `str` split by pattern `delimiter`

&#9;local parts = {};
&#9;local pattern = ( &quot;([^%s]+)&quot; ):format( delimiter );

&#9;str:gsub( pattern, function ( part )
&#9;&#9;table.insert( parts, part );
&#9;end );

&#9;return parts;
end;

function _generateSerializationID()
&#9;-- Returns a random 5-character string
&#9;-- with characters A-Z, a-z, and 0-9
&#9;-- (there are 916,132,832 unique IDs)

&#9;local characters = {
&#9;&#9;&quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;,
&#9;&#9;&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;,
&#9;&#9;&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;Z&quot; };

&#9;local serialization_id = &quot;&quot;;

&#9;-- Pick out 5 random characters
&#9;for _ = 1, 5 do
&#9;&#9;serialization_id = serialization_id .. ( characters[math.random( #characters )] );
&#9;end;

&#9;return serialization_id;
end;

function _splitNumberListString( str )
&#9;-- Returns the contents of _splitString( str, &quot;, &quot; ), except
&#9;-- each value in the table is turned into a number

&#9;-- Get the number strings
&#9;local numbers = _splitString( str, &quot;, &quot; );

&#9;-- Turn them into numbers
&#9;for number_index, number in pairs( numbers ) do
&#9;&#9;numbers[number_index] = tonumber( number );
&#9;end;

&#9;-- Return `numbers`
&#9;return numbers;
end;

function _getSerializationPartType( Part )
&#9;-- Returns a special number that determines the type of
&#9;-- part `Part` is

&#9;local Types = {
&#9;&#9;Normal = 1,
&#9;&#9;Truss = 2,
&#9;&#9;Wedge = 3,
&#9;&#9;Corner = 4,
&#9;&#9;Cylinder = 5,
&#9;&#9;Ball = 6,
&#9;&#9;Seat = 7,
&#9;&#9;VehicleSeat = 8,
&#9;&#9;Spawn = 9
&#9;};

&#9;-- Return the appropriate type number
&#9;if Part.ClassName == &quot;Part&quot; then
&#9;&#9;if Part.Shape == Enum.PartType.Block then
&#9;&#9;&#9;return Types.Normal;
&#9;&#9;elseif Part.Shape == Enum.PartType.Cylinder then
&#9;&#9;&#9;return Types.Cylinder;
&#9;&#9;elseif Part.Shape == Enum.PartType.Ball then
&#9;&#9;&#9;return Types.Ball;
&#9;&#9;end;

&#9;elseif Part.ClassName == &quot;Seat&quot; then
&#9;&#9;return Types.Seat;

&#9;elseif Part.ClassName == &quot;VehicleSeat&quot; then
&#9;&#9;return Types.VehicleSeat;

&#9;elseif Part.ClassName == &quot;SpawnLocation&quot; then
&#9;&#9;return Types.Spawn;

&#9;elseif Part.ClassName == &quot;WedgePart&quot; then
&#9;&#9;return Types.Wedge;

&#9;elseif Part.ClassName == &quot;CornerWedgePart&quot; then
&#9;&#9;return Types.Corner;

&#9;elseif Part.ClassName == &quot;TrussPart&quot; then
&#9;&#9;return Types.Truss;

&#9;end;

end;

function _serializeParts( parts )
&#9;-- Returns JSON-encoded data about parts in
&#9;-- table `parts` that can be used to recreate them

&#9;local data = {
&#9;&#9;version = 1,
&#9;&#9;parts = {}
&#9;};

&#9;local objects = {};

&#9;-- Store part data
&#9;for _, Part in pairs( parts ) do
&#9;&#9;local part_id = _generateSerializationID();
&#9;&#9;local PartData = {
&#9;&#9;&#9;_getSerializationPartType( Part ),
&#9;&#9;&#9;_splitNumberListString( tostring( Part.Size ) ),
&#9;&#9;&#9;_splitNumberListString( tostring( Part.CFrame ) ),
&#9;&#9;&#9;Part.BrickColor.Number,
&#9;&#9;&#9;Part.Material.Value,
&#9;&#9;&#9;Part.Anchored,
&#9;&#9;&#9;Part.CanCollide,
&#9;&#9;&#9;Part.Reflectance,
&#9;&#9;&#9;Part.Transparency,
&#9;&#9;&#9;Part.TopSurface.Value,
&#9;&#9;&#9;Part.BottomSurface.Value,
&#9;&#9;&#9;Part.LeftSurface.Value,
&#9;&#9;&#9;Part.RightSurface.Value,
&#9;&#9;&#9;Part.FrontSurface.Value,
&#9;&#9;&#9;Part.BackSurface.Value
&#9;&#9;};
&#9;&#9;data.parts[part_id] = PartData;
&#9;&#9;objects[part_id] = Part;
&#9;end;

&#9;-- Get any welds in the selection
&#9;local welds = {};
&#9;for object_id, Object in pairs( objects ) do
&#9;&#9;if Object:IsA( &quot;BasePart&quot; ) then
&#9;&#9;&#9;for _, Joint in pairs( _getAllDescendants( Services.Workspace ) ) do
&#9;&#9;&#9;&#9;if Joint:IsA( &quot;Weld&quot; ) and Joint.Name == &quot;BTWeld&quot; then
&#9;&#9;&#9;&#9;&#9;if Joint.Part0 == Object and #_findTableOccurrences( objects, Joint.Part1 ) &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert( welds, Joint );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;-- Serialize any welds
&#9;if #welds &gt; 0 then
&#9;&#9;data.welds = {};
&#9;&#9;for _, Weld in pairs( welds ) do
&#9;&#9;&#9;local weld_id = _generateSerializationID();
&#9;&#9;&#9;local WeldData = {
&#9;&#9;&#9;&#9;_findTableOccurrences( objects, Weld.Part0 )[1],
&#9;&#9;&#9;&#9;_findTableOccurrences( objects, Weld.Part1 )[1],
&#9;&#9;&#9;&#9;_splitNumberListString( tostring( Weld.C1 ) )
&#9;&#9;&#9;};
&#9;&#9;&#9;data.welds[weld_id] = WeldData;
&#9;&#9;&#9;objects[weld_id] = Weld;
&#9;&#9;end;
&#9;end;

&#9;-- Get any meshes in the selection
&#9;local meshes = {};
&#9;for _, Part in pairs( parts ) do
&#9;&#9;local Mesh = _getChildOfClass( Part, &quot;SpecialMesh&quot; );
&#9;&#9;if Mesh then
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;end;
&#9;end;

&#9;-- Serialize any meshes
&#9;if #meshes &gt; 0 then
&#9;&#9;data.meshes = {};
&#9;&#9;for _, Mesh in pairs( meshes ) do
&#9;&#9;&#9;local mesh_id = _generateSerializationID();
&#9;&#9;&#9;local MeshData = {
&#9;&#9;&#9;&#9;_findTableOccurrences( objects, Mesh.Parent )[1],
&#9;&#9;&#9;&#9;Mesh.MeshType.Value,
&#9;&#9;&#9;&#9;_splitNumberListString( tostring( Mesh.Scale ) ),
&#9;&#9;&#9;&#9;Mesh.MeshId,
&#9;&#9;&#9;&#9;Mesh.TextureId,
&#9;&#9;&#9;&#9;_splitNumberListString( tostring( Mesh.VertexColor ) )
&#9;&#9;&#9;};
&#9;&#9;&#9;data.meshes[mesh_id] = MeshData;
&#9;&#9;&#9;objects[mesh_id] = Mesh;
&#9;&#9;end;
&#9;end;

&#9;-- Get any textures in the selection
&#9;local textures = {};
&#9;for _, Part in pairs( parts ) do
&#9;&#9;local textures_found = _getChildrenOfClass( Part, &quot;Texture&quot; );
&#9;&#9;for _, Texture in pairs( textures_found ) do
&#9;&#9;&#9;table.insert( textures, Texture );
&#9;&#9;end;
&#9;&#9;local decals_found = _getChildrenOfClass( Part, &quot;Decal&quot; );
&#9;&#9;for _, Decal in pairs( decals_found ) do
&#9;&#9;&#9;table.insert( textures, Decal );
&#9;&#9;end;
&#9;end;

&#9;-- Serialize any textures
&#9;if #textures &gt; 0 then
&#9;&#9;data.textures = {};
&#9;&#9;for _, Texture in pairs( textures ) do
&#9;&#9;&#9;local texture_type;
&#9;&#9;&#9;if Texture.ClassName == &quot;Decal&quot; then
&#9;&#9;&#9;&#9;texture_type = 1;
&#9;&#9;&#9;elseif Texture.ClassName == &quot;Texture&quot; then
&#9;&#9;&#9;&#9;texture_type = 2;
&#9;&#9;&#9;end;
&#9;&#9;&#9;local texture_id = _generateSerializationID();
&#9;&#9;&#9;local TextureData = {
&#9;&#9;&#9;&#9;_findTableOccurrences( objects, Texture.Parent )[1],
&#9;&#9;&#9;&#9;texture_type,
&#9;&#9;&#9;&#9;Texture.Face.Value,
&#9;&#9;&#9;&#9;Texture.Texture,
&#9;&#9;&#9;&#9;Texture.Transparency,
&#9;&#9;&#9;&#9;texture_type == 2 and Texture.StudsPerTileU or nil,
&#9;&#9;&#9;&#9;texture_type == 2 and Texture.StudsPerTileV or nil
&#9;&#9;&#9;};
&#9;&#9;&#9;data.textures[texture_id] = TextureData;
&#9;&#9;&#9;objects[texture_id] = Texture;
&#9;&#9;end;
&#9;end;

&#9;-- Get any lights in the selection
&#9;local lights = {};
&#9;for _, Part in pairs( parts ) do
&#9;&#9;local lights_found = _getChildrenOfClass( Part, &quot;Light&quot;, true );
&#9;&#9;for _, Light in pairs( lights_found ) do
&#9;&#9;&#9;table.insert( lights, Light );
&#9;&#9;end;
&#9;end;

&#9;-- Serialize any lights
&#9;if #lights &gt; 0 then
&#9;&#9;data.lights = {};
&#9;&#9;for _, Light in pairs( lights ) do
&#9;&#9;&#9;local light_type;
&#9;&#9;&#9;if Light:IsA( &quot;PointLight&quot; ) then
&#9;&#9;&#9;&#9;light_type = 1;
&#9;&#9;&#9;elseif Light:IsA( &quot;SpotLight&quot; ) then
&#9;&#9;&#9;&#9;light_type = 2;
&#9;&#9;&#9;end;
&#9;&#9;&#9;local light_id = _generateSerializationID();
&#9;&#9;&#9;local LightData = {
&#9;&#9;&#9;&#9;_findTableOccurrences( objects, Light.Parent )[1];
&#9;&#9;&#9;&#9;light_type,
&#9;&#9;&#9;&#9;_splitNumberListString( tostring( Light.Color ) ),
&#9;&#9;&#9;&#9;Light.Brightness,
&#9;&#9;&#9;&#9;Light.Range,
&#9;&#9;&#9;&#9;Light.Shadows,
&#9;&#9;&#9;&#9;light_type == 2 and Light.Angle or nil,
&#9;&#9;&#9;&#9;light_type == 2 and Light.Face.Value or nil
&#9;&#9;&#9;};
&#9;&#9;&#9;data.lights[light_id] = LightData;
&#9;&#9;&#9;objects[light_id] = Light;
&#9;&#9;end;
&#9;end;

&#9;-- Get any decorations in the selection
&#9;local decorations = {};
&#9;for _, Part in pairs( parts ) do
&#9;&#9;table.insert( decorations, _getChildOfClass( Part, &apos;Smoke&apos; ) )
&#9;&#9;table.insert( decorations, _getChildOfClass( Part, &apos;Fire&apos; ) );
&#9;&#9;table.insert( decorations, _getChildOfClass( Part, &apos;Sparkles&apos; ) );
&#9;end;

&#9;-- Serialize any decorations
&#9;if #decorations &gt; 0 then
&#9;&#9;data.decorations = {};
&#9;&#9;for _, Decoration in pairs( decorations ) do
&#9;&#9;&#9;local decoration_type;
&#9;&#9;&#9;if Decoration:IsA( &apos;Smoke&apos; ) then
&#9;&#9;&#9;&#9;decoration_type = 1;
&#9;&#9;&#9;elseif Decoration:IsA( &apos;Fire&apos; ) then
&#9;&#9;&#9;&#9;decoration_type = 2;
&#9;&#9;&#9;elseif Decoration:IsA( &apos;Sparkles&apos; ) then
&#9;&#9;&#9;&#9;decoration_type = 3;
&#9;&#9;&#9;end;
&#9;&#9;&#9;local decoration_id = _generateSerializationID();
&#9;&#9;&#9;local DecorationData = {
&#9;&#9;&#9;&#9;_findTableOccurrences( objects, Decoration.Parent )[1],
&#9;&#9;&#9;&#9;decoration_type
&#9;&#9;&#9;};
&#9;&#9;&#9;if decoration_type == 1 then
&#9;&#9;&#9;&#9;DecorationData[3] = _splitNumberListString( tostring( Decoration.Color ) );
&#9;&#9;&#9;&#9;DecorationData[4] = Decoration.Opacity;
&#9;&#9;&#9;&#9;DecorationData[5] = Decoration.RiseVelocity;
&#9;&#9;&#9;&#9;DecorationData[6] = Decoration.Size;
&#9;&#9;&#9;elseif decoration_type == 2 then
&#9;&#9;&#9;&#9;DecorationData[3] = _splitNumberListString( tostring( Decoration.Color ) );
&#9;&#9;&#9;&#9;DecorationData[4] = _splitNumberListString( tostring( Decoration.SecondaryColor ) );
&#9;&#9;&#9;&#9;DecorationData[5] = Decoration.Heat;
&#9;&#9;&#9;&#9;DecorationData[6] = Decoration.Size;
&#9;&#9;&#9;elseif decoration_type == 3 then
&#9;&#9;&#9;&#9;DecorationData[3] = _splitNumberListString( tostring( Decoration.SparkleColor ) );
&#9;&#9;&#9;end;
&#9;&#9;&#9;data.decorations[decoration_id] = DecorationData;
&#9;&#9;&#9;objects[decoration_id] = Decoration;
&#9;&#9;end;
&#9;end;

&#9;return RbxUtility.EncodeJSON( data );

end;

function _getChildOfClass( Parent, class_name, inherit )
&#9;-- Returns the first child of `Parent` that is of class `class_name`
&#9;-- or nil if it couldn&apos;t find any

&#9;-- Look for a child of `Parent` of class `class_name` and return it
&#9;if not inherit then
&#9;&#9;for _, Child in pairs( Parent:GetChildren() ) do
&#9;&#9;&#9;if Child.ClassName == class_name then
&#9;&#9;&#9;&#9;return Child;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;else
&#9;&#9;for _, Child in pairs( Parent:GetChildren() ) do
&#9;&#9;&#9;if Child:IsA( class_name ) then
&#9;&#9;&#9;&#9;return Child;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;return nil;

end;

function _getChildrenOfClass( Parent, class_name, inherit )
&#9;-- Returns a table containing the children of `Parent` that are
&#9;-- of class `class_name`
&#9;local matches = {};


&#9;if not inherit then
&#9;&#9;for _, Child in pairs( Parent:GetChildren() ) do
&#9;&#9;&#9;if Child.ClassName == class_name then
&#9;&#9;&#9;&#9;table.insert( matches, Child );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;else
&#9;&#9;for _, Child in pairs( Parent:GetChildren() ) do
&#9;&#9;&#9;if Child:IsA( class_name ) then
&#9;&#9;&#9;&#9;table.insert( matches, Child );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;return matches;
end;

function _HSVToRGB( hue, saturation, value )
&#9;-- Returns the RGB equivalent of the given HSV-defined color
&#9;-- (adapted from some code found around the web)

&#9;-- If it&apos;s achromatic, just return the value
&#9;if saturation == 0 then
&#9;&#9;return value;
&#9;end;

&#9;-- Get the hue sector
&#9;local hue_sector = math.floor( hue / 60 );
&#9;local hue_sector_offset = ( hue / 60 ) - hue_sector;

&#9;local p = value * ( 1 - saturation );
&#9;local q = value * ( 1 - saturation * hue_sector_offset );
&#9;local t = value * ( 1 - saturation * ( 1 - hue_sector_offset ) );

&#9;if hue_sector == 0 then
&#9;&#9;return value, t, p;
&#9;elseif hue_sector == 1 then
&#9;&#9;return q, value, p;
&#9;elseif hue_sector == 2 then
&#9;&#9;return p, value, t;
&#9;elseif hue_sector == 3 then
&#9;&#9;return p, q, value;
&#9;elseif hue_sector == 4 then
&#9;&#9;return t, p, value;
&#9;elseif hue_sector == 5 then
&#9;&#9;return value, p, q;
&#9;end;
end;

function _RGBToHSV( red, green, blue )
&#9;-- Returns the HSV equivalent of the given RGB-defined color
&#9;-- (adapted from some code found around the web)

&#9;local hue, saturation, value;

&#9;local min_value = math.min( red, green, blue );
&#9;local max_value = math.max( red, green, blue );

&#9;value = max_value;

&#9;local value_delta = max_value - min_value;

&#9;-- If the color is not black
&#9;if max_value ~= 0 then
&#9;&#9;saturation = value_delta / max_value;

&#9;-- If the color is purely black
&#9;else
&#9;&#9;saturation = 0;
&#9;&#9;hue = -1;
&#9;&#9;return hue, saturation, value;
&#9;end;

&#9;if red == max_value then
&#9;&#9;hue = ( green - blue ) / value_delta;
&#9;elseif green == max_value then
&#9;&#9;hue = 2 + ( blue - red ) / value_delta;
&#9;else
&#9;&#9;hue = 4 + ( red - green ) / value_delta;
&#9;end;

&#9;hue = hue * 60;
&#9;if hue &lt; 0 then
&#9;&#9;hue = hue + 360;
&#9;end;

&#9;return hue, saturation, value;
end;

------------------------------------------
-- Create data containers
------------------------------------------
ActiveKeys = {};

CurrentTool = nil;

function equipTool( NewTool )

&#9;-- If it&apos;s a different tool than the current one
&#9;if CurrentTool ~= NewTool then

&#9;&#9;-- Run (if existent) the old tool&apos;s `Unequipped` listener
&#9;&#9;if CurrentTool and CurrentTool.Listeners.Unequipped then
&#9;&#9;&#9;CurrentTool.Listeners.Unequipped();
&#9;&#9;end;

&#9;&#9;CurrentTool = NewTool;

&#9;&#9;-- Recolor the handle
&#9;&#9;if ToolType == &apos;tool&apos; then
&#9;&#9;&#9;Tool.Handle.BrickColor = NewTool.Color;
&#9;&#9;end;

&#9;&#9;-- Highlight the right button on the dock
&#9;&#9;for _, Button in pairs( Dock.ToolButtons:GetChildren() ) do
&#9;&#9;&#9;Button.BackgroundTransparency = 1;
&#9;&#9;end;
&#9;&#9;local Button = Dock.ToolButtons:FindFirstChild( getToolName( NewTool ) .. &quot;Button&quot; );
&#9;&#9;if Button then
&#9;&#9;&#9;Button.BackgroundTransparency = 0;
&#9;&#9;end;

&#9;&#9;-- Run (if existent) the new tool&apos;s `Equipped` listener
&#9;&#9;if NewTool.Listeners.Equipped then
&#9;&#9;&#9;NewTool.Listeners.Equipped();
&#9;&#9;end;

&#9;end;
end;

function cloneSelection()
&#9;-- Clones the items in the selection

&#9;-- Make sure that there are items in the selection
&#9;if #Selection.Items &gt; 0 then

&#9;&#9;local item_copies = {};

&#9;&#9;-- Make a copy of every item in the selection and add it to table `item_copies`
&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;local ItemCopy = Item:Clone();
&#9;&#9;&#9;ItemCopy.Parent = Services.Workspace;
&#9;&#9;&#9;table.insert( item_copies, ItemCopy );
&#9;&#9;end;

&#9;&#9;-- Replace the selection with the copied items
&#9;&#9;Selection:clear();
&#9;&#9;for _, Item in pairs( item_copies ) do
&#9;&#9;&#9;Selection:add( Item );
&#9;&#9;end;

&#9;&#9;local HistoryRecord = {
&#9;&#9;&#9;copies = item_copies;
&#9;&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;&#9;for _, Copy in pairs( self.copies ) do
&#9;&#9;&#9;&#9;&#9;if Copy then
&#9;&#9;&#9;&#9;&#9;&#9;Copy.Parent = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;&#9;apply = function ( self )
&#9;&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;&#9;for _, Copy in pairs( self.copies ) do
&#9;&#9;&#9;&#9;&#9;if Copy then
&#9;&#9;&#9;&#9;&#9;&#9;Copy.Parent = Services.Workspace;
&#9;&#9;&#9;&#9;&#9;&#9;Copy:MakeJoints();
&#9;&#9;&#9;&#9;&#9;&#9;Selection:add( Copy );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;};
&#9;&#9;History:add( HistoryRecord );

&#9;&#9;-- Play a confirmation sound
&#9;&#9;local Sound = RbxUtility.Create &quot;Sound&quot; {
&#9;&#9;&#9;Name = &quot;BTActionCompletionSound&quot;;
&#9;&#9;&#9;Pitch = 1.5;
&#9;&#9;&#9;SoundId = action_completion_sound;
&#9;&#9;&#9;Volume = 1;
&#9;&#9;&#9;Parent = Player or Services.SoundService;
&#9;&#9;};
&#9;&#9;Sound:Play();
&#9;&#9;Sound:Destroy();

&#9;&#9;-- Highlight the outlines of the new parts
&#9;&#9;coroutine.wrap( function ()
&#9;&#9;&#9;for transparency = 1, 0.5, -0.1 do
&#9;&#9;&#9;&#9;for Item, SelectionBox in pairs( SelectionBoxes ) do
&#9;&#9;&#9;&#9;&#9;SelectionBox.Transparency = transparency;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;wait( 0.1 );
&#9;&#9;&#9;end;
&#9;&#9;end )();

&#9;end;

end;

function deleteSelection()
&#9;-- Deletes the items in the selection

&#9;if #Selection.Items == 0 then
&#9;&#9;return;
&#9;end;

&#9;local selection_items = _cloneTable( Selection.Items );

&#9;-- Create a history record
&#9;local HistoryRecord = {
&#9;&#9;targets = selection_items;
&#9;&#9;parents = {};
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.Parent = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.Parent = self.parents[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;for _, Item in pairs( selection_items ) do
&#9;&#9;HistoryRecord.parents[Item] = Item.Parent;
&#9;&#9;Item.Parent = nil;
&#9;end;

&#9;History:add( HistoryRecord );

end;

function prismSelect()
&#9;-- Selects all the parts within the area of the selected parts

&#9;-- Make sure parts to define the area are present
&#9;if #Selection.Items == 0 then
&#9;&#9;return;
&#9;end;

&#9;local parts = {};

&#9;-- Get all the parts in workspace
&#9;local workspace_parts = {};
&#9;local workspace_children = _getAllDescendants( Services.Workspace );
&#9;for _, Child in pairs( workspace_children ) do
&#9;&#9;if Child:IsA( &apos;BasePart&apos; ) and not Selection:find( Child ) then
&#9;&#9;&#9;table.insert( workspace_parts, Child );
&#9;&#9;end;
&#9;end;

&#9;-- Go through each part and perform area tests on each one
&#9;local checks = {};
&#9;for _, Item in pairs( workspace_parts ) do
&#9;&#9;checks[Item] = 0;
&#9;&#9;for _, SelectionItem in pairs( Selection.Items ) do

&#9;&#9;&#9;-- Calculate the position of the item in question in relation to the area-defining parts
&#9;&#9;&#9;local offset = SelectionItem.CFrame:toObjectSpace( Item.CFrame );
&#9;&#9;&#9;local extents = SelectionItem.Size / 2;

&#9;&#9;&#9;-- Check the item off if it passed this test (if it&apos;s within the range of the extents)
&#9;&#9;&#9;if ( math.abs( offset.x ) &lt;= extents.x ) and ( math.abs( offset.y ) &lt;= extents.y ) and ( math.abs( offset.z ) &lt;= extents.z ) then
&#9;&#9;&#9;&#9;checks[Item] = checks[Item] + 1;
&#9;&#9;&#9;end;

&#9;&#9;end;
&#9;end;

&#9;-- Delete the parts that were used to select the area
&#9;local selection_items = _cloneTable( Selection.Items );
&#9;local selection_item_parents = {};
&#9;for _, Item in pairs( selection_items ) do
&#9;&#9;selection_item_parents[Item] = Item.Parent;
&#9;&#9;Item.Parent = nil;
&#9;end;

&#9;-- Select the parts that passed any area checks
&#9;for _, Item in pairs( workspace_parts ) do
&#9;&#9;if checks[Item] &gt; 0 then
&#9;&#9;&#9;Selection:add( Item );
&#9;&#9;end;
&#9;end;

&#9;-- Add a history record
&#9;History:add( {
&#9;&#9;selection_parts = selection_items;
&#9;&#9;selection_part_parents = selection_item_parents;
&#9;&#9;new_selection = _cloneTable( Selection.Items );
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Item in pairs( self.selection_parts ) do
&#9;&#9;&#9;&#9;Item.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;&#9;for _, Item in pairs( self.new_selection ) do
&#9;&#9;&#9;&#9;Selection:add( Item );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Item in pairs( self.selection_parts ) do
&#9;&#9;&#9;&#9;Item.Parent = self.selection_part_parents[Item];
&#9;&#9;&#9;&#9;Selection:add( Item );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;} );

end;

function toggleHelp()

&#9;-- Make sure the dock is ready
&#9;if not Dock then
&#9;&#9;return;
&#9;end;

&#9;-- Toggle the visibility of the help tooltip
&#9;Dock.HelpInfo.Visible = not Dock.HelpInfo.Visible;

end;

function getToolName( tool )
&#9;-- Returns the name of `tool` as registered in `Tools`

&#9;local name_search = _findTableOccurrences( Tools, tool );
&#9;if #name_search &gt; 0 then
&#9;&#9;return name_search[1];
&#9;end;

end;

function isSelectable( Object )
&#9;-- Returns whether `Object` is selectable

&#9;if not Object or not Object.Parent or not Object:IsA( &quot;BasePart&quot; ) or Object.Locked or Selection:find( Object ) then
&#9;&#9;return false;
&#9;end;

&#9;-- If it passes all checks, return true
&#9;return true;
end;

UpdateNotificationShown = false;
function ShowUpdateNotification()
&#9;-- Displays a notification if there&apos;s a new update to the tool

&#9;-- Make sure that the notification hasn&apos;t already been shown
&#9;if UpdateNotificationShown then
&#9;&#9;return;
&#9;end;

&#9;-- Check the most recent version number
&#9;local AssetInfo&#9;&#9;&#9;= Services.MarketplaceService:GetProductInfo( ToolAssetID, Enum.InfoType.Asset );
&#9;local VersionID &#9;&#9;= AssetInfo.Description:match( &apos;%[Version: (.+)%]&apos; );
&#9;local CurrentVersionID&#9;= ( Tool:WaitForChild &apos;Version&apos; ).Value;

&#9;-- If the most recent version ID differs from the current tool&apos;s version ID,
&#9;-- notify the user that this version is outdated
&#9;if VersionID ~= CurrentVersionID then
&#9;&#9;-- Display the notification and hide it after a while
&#9;&#9;local Notification &#9;&#9;&#9;= Tool.Interfaces.BTUpdateNotification:Clone();
&#9;&#9;Notification.Parent &#9;&#9;= Dock;
&#9;&#9;UpdateNotificationShown&#9;&#9;= true;
&#9;&#9;Services.Debris:AddItem( Notification, 4 );
&#9;end;
end;

-- Keep some state data
clicking = false;
selecting = false;
click_x, click_y = 0, 0;
override_selection = false;

SelectionBoxes = {};
SelectionExistenceListeners = {};
SelectionBoxColor = BrickColor.new( &quot;Cyan&quot; );
TargetBox = nil;

-- Keep a container for temporary connections
-- from the platform
Connections = {};

-- Make sure the UI container gets placed
UI = RbxUtility.Create &quot;ScreenGui&quot; {
&#9;Name = &quot;Building Tools by F3X (UI)&quot;
};
if ToolType == &apos;tool&apos; then
&#9;UI.Parent = GUIContainer;
elseif ToolType == &apos;plugin&apos; then
&#9;UI.Parent = Services.CoreGui;
end;

Dragger = nil;

function updateSelectionBoxColor()
&#9;-- Updates the color of the selectionboxes
&#9;for _, SelectionBox in pairs( SelectionBoxes ) do
&#9;&#9;SelectionBox.Color = SelectionBoxColor;
&#9;end;
end;

Selection = {

&#9;[&quot;Items&quot;] = {};

&#9;-- Provide events to listen to changes in the selection
&#9;[&quot;Changed&quot;] = RbxUtility.CreateSignal();
&#9;[&quot;ItemAdded&quot;] = RbxUtility.CreateSignal();
&#9;[&quot;ItemRemoved&quot;] = RbxUtility.CreateSignal();

&#9;-- Provide a method to get an item&apos;s index in the selection
&#9;[&quot;find&quot;] = function ( self, Needle )

&#9;&#9;-- Look through all the selected items and return the matching item&apos;s index
&#9;&#9;for item_index, Item in pairs( self.Items ) do
&#9;&#9;&#9;if Item == Needle then
&#9;&#9;&#9;&#9;return item_index;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- Otherwise, return `nil`

&#9;end;

&#9;-- Provide a method to add items to the selection
&#9;[&quot;add&quot;] = function ( self, NewPart )

&#9;&#9;-- Make sure `NewPart` is selectable
&#9;&#9;if not isSelectable( NewPart ) then
&#9;&#9;&#9;return false;
&#9;&#9;end;

&#9;&#9;-- Make sure `NewPart` isn&apos;t already in the selection
&#9;&#9;if #_findTableOccurrences( self.Items, NewPart ) &gt; 0 then
&#9;&#9;&#9;return false;
&#9;&#9;end;

&#9;&#9;-- Insert it into the selection
&#9;&#9;table.insert( self.Items, NewPart );

&#9;&#9;-- Add its SelectionBox
&#9;&#9;SelectionBoxes[NewPart] = Instance.new( &quot;SelectionBox&quot;, UI );
&#9;&#9;SelectionBoxes[NewPart].Name = &quot;BTSelectionBox&quot;;
&#9;&#9;SelectionBoxes[NewPart].Color = SelectionBoxColor;
&#9;&#9;SelectionBoxes[NewPart].Adornee = NewPart;
&#9;&#9;SelectionBoxes[NewPart].Transparency = 0.5;

&#9;&#9;-- Remove any target selection box focus
&#9;&#9;if NewPart == TargetBox.Adornee then
&#9;&#9;&#9;TargetBox.Adornee = nil;
&#9;&#9;end;

&#9;&#9;-- Make sure to remove the item from the selection when it&apos;s deleted
&#9;&#9;SelectionExistenceListeners[NewPart] = NewPart.AncestryChanged:connect( function ( Object, NewParent )
&#9;&#9;&#9;if NewParent == nil then
&#9;&#9;&#9;&#9;Selection:remove( NewPart );
&#9;&#9;&#9;end;
&#9;&#9;end );

&#9;&#9;-- Provide a reference to the last item added to the selection (i.e. NewPart)
&#9;&#9;self:focus( NewPart );

&#9;&#9;-- Fire events
&#9;&#9;self.ItemAdded:fire( NewPart );
&#9;&#9;self.Changed:fire();

&#9;end;

&#9;-- Provide a method to remove items from the selection
&#9;[&quot;remove&quot;] = function ( self, Item )

&#9;&#9;-- Make sure selection item `Item` exists
&#9;&#9;if not self:find( Item ) then
&#9;&#9;&#9;return false;
&#9;&#9;end;

&#9;&#9;-- Remove `Item`&apos;s SelectionBox
&#9;&#9;local SelectionBox = SelectionBoxes[Item];
&#9;&#9;if SelectionBox then
&#9;&#9;&#9;SelectionBox:Destroy();
&#9;&#9;end;
&#9;&#9;SelectionBoxes[Item] = nil;

&#9;&#9;-- Delete the item from the selection
&#9;&#9;table.remove( self.Items, self:find( Item ) );

&#9;&#9;-- If it was logged as the last item, change it
&#9;&#9;if self.Last == Item then
&#9;&#9;&#9;self:focus( ( #self.Items &gt; 0 ) and self.Items[#self.Items] or nil );
&#9;&#9;end;

&#9;&#9;-- Delete the existence listeners of the item
&#9;&#9;SelectionExistenceListeners[Item]:disconnect();
&#9;&#9;SelectionExistenceListeners[Item] = nil;

&#9;&#9;-- Fire events
&#9;&#9;self.ItemRemoved:fire( Item );
&#9;&#9;self.Changed:fire();

&#9;end;

&#9;-- Provide a method to clear the selection
&#9;[&quot;clear&quot;] = function ( self )

&#9;&#9;-- Go through all the items in the selection and call `self.remove` on them
&#9;&#9;for _, Item in pairs( _cloneTable( self.Items ) ) do
&#9;&#9;&#9;self:remove( Item );
&#9;&#9;end;

&#9;end;

&#9;-- Provide a method to change the focus of the selection
&#9;[&quot;focus&quot;] = function ( self, NewFocus )

&#9;&#9;-- Change the focus
&#9;&#9;self.Last = NewFocus;

&#9;&#9;-- Fire events
&#9;&#9;self.Changed:fire();

&#9;end;

};

-- Keep the Studio selection up-to-date (if applicable)
if ToolType == &apos;plugin&apos; then
&#9;Selection.Changed:connect( function ()
&#9;&#9;Services.Selection:Set( Selection.Items );
&#9;end );
end;

Tools = {};

------------------------------------------
-- Define other utilities needed by tools
------------------------------------------

function createDropdown()

&#9;local Frame = RbxUtility.Create &quot;Frame&quot; {
&#9;&#9;Name = &quot;Dropdown&quot;;
&#9;&#9;Size = UDim2.new( 0, 20, 0, 20 );
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;BorderSizePixel = 0;
&#9;&#9;ClipsDescendants = true;
&#9;};

&#9;RbxUtility.Create &quot;ImageLabel&quot; {
&#9;&#9;Parent = Frame;
&#9;&#9;Name = &quot;Arrow&quot;;
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;BorderSizePixel = 0;
&#9;&#9;Image = expand_arrow;
&#9;&#9;Position = UDim2.new( 1, -21, 0, 3 );
&#9;&#9;Size = UDim2.new( 0, 20, 0, 20 );
&#9;&#9;ZIndex = 3;
&#9;};

&#9;local DropdownObject = {
&#9;&#9;-- Provide access to the actual frame
&#9;&#9;Frame = Frame;

&#9;&#9;-- Keep a list of all the options in the dropdown
&#9;&#9;_options = {};

&#9;&#9;-- Provide a function to add options to the dropdown
&#9;&#9;addOption = function ( self, option )

&#9;&#9;&#9;-- Add the option to the list
&#9;&#9;&#9;table.insert( self._options, option );

&#9;&#9;&#9;-- Create the GUI for the option
&#9;&#9;&#9;local Button = RbxUtility.Create &quot;TextButton&quot; {
&#9;&#9;&#9;&#9;Parent = self.Frame;
&#9;&#9;&#9;&#9;BackgroundColor3 = Color3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;BackgroundTransparency = 0.3;
&#9;&#9;&#9;&#9;BorderColor3 = Color3.new( 27 / 255, 42 / 255, 53 / 255 );
&#9;&#9;&#9;&#9;BorderSizePixel = 1;
&#9;&#9;&#9;&#9;Name = option;
&#9;&#9;&#9;&#9;Position = UDim2.new( math.ceil( #self._options / 9 ) - 1, 0, 0, 25 * ( ( #self._options % 9 == 0 ) and 9 or ( #self._options % 9 ) ) );
&#9;&#9;&#9;&#9;Size = UDim2.new( 1, 0, 0, 25 );
&#9;&#9;&#9;&#9;ZIndex = 3;
&#9;&#9;&#9;&#9;Text = &quot;&quot;;
&#9;&#9;&#9;};
&#9;&#9;&#9;local Label = RbxUtility.Create &quot;TextLabel&quot; {
&#9;&#9;&#9;&#9;Parent = Button;
&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;&#9;Position = UDim2.new( 0, 6, 0, 0 );
&#9;&#9;&#9;&#9;Size = UDim2.new( 1, -30, 1, 0 );
&#9;&#9;&#9;&#9;ZIndex = 3;
&#9;&#9;&#9;&#9;Font = Enum.Font.ArialBold;
&#9;&#9;&#9;&#9;FontSize = Enum.FontSize.Size12;
&#9;&#9;&#9;&#9;Text = option;
&#9;&#9;&#9;&#9;TextColor3 = Color3.new( 1, 1, 1 );
&#9;&#9;&#9;&#9;TextXAlignment = Enum.TextXAlignment.Left;
&#9;&#9;&#9;&#9;TextYAlignment = Enum.TextYAlignment.Center;
&#9;&#9;&#9;};

&#9;&#9;&#9;-- Return the button object
&#9;&#9;&#9;return Button;

&#9;&#9;end;

&#9;&#9;selectOption = function ( self, option )
&#9;&#9;&#9;self.Frame.MainButton.CurrentOption.Text = option;
&#9;&#9;end;

&#9;&#9;open = false;

&#9;&#9;toggle = function ( self )

&#9;&#9;&#9;-- If it&apos;s open, close it
&#9;&#9;&#9;if self.open then
&#9;&#9;&#9;&#9;self.Frame.MainButton.BackgroundTransparency = 0.3;
&#9;&#9;&#9;&#9;self.Frame.ClipsDescendants = true;
&#9;&#9;&#9;&#9;self.open = false;

&#9;&#9;&#9;-- If it&apos;s not open, open it
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self.Frame.MainButton.BackgroundTransparency = 0;
&#9;&#9;&#9;&#9;self.Frame.ClipsDescendants = false;
&#9;&#9;&#9;&#9;self.open = true;
&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;};

&#9;-- Create the GUI for the option
&#9;local MainButton = RbxUtility.Create &quot;TextButton&quot; {
&#9;&#9;Parent = Frame;
&#9;&#9;Name = &quot;MainButton&quot;;
&#9;&#9;BackgroundColor3 = Color3.new( 0, 0, 0 );
&#9;&#9;BackgroundTransparency = 0.3;
&#9;&#9;BorderColor3 = Color3.new( 27 / 255, 42 / 255, 53 / 255 );
&#9;&#9;BorderSizePixel = 1;
&#9;&#9;Position = UDim2.new( 0, 0, 0, 0 );
&#9;&#9;Size = UDim2.new( 1, 0, 0, 25 );
&#9;&#9;ZIndex = 2;
&#9;&#9;Text = &quot;&quot;;

&#9;&#9;-- Toggle the dropdown when pressed
&#9;&#9;[RbxUtility.Create.E &quot;MouseButton1Up&quot;] = function ()
&#9;&#9;&#9;DropdownObject:toggle();
&#9;&#9;end;
&#9;};
&#9;RbxUtility.Create &quot;TextLabel&quot; {
&#9;&#9;Parent = MainButton;
&#9;&#9;Name = &quot;CurrentOption&quot;;
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;BorderSizePixel = 0;
&#9;&#9;Position = UDim2.new( 0, 6, 0, 0 );
&#9;&#9;Size = UDim2.new( 1, -30, 1, 0 );
&#9;&#9;ZIndex = 3;
&#9;&#9;Font = Enum.Font.ArialBold;
&#9;&#9;FontSize = Enum.FontSize.Size12;
&#9;&#9;Text = &quot;&quot;;
&#9;&#9;TextColor3 = Color3.new( 1, 1, 1 );
&#9;&#9;TextXAlignment = Enum.TextXAlignment.Left;
&#9;&#9;TextYAlignment = Enum.TextYAlignment.Center;
&#9;};

&#9;return DropdownObject;

end;

------------------------------------------
-- Provide an interface to the 2D
-- selection system
------------------------------------------

Select2D = {

&#9;-- Keep state data
&#9;[&quot;enabled&quot;] = false;

&#9;-- Keep objects
&#9;[&quot;GUI&quot;] = nil;

&#9;-- Keep temporary, disposable connections
&#9;[&quot;Connections&quot;] = {};

&#9;-- Provide an interface to the functions
&#9;[&quot;start&quot;] = function ( self )

&#9;&#9;if enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;self.enabled = true;

&#9;&#9;-- Create the GUI
&#9;&#9;self.GUI = RbxUtility.Create &quot;ScreenGui&quot; {
&#9;&#9;&#9;Name = &quot;BTSelectionRectangle&quot;;
&#9;&#9;&#9;Parent = UI;
&#9;&#9;};

&#9;&#9;local Rectangle = RbxUtility.Create &quot;Frame&quot; {
&#9;&#9;&#9;Name = &quot;Rectangle&quot;;
&#9;&#9;&#9;Active = false;
&#9;&#9;&#9;Parent = self.GUI;
&#9;&#9;&#9;BackgroundColor3 = Color3.new( 0, 0, 0 );
&#9;&#9;&#9;BackgroundTransparency = 0.5;
&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;Position = UDim2.new( 0, math.min( click_x, Mouse.X ), 0, math.min( click_y, Mouse.Y ) );
&#9;&#9;&#9;Size = UDim2.new( 0, math.max( click_x, Mouse.X ) - math.min( click_x, Mouse.X ), 0, math.max( click_y, Mouse.Y ) - math.min( click_y, Mouse.Y ) );
&#9;&#9;};

&#9;&#9;-- Listen for when to resize the selection
&#9;&#9;self.Connections.SelectionResize = Mouse.Move:connect( function ()
&#9;&#9;&#9;Rectangle.Position = UDim2.new( 0, math.min( click_x, Mouse.X ), 0, math.min( click_y, Mouse.Y ) );
&#9;&#9;&#9;Rectangle.Size = UDim2.new( 0, math.max( click_x, Mouse.X ) - math.min( click_x, Mouse.X ), 0, math.max( click_y, Mouse.Y ) - math.min( click_y, Mouse.Y ) );
&#9;&#9;end );

&#9;&#9;-- Listen for when the selection ends
&#9;&#9;self.Connections.SelectionEnd = Mouse.Button1Up:connect( function ()
&#9;&#9;&#9;self:select();
&#9;&#9;&#9;self:finish();
&#9;&#9;end );

&#9;end;

&#9;[&quot;select&quot;] = function ( self )

&#9;&#9;if not self.enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;for _, Object in pairs( _getAllDescendants( Services.Workspace ) ) do

&#9;&#9;&#9;-- Make sure we can select this part
&#9;&#9;&#9;if isSelectable( Object ) then

&#9;&#9;&#9;&#9;-- Check if the part is rendered within the range of the selection area
&#9;&#9;&#9;&#9;local PartPosition = _pointToScreenSpace( Object.Position );
&#9;&#9;&#9;&#9;if PartPosition then
&#9;&#9;&#9;&#9;&#9;local left_check = PartPosition.x &gt;= self.GUI.Rectangle.AbsolutePosition.x;
&#9;&#9;&#9;&#9;&#9;local right_check = PartPosition.x &lt;= ( self.GUI.Rectangle.AbsolutePosition.x + self.GUI.Rectangle.AbsoluteSize.x );
&#9;&#9;&#9;&#9;&#9;local top_check = PartPosition.y &gt;= self.GUI.Rectangle.AbsolutePosition.y;
&#9;&#9;&#9;&#9;&#9;local bottom_check = PartPosition.y &lt;= ( self.GUI.Rectangle.AbsolutePosition.y + self.GUI.Rectangle.AbsoluteSize.y );

&#9;&#9;&#9;&#9;&#9;-- If the part is within the selection area, select it
&#9;&#9;&#9;&#9;&#9;if left_check and right_check and top_check and bottom_check then
&#9;&#9;&#9;&#9;&#9;&#9;Selection:add( Object );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end;

&#9;[&quot;finish&quot;] = function ( self )

&#9;&#9;if not self.enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Disconnect temporary connections
&#9;&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;&#9;Connection:disconnect();
&#9;&#9;&#9;self.Connections[connection_index] = nil;
&#9;&#9;end;

&#9;&#9;-- Remove temporary objects
&#9;&#9;self.GUI:Destroy();
&#9;&#9;self.GUI = nil;

&#9;&#9;self.enabled = false;

&#9;end;

};

------------------------------------------
-- Provide an interface to the edge
-- selection system
------------------------------------------
SelectEdge = {

&#9;-- Keep state data
&#9;[&quot;enabled&quot;] = false;
&#9;[&quot;started&quot;] = false;

&#9;-- Keep objects
&#9;[&quot;Marker&quot;] = nil;
&#9;[&quot;MarkerOutline&quot;] = RbxUtility.Create &quot;SelectionBox&quot; {
&#9;&#9;Color = BrickColor.new( &quot;Institutional white&quot; );
&#9;&#9;Parent = UI;
&#9;&#9;Name = &quot;BTEdgeSelectionMarkerOutline&quot;;
&#9;};

&#9;-- Keep temporary, disposable connections
&#9;[&quot;Connections&quot;] = {};

&#9;-- Provide an interface to the functions
&#9;[&quot;start&quot;] = function ( self, edgeSelectionCallback )

&#9;&#9;if self.started then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Listen for when to engage in selection
&#9;&#9;self.Connections.KeyListener = Mouse.KeyDown:connect( function ( key )

&#9;&#9;&#9;local key = key:lower();
&#9;&#9;&#9;local key_code = key:byte();

&#9;&#9;&#9;if key == &quot;t&quot; and #Selection.Items &gt; 0 then
&#9;&#9;&#9;&#9;self:enable( edgeSelectionCallback );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;self.started = true;

&#9;end;

&#9;[&quot;enable&quot;] = function ( self, edgeSelectionCallback )

&#9;&#9;if self.enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;self.Connections.MoveListener = Mouse.Move:connect( function ()

&#9;&#9;&#9;-- Make sure the target can be selected
&#9;&#9;&#9;if not Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;return;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Calculate the proximity to each edge
&#9;&#9;&#9;local Proximity = {};
&#9;&#9;&#9;local edges = {};

&#9;&#9;&#9;-- Create shortcuts to certain things that are expensive to call constantly
&#9;&#9;&#9;local table_insert = table.insert;
&#9;&#9;&#9;local newCFrame = CFrame.new;
&#9;&#9;&#9;local PartCFrame = Mouse.Target.CFrame;
&#9;&#9;&#9;local partCFrameOffset = PartCFrame.toWorldSpace;
&#9;&#9;&#9;local PartSize = Mouse.Target.Size / 2;
&#9;&#9;&#9;local size_x, size_y, size_z = PartSize.x, PartSize.y, PartSize.z;

&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, 0, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, size_y, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, 0, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, size_y, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, 0, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, 0, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, -size_y, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, 0, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, -size_y, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, 0, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, 0, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, size_y, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, 0, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, -size_y, -size_z ) ) );

&#9;&#9;&#9;-- Calculate the proximity of every edge to the mouse
&#9;&#9;&#9;for edge_index, Edge in pairs( edges ) do
&#9;&#9;&#9;&#9;Proximity[edge_index] = ( Mouse.Hit.p - Edge.p ).magnitude;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Get the closest edge to the mouse
&#9;&#9;&#9;local highest_proximity = 1;
&#9;&#9;&#9;for proximity_index, proximity in pairs( Proximity ) do
&#9;&#9;&#9;&#9;if proximity &lt; Proximity[highest_proximity] then
&#9;&#9;&#9;&#9;&#9;highest_proximity = proximity_index;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Replace the current target edge (if any)
&#9;&#9;&#9;local ClosestEdge = edges[highest_proximity];

&#9;&#9;&#9;if self.Marker then
&#9;&#9;&#9;&#9;self.Marker:Destroy();
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.Marker = RbxUtility.Create &quot;Part&quot; {
&#9;&#9;&#9;&#9;Name = &quot;BTEdgeSelectionMarker&quot;;
&#9;&#9;&#9;&#9;Anchored = true;
&#9;&#9;&#9;&#9;Locked = true;
&#9;&#9;&#9;&#9;CanCollide = false;
&#9;&#9;&#9;&#9;Transparency = 1;
&#9;&#9;&#9;&#9;FormFactor = Enum.FormFactor.Custom;
&#9;&#9;&#9;&#9;Size = Vector3.new( 0.2, 0.2, 0.2 );
&#9;&#9;&#9;&#9;CFrame = ClosestEdge;
&#9;&#9;&#9;};

&#9;&#9;&#9;self.MarkerOutline.Adornee = self.Marker;

&#9;&#9;end );

&#9;&#9;self.Connections.ClickListener = Mouse.Button1Up:connect( function ()
&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;self:select( edgeSelectionCallback );
&#9;&#9;end );

&#9;&#9;self.enabled = true;

&#9;end;

&#9;[&quot;select&quot;] = function ( self, callback )

&#9;&#9;if not self.enabled or not self.Marker then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;self.MarkerOutline.Adornee = self.Marker;

&#9;&#9;callback( self.Marker );

&#9;&#9;-- Stop treating it like a marker
&#9;&#9;self.Marker = nil;

&#9;&#9;self:disable();

&#9;end;

&#9;[&quot;disable&quot;] = function ( self )

&#9;&#9;if not self.enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Disconnect unnecessary temporary connections
&#9;&#9;if self.Connections.ClickListener then
&#9;&#9;&#9;self.Connections.ClickListener:disconnect();
&#9;&#9;&#9;self.Connections.ClickListener = nil;
&#9;&#9;end;
&#9;&#9;if self.Connections.MoveListener then
&#9;&#9;&#9;self.Connections.MoveListener:disconnect();
&#9;&#9;&#9;self.Connections.MoveListener = nil;
&#9;&#9;end;

&#9;&#9;-- Remove temporary objects
&#9;&#9;if self.Marker then
&#9;&#9;&#9;self.Marker:Destroy();
&#9;&#9;end;
&#9;&#9;self.Marker = nil;

&#9;&#9;self.MarkerOutline.Adornee = nil;
&#9;&#9;self.enabled = false;

&#9;end;

&#9;[&quot;stop&quot;] = function ( self )

&#9;&#9;if not self.started then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Cancel any ongoing selection
&#9;&#9;self:disable();

&#9;&#9;-- Disconnect &amp; remove all temporary connections
&#9;&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;&#9;Connection:disconnect();
&#9;&#9;&#9;self.Connections[connection_index] = nil;
&#9;&#9;end;

&#9;&#9;-- Remove temporary objects
&#9;&#9;if self.Marker then
&#9;&#9;&#9;self.Marker:Destroy();
&#9;&#9;end;

&#9;&#9;self.started = false;

&#9;end;

};

------------------------------------------
-- Provide an interface to the history
-- system
------------------------------------------
History = {

&#9;-- Keep a container for the actual history data
&#9;[&quot;Data&quot;] = {};

&#9;-- Keep state data
&#9;[&quot;index&quot;] = 0;

&#9;-- Provide events for the platform to listen for changes
&#9;[&quot;Changed&quot;] = RbxUtility.CreateSignal();

&#9;-- Provide functions to control the system
&#9;[&quot;undo&quot;] = function ( self )

&#9;&#9;-- Make sure we&apos;re not getting out of boundary
&#9;&#9;if self.index - 1 &lt; 0 then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Fetch the history record &amp; unapply it
&#9;&#9;local CurrentRecord = self.Data[self.index];
&#9;&#9;CurrentRecord:unapply();

&#9;&#9;-- Go back in the history
&#9;&#9;self.index = self.index - 1;

&#9;&#9;-- Fire the relevant events
&#9;&#9;self.Changed:fire();

&#9;end;

&#9;[&quot;redo&quot;] = function ( self )

&#9;&#9;-- Make sure we&apos;re not getting out of boundary
&#9;&#9;if self.index + 1 &gt; #self.Data then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Go forward in the history
&#9;&#9;self.index = self.index + 1;

&#9;&#9;-- Fetch the new history record &amp; apply it
&#9;&#9;local NewRecord = self.Data[self.index];
&#9;&#9;NewRecord:apply();

&#9;&#9;-- Fire the relevant events
&#9;&#9;self.Changed:fire();

&#9;end;

&#9;[&quot;add&quot;] = function ( self, Record )

&#9;&#9;-- Place the record in its right spot
&#9;&#9;self.Data[self.index + 1] = Record;

&#9;&#9;-- Advance the history index
&#9;&#9;self.index = self.index + 1;

&#9;&#9;-- Clear out the following history
&#9;&#9;for index = self.index + 1, #self.Data do
&#9;&#9;&#9;self.Data[index] = nil;
&#9;&#9;end;

&#9;&#9;-- Fire the relevant events
&#9;&#9;self.Changed:fire();

&#9;end;

};


------------------------------------------
-- Provide an interface color picker
-- system
------------------------------------------
ColorPicker = {
&#9;
&#9;-- Keep some state data
&#9;[&quot;enabled&quot;] = false;
&#9;[&quot;callback&quot;] = nil;
&#9;[&quot;track_mouse&quot;] = nil;
&#9;[&quot;hue&quot;] = 0;
&#9;[&quot;saturation&quot;] = 1;
&#9;[&quot;value&quot;] = 1;

&#9;-- Keep the current GUI here
&#9;[&quot;GUI&quot;] = nil;

&#9;-- Keep temporary, disposable connections here
&#9;[&quot;Connections&quot;] = {};

&#9;-- Provide an interface to the functions
&#9;[&quot;start&quot;] = function ( self, callback, start_color )

&#9;&#9;-- Replace any existing color pickers
&#9;&#9;if self.enabled then
&#9;&#9;&#9;self:cancel();
&#9;&#9;end;
&#9;&#9;self.enabled = true;

&#9;&#9;-- Create the GUI
&#9;&#9;self.GUI = Tool.Interfaces.BTHSVColorPicker:Clone();
&#9;&#9;self.GUI.Parent = UI;

&#9;&#9;-- Register the callback function for when we&apos;re done here
&#9;&#9;self.callback = callback;

&#9;&#9;-- Update the GUI
&#9;&#9;local start_color = start_color or Color3.new( 1, 0, 0 );
&#9;&#9;self:_changeColor( _RGBToHSV( start_color.r, start_color.g, start_color.b ) );

&#9;&#9;-- Add functionality to the GUI&apos;s interactive elements
&#9;&#9;table.insert( self.Connections, self.GUI.HueSaturation.MouseButton1Down:connect( function ( x, y )
&#9;&#9;&#9;self.track_mouse = &apos;hue-saturation&apos;;
&#9;&#9;&#9;self:_onMouseMove( x, y );
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.HueSaturation.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self.track_mouse = nil;
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.MouseMoved:connect( function ( x, y )
&#9;&#9;&#9;self:_onMouseMove( x, y );
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.Value.MouseButton1Down:connect( function ( x, y )
&#9;&#9;&#9;self.track_mouse = &apos;value&apos;;
&#9;&#9;&#9;self:_onMouseMove( x, y );
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.Value.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self.track_mouse = nil;
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.OkButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:finish();
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.CancelButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:cancel();
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.HueOption.Input.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.GUI.HueOption.Input.TextBox:CaptureFocus();
&#9;&#9;end ) );
&#9;&#9;table.insert( self.Connections, self.GUI.HueOption.Input.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( self.GUI.HueOption.Input.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 360 then
&#9;&#9;&#9;&#9;&#9;potential_new = 360;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:_changeColor( potential_new, self.saturation, self.value );
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:_updateGUI();
&#9;&#9;&#9;end;
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.SaturationOption.Input.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.GUI.SaturationOption.Input.TextBox:CaptureFocus();
&#9;&#9;end ) );
&#9;&#9;table.insert( self.Connections, self.GUI.SaturationOption.Input.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( ( self.GUI.SaturationOption.Input.TextBox.Text:gsub( &apos;%%&apos;, &apos;&apos; ) ) );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 100 then
&#9;&#9;&#9;&#9;&#9;potential_new = 100;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:_changeColor( self.hue, potential_new / 100, self.value );
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:_updateGUI();
&#9;&#9;&#9;end;
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.ValueOption.Input.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.GUI.ValueOption.Input.TextBox:CaptureFocus();
&#9;&#9;end ) );
&#9;&#9;table.insert( self.Connections, self.GUI.ValueOption.Input.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( ( self.GUI.ValueOption.Input.TextBox.Text:gsub( &apos;%%&apos;, &apos;&apos; ) ) );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;elseif potential_new &gt; 100 then
&#9;&#9;&#9;&#9;&#9;potential_new = 100;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:_changeColor( self.hue, self.saturation, potential_new / 100 );
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:_updateGUI();
&#9;&#9;&#9;end;
&#9;&#9;end ) );

&#9;end;

&#9;[&quot;_onMouseMove&quot;] = function ( self, x, y )
&#9;&#9;if not self.track_mouse then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;if self.track_mouse == &apos;hue-saturation&apos; then
&#9;&#9;&#9;-- Calculate the mouse position relative to the graph
&#9;&#9;&#9;local graph_x, graph_y = x - self.GUI.HueSaturation.AbsolutePosition.x, y - self.GUI.HueSaturation.AbsolutePosition.y;

&#9;&#9;&#9;-- Make sure we&apos;re not going out of bounds
&#9;&#9;&#9;if graph_x &lt; 0 then
&#9;&#9;&#9;&#9;graph_x = 0;
&#9;&#9;&#9;elseif graph_x &gt; self.GUI.HueSaturation.AbsoluteSize.x then
&#9;&#9;&#9;&#9;graph_x = self.GUI.HueSaturation.AbsoluteSize.x;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if graph_y &lt; 0 then
&#9;&#9;&#9;&#9;graph_y = 0;
&#9;&#9;&#9;elseif graph_y &gt; self.GUI.HueSaturation.AbsoluteSize.y then
&#9;&#9;&#9;&#9;graph_y = self.GUI.HueSaturation.AbsoluteSize.y;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Calculate the new color and change it
&#9;&#9;&#9;self:_changeColor( 359 * graph_x / 209, 1 - graph_y / 200, self.value );

&#9;&#9;elseif self.track_mouse == &apos;value&apos; then
&#9;&#9;&#9;-- Calculate the mouse position relative to the value bar
&#9;&#9;&#9;local bar_y = y - self.GUI.Value.AbsolutePosition.y;

&#9;&#9;&#9;-- Make sure we&apos;re not going out of bounds
&#9;&#9;&#9;if bar_y &lt; 0 then
&#9;&#9;&#9;&#9;bar_y = 0;
&#9;&#9;&#9;elseif bar_y &gt; self.GUI.Value.AbsoluteSize.y then
&#9;&#9;&#9;&#9;bar_y = self.GUI.Value.AbsoluteSize.y;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Calculate the new color and change it
&#9;&#9;&#9;self:_changeColor( self.hue, self.saturation, 1 - bar_y / 200 );
&#9;&#9;end;
&#9;end;

&#9;[&quot;_changeColor&quot;] = function ( self, hue, saturation, value )
&#9;&#9;if hue ~= hue then
&#9;&#9;&#9;hue = 359;
&#9;&#9;end;
&#9;&#9;self.hue = hue;
&#9;&#9;self.saturation = saturation == 0 and 0.01 or saturation;
&#9;&#9;self.value = value;
&#9;&#9;self:_updateGUI();
&#9;end;

&#9;[&quot;_updateGUI&quot;] = function ( self )

&#9;&#9;self.GUI.HueSaturation.Cursor.Position = UDim2.new( 0, 209 * self.hue / 360 - 8, 0, ( 1 - self.saturation ) * 200 - 8 );
&#9;&#9;self.GUI.Value.Cursor.Position = UDim2.new( 0, -2, 0, ( 1 - self.value ) * 200 - 8 );

&#9;&#9;local color = Color3.new( _HSVToRGB( self.hue, self.saturation, self.value ) );
&#9;&#9;self.GUI.ColorDisplay.BackgroundColor3 = color;
&#9;&#9;self.GUI.Value.ColorBG.BackgroundColor3 = Color3.new( _HSVToRGB( self.hue, self.saturation, 1 ) );

&#9;&#9;self.GUI.HueOption.Bar.BackgroundColor3 = color;
&#9;&#9;self.GUI.SaturationOption.Bar.BackgroundColor3 = color;
&#9;&#9;self.GUI.ValueOption.Bar.BackgroundColor3 = color;

&#9;&#9;self.GUI.HueOption.Input.TextBox.Text = math.floor( self.hue );
&#9;&#9;self.GUI.SaturationOption.Input.TextBox.Text = math.floor( self.saturation * 100 ) .. &quot;%&quot;;
&#9;&#9;self.GUI.ValueOption.Input.TextBox.Text = math.floor( self.value * 100 ) .. &quot;%&quot;;

&#9;end;

&#9;[&quot;finish&quot;] = function ( self )

&#9;&#9;if not self.enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Remove the GUI
&#9;&#9;if self.GUI then
&#9;&#9;&#9;self.GUI:Destroy();
&#9;&#9;end;
&#9;&#9;self.GUI = nil;
&#9;&#9;self.track_mouse = nil;

&#9;&#9;-- Disconnect all temporary connections
&#9;&#9;for connection_index, connection in pairs( self.Connections ) do
&#9;&#9;&#9;connection:disconnect();
&#9;&#9;&#9;self.Connections[connection_index] = nil;
&#9;&#9;end;

&#9;&#9;-- Call the callback function that was provided to us
&#9;&#9;self.callback( self.hue, self.saturation, self.value );
&#9;&#9;self.callback = nil;

&#9;&#9;self.enabled = false;

&#9;end;

&#9;[&quot;cancel&quot;] = function ( self )

&#9;&#9;if not self.enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Remove the GUI
&#9;&#9;if self.GUI then
&#9;&#9;&#9;self.GUI:Destroy();
&#9;&#9;end;
&#9;&#9;self.GUI = nil;
&#9;&#9;self.track_mouse = nil;

&#9;&#9;-- Disconnect all temporary connections
&#9;&#9;for connection_index, connection in pairs( self.Connections ) do
&#9;&#9;&#9;connection:disconnect();
&#9;&#9;&#9;self.Connections[connection_index] = nil;
&#9;&#9;end;

&#9;&#9;-- Call the callback function that was provided to us
&#9;&#9;self.callback();
&#9;&#9;self.callback = nil;

&#9;&#9;self.enabled = false;

&#9;end;

};

------------------------------------------
-- Provide an interface to the
-- import/export system
------------------------------------------
IE = {

&#9;[&quot;export&quot;] = function ()

&#9;&#9;if #Selection.Items == 0 then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;local serialized_selection = _serializeParts( Selection.Items );

&#9;&#9;-- Dump to logs
&#9;&#9;-- Services.TestService:Warn( false, &quot;[Building Tools by F3X] Exported Model: \n&quot; .. serialized_selection );

&#9;&#9;-- Get ready to upload to the web for retrieval
&#9;&#9;local upload_data;
&#9;&#9;local cancelUpload;

&#9;&#9;-- Create the export dialog
&#9;&#9;local Dialog = Tool.Interfaces.BTExportDialog:Clone();
&#9;&#9;Dialog.Loading.Size = UDim2.new( 1, 0, 0, 0 );
&#9;&#9;Dialog.Parent = UI;
&#9;&#9;Dialog.Loading:TweenSize( UDim2.new( 1, 0, 0, 80 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25 );
&#9;&#9;Dialog.Loading.CloseButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;cancelUpload();
&#9;&#9;&#9;Dialog:Destroy();
&#9;&#9;end );

&#9;&#9;-- Run the upload/post-upload/failure code in a coroutine
&#9;&#9;-- so it can be cancelled
&#9;&#9;coroutine.resume( coroutine.create( function ()
&#9;&#9;&#9;cancelUpload = function ()
&#9;&#9;&#9;&#9;coroutine.yield();
&#9;&#9;&#9;end;
&#9;&#9;&#9;local upload_attempt = ypcall( function ()
&#9;&#9;&#9;&#9;upload_data = PostAsync( &quot;http://www.f3xteam.com/bt/export&quot;, serialized_selection );
&#9;&#9;&#9;end );

&#9;&#9;&#9;-- Make sure we&apos;re in a server
&#9;&#9;&#9;if ToolType == &apos;plugin&apos; and not in_server then
&#9;&#9;&#9;&#9;Dialog.Loading.TextLabel.Text = &quot;Use Tools &gt; Test &gt; Start Server to export from Studio&quot;;
&#9;&#9;&#9;&#9;Dialog.Loading.TextLabel.TextWrapped = true;
&#9;&#9;&#9;&#9;Dialog.Loading.CloseButton.Position = UDim2.new( 0, 0, 0, 50 );
&#9;&#9;&#9;&#9;Dialog.Loading.CloseButton.Text = &apos;Got it&apos;;
&#9;&#9;&#9;&#9;return;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Fail graciously
&#9;&#9;&#9;if not upload_attempt then
&#9;&#9;&#9;&#9;Dialog.Loading.TextLabel.Text = &quot;Upload failed&quot;;
&#9;&#9;&#9;&#9;Dialog.Loading.CloseButton.Text = &apos;Ok :(&apos;;
&#9;&#9;&#9;&#9;return;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not ( upload_data and type( upload_data ) == &apos;string&apos; and upload_data:len() &gt; 0 ) then
&#9;&#9;&#9;&#9;Dialog.Loading.TextLabel.Text = &quot;Upload failed&quot;;
&#9;&#9;&#9;&#9;Dialog.Loading.CloseButton.Text = &apos;Ok ;(&apos;;
&#9;&#9;&#9;&#9;return;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not pcall( function () upload_data = RbxUtility.DecodeJSON( upload_data ); end ) or not upload_data then
&#9;&#9;&#9;&#9;Dialog.Loading.TextLabel.Text = &quot;Upload failed&quot;;
&#9;&#9;&#9;&#9;Dialog.Loading.CloseButton.Text = &quot;Ok :&apos;(&quot;;
&#9;&#9;&#9;&#9;return;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not upload_data.success then
&#9;&#9;&#9;&#9;Dialog.Loading.TextLabel.Text = &quot;Upload failed&quot;;
&#9;&#9;&#9;&#9;Dialog.Loading.CloseButton.Text = &quot;Ok :&apos;&apos;(&quot;;
&#9;&#9;&#9;end;

&#9;&#9;&#9;print( &quot;[Building Tools by F3X] Uploaded Export: &quot; .. upload_data.id );

&#9;&#9;&#9;Dialog.Loading.Visible = false;
&#9;&#9;&#9;Dialog.Info.Size = UDim2.new( 1, 0, 0, 0 );
&#9;&#9;&#9;Dialog.Info.CreationID.Text = upload_data.id;
&#9;&#9;&#9;Dialog.Info.Visible = true;
&#9;&#9;&#9;Dialog.Info:TweenSize( UDim2.new( 1, 0, 0, 75 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25 );
&#9;&#9;&#9;Dialog.Tip.Size = UDim2.new( 1, 0, 0, 0 );
&#9;&#9;&#9;Dialog.Tip.Visible = true;
&#9;&#9;&#9;Dialog.Tip:TweenSize( UDim2.new( 1, 0, 0, 30 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25 );
&#9;&#9;&#9;Dialog.Close.Size = UDim2.new( 1, 0, 0, 0 );
&#9;&#9;&#9;Dialog.Close.Visible = true;
&#9;&#9;&#9;Dialog.Close:TweenSize( UDim2.new( 1, 0, 0, 20 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25 );
&#9;&#9;&#9;Dialog.Close.Button.MouseButton1Up:connect( function ()
&#9;&#9;&#9;&#9;Dialog:Destroy();
&#9;&#9;&#9;end );

&#9;&#9;&#9;-- Play a confirmation sound
&#9;&#9;&#9;local Sound = RbxUtility.Create &quot;Sound&quot; {
&#9;&#9;&#9;&#9;Name = &quot;BTActionCompletionSound&quot;;
&#9;&#9;&#9;&#9;Pitch = 1.5;
&#9;&#9;&#9;&#9;SoundId = action_completion_sound;
&#9;&#9;&#9;&#9;Volume = 1;
&#9;&#9;&#9;&#9;Parent = Player or Services.SoundService;
&#9;&#9;&#9;};
&#9;&#9;&#9;Sound:Play();
&#9;&#9;&#9;Sound:Destroy();
&#9;&#9;end ) );

&#9;end;

};

------------------------------------------
-- Prepare the dock UI
------------------------------------------

Tooltips = {};

-- Wait for all parts of the base UI to fully replicate
if ToolType == &apos;tool&apos; then
&#9;local UIComponentCount = (Tool:WaitForChild &apos;UIComponentCount&apos;).Value;
&#9;repeat wait( 0.1 ) until #_getAllDescendants( Tool.Interfaces ) &gt;= UIComponentCount;
end;

-- Create the main GUI
Dock = Tool.Interfaces.BTDockGUI:Clone();
Dock.Parent = UI;
Dock.Visible = false;

-- Add functionality to each tool button
function RegisterToolButton( ToolButton )
&#9;-- Provides functionality to `ToolButton`

&#9;-- Get the tool name and the tool
&#9;local tool_name = ToolButton.Name:match( &quot;(.+)Button&quot; );

&#9;if tool_name then

&#9;&#9;-- Create the click connection
&#9;&#9;ToolButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;local Tool = Tools[tool_name];
&#9;&#9;&#9;if Tool then
&#9;&#9;&#9;&#9;equipTool( Tool );
&#9;&#9;&#9;end;
&#9;&#9;end );

&#9;&#9;ToolButton.MouseEnter:connect( function ()
&#9;&#9;&#9;local Tooltip = Tooltips[tool_name];
&#9;&#9;&#9;if Tooltip then
&#9;&#9;&#9;&#9;Tooltip:focus( &apos;button&apos; );
&#9;&#9;&#9;end;
&#9;&#9;end );

&#9;&#9;ToolButton.MouseLeave:connect( function ()
&#9;&#9;&#9;local Tooltip = Tooltips[tool_name];
&#9;&#9;&#9;if Tooltip then
&#9;&#9;&#9;&#9;Tooltip:unfocus( &apos;button&apos; );
&#9;&#9;&#9;end;
&#9;&#9;end );

&#9;end;
end;
for _, ToolButton in pairs( Dock.ToolButtons:GetChildren() ) do
&#9;RegisterToolButton( ToolButton );
end;

-- Prepare the tooltips
function RegisterTooltip( Tooltip )
&#9;local tool_name = Tooltip.Name:match( &quot;(.+)Info&quot; );

&#9;Tooltips[tool_name] = {

&#9;&#9;GUI = Tooltip;

&#9;&#9;button_focus = false;
&#9;&#9;tooltip_focus = false;

&#9;&#9;focus = function ( self, source )
&#9;&#9;&#9;if Dock.HelpInfo.Visible then
&#9;&#9;&#9;&#9;return;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if source == &apos;button&apos; then
&#9;&#9;&#9;&#9;self.button_focus = true;
&#9;&#9;&#9;elseif source == &apos;tooltip&apos; then
&#9;&#9;&#9;&#9;self.tooltip_focus = true;
&#9;&#9;&#9;end;
&#9;&#9;&#9;for _, Tooltip in pairs( Dock.Tooltips:GetChildren() ) do
&#9;&#9;&#9;&#9;Tooltip.Visible = false;
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.GUI.Visible = true;
&#9;&#9;end;

&#9;&#9;unfocus = function ( self, source )
&#9;&#9;&#9;if source == &apos;button&apos; then
&#9;&#9;&#9;&#9;self.button_focus = false;
&#9;&#9;&#9;elseif source == &apos;tooltip&apos; then
&#9;&#9;&#9;&#9;self.tooltip_focus = false;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.button_focus and not self.tooltip_focus then
&#9;&#9;&#9;&#9;self.GUI.Visible = false;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;};

&#9;-- Make it disappear after it&apos;s out of mouse focus
&#9;Tooltip.MouseEnter:connect( function ()
&#9;&#9;Tooltips[tool_name]:focus( &apos;tooltip&apos; );
&#9;end );
&#9;Tooltip.MouseLeave:connect( function ()
&#9;&#9;Tooltips[tool_name]:unfocus( &apos;tooltip&apos; );
&#9;end );

&#9;-- Create the scrolling container
&#9;local ScrollingContainer = Gloo.ScrollingContainer( true, false, 15 );
&#9;ScrollingContainer.GUI.Parent = Tooltip;

&#9;-- Put the tooltip content in the container
&#9;for _, Child in pairs( Tooltip.Content:GetChildren() ) do
&#9;&#9;Child.Parent = ScrollingContainer.Container;
&#9;end;
&#9;ScrollingContainer.GUI.Size = Dock.Tooltips.Size;
&#9;ScrollingContainer.Container.Size = Tooltip.Content.Size;
&#9;ScrollingContainer.Boundary.Size = Dock.Tooltips.Size;
&#9;ScrollingContainer.Boundary.BackgroundTransparency = 1;
&#9;Tooltip.Content:Destroy();

end;
for _, Tooltip in pairs( Dock.Tooltips:GetChildren() ) do
&#9;RegisterTooltip( Tooltip );
end;

-- Create the scrolling container for the help tooltip
local ScrollingContainer = Gloo.ScrollingContainer( true, false, 15 );
ScrollingContainer.GUI.Parent = Dock.HelpInfo;

-- Put the help tooltip content in the container
for _, Child in pairs( Dock.HelpInfo.Content:GetChildren() ) do
&#9;Child.Parent = ScrollingContainer.Container;
end;
ScrollingContainer.GUI.Size = Dock.HelpInfo.Size;
ScrollingContainer.Container.Size = Dock.HelpInfo.Content.Size;
ScrollingContainer.Boundary.Size = Dock.HelpInfo.Size;
ScrollingContainer.Boundary.BackgroundTransparency = 1;
Dock.HelpInfo.Content:Destroy();

-- Add functionality to the other GUI buttons
Dock.SelectionButtons.UndoButton.MouseButton1Up:connect( function ()
&#9;History:undo();
end );
Dock.SelectionButtons.RedoButton.MouseButton1Up:connect( function ()
&#9;History:redo();
end );
Dock.SelectionButtons.DeleteButton.MouseButton1Up:connect( function ()
&#9;deleteSelection();
end );
Dock.SelectionButtons.CloneButton.MouseButton1Up:connect( function ()
&#9;cloneSelection();
end );
Dock.SelectionButtons.ExportButton.MouseButton1Up:connect( function ()
&#9;IE:export();
end );
Dock.InfoButtons.HelpButton.MouseButton1Up:connect( function ()
&#9;toggleHelp();
end );

-- Shade the buttons according to whether they&apos;ll function or not
Selection.Changed:connect( function ()

&#9;-- If there are items, they should be active
&#9;if #Selection.Items &gt; 0 then
&#9;&#9;Dock.SelectionButtons.DeleteButton.Image = delete_active_decal;
&#9;&#9;Dock.SelectionButtons.CloneButton.Image = clone_active_decal;
&#9;&#9;Dock.SelectionButtons.ExportButton.Image = export_active_decal;

&#9;-- If there aren&apos;t items, they shouldn&apos;t be active
&#9;else
&#9;&#9;Dock.SelectionButtons.DeleteButton.Image = delete_inactive_decal;
&#9;&#9;Dock.SelectionButtons.CloneButton.Image = clone_inactive_decal;
&#9;&#9;Dock.SelectionButtons.ExportButton.Image = export_inactive_decal;
&#9;end;

end );

-- Make the selection/info buttons display tooltips upon hovering over them
for _, SelectionButton in pairs( Dock.SelectionButtons:GetChildren() ) do
&#9;SelectionButton.MouseEnter:connect( function ()
&#9;&#9;if SelectionButton:FindFirstChild( &apos;Tooltip&apos; ) then
&#9;&#9;&#9;SelectionButton.Tooltip.Visible = true;
&#9;&#9;end;
&#9;end );
&#9;SelectionButton.MouseLeave:connect( function ()
&#9;&#9;if SelectionButton:FindFirstChild( &apos;Tooltip&apos; ) then
&#9;&#9;&#9;SelectionButton.Tooltip.Visible = false;
&#9;&#9;end;
&#9;end );
end;
Dock.InfoButtons.HelpButton.MouseEnter:connect( function ()
&#9;Dock.InfoButtons.HelpButton.Tooltip.Visible = true;
end );
Dock.InfoButtons.HelpButton.MouseLeave:connect( function ()
&#9;Dock.InfoButtons.HelpButton.Tooltip.Visible = false;
end );

History.Changed:connect( function ()

&#9;-- If there are any records
&#9;if #History.Data &gt; 0 then

&#9;&#9;-- If we&apos;re at the beginning
&#9;&#9;if History.index == 0 then
&#9;&#9;&#9;Dock.SelectionButtons.UndoButton.Image = undo_inactive_decal;
&#9;&#9;&#9;Dock.SelectionButtons.RedoButton.Image = redo_active_decal;

&#9;&#9;-- If we&apos;re at the end
&#9;&#9;elseif History.index == #History.Data then
&#9;&#9;&#9;Dock.SelectionButtons.UndoButton.Image = undo_active_decal;
&#9;&#9;&#9;Dock.SelectionButtons.RedoButton.Image = redo_inactive_decal;

&#9;&#9;-- If we&apos;re neither at the beginning or the end
&#9;&#9;else
&#9;&#9;&#9;Dock.SelectionButtons.UndoButton.Image = undo_active_decal;
&#9;&#9;&#9;Dock.SelectionButtons.RedoButton.Image = redo_active_decal;
&#9;&#9;end;

&#9;-- If there are no records
&#9;else
&#9;&#9;Dock.SelectionButtons.UndoButton.Image = undo_inactive_decal;
&#9;&#9;Dock.SelectionButtons.RedoButton.Image = redo_inactive_decal;
&#9;end;

end );

------------------------------------------
-- Attach tool event listeners
------------------------------------------

function equipBT( CurrentMouse )

&#9;Mouse = CurrentMouse;

&#9;-- Enable the move tool if there&apos;s no tool currently enabled
&#9;if not CurrentTool then
&#9;&#9;equipTool( Tools.Move );
&#9;end;

&#9;if not TargetBox then
&#9;&#9;TargetBox = Instance.new( &quot;SelectionBox&quot;, UI );
&#9;&#9;TargetBox.Name = &quot;BTTargetBox&quot;;
&#9;&#9;TargetBox.Color = BrickColor.new( &quot;Institutional white&quot; );
&#9;&#9;TargetBox.Transparency = 0.5;
&#9;end;

&#9;-- Enable any temporarily-disabled selection boxes
&#9;for _, SelectionBox in pairs( SelectionBoxes ) do
&#9;&#9;SelectionBox.Parent = UI;
&#9;end;

&#9;-- Update the internal selection if this is a plugin
&#9;if ToolType == &apos;plugin&apos; then
&#9;&#9;for _, Item in pairs( Services.Selection:Get() ) do
&#9;&#9;&#9;Selection:add( Item );
&#9;&#9;end;
&#9;end;

&#9;-- Call the `Equipped` listener of the current tool
&#9;if CurrentTool and CurrentTool.Listeners.Equipped then
&#9;&#9;CurrentTool.Listeners.Equipped();
&#9;end;

&#9;-- Show the dock
&#9;Dock.Visible = true;

&#9;-- Display update notification if any (for the tool version)
&#9;if ToolType == &apos;tool&apos; then
&#9;&#9;coroutine.wrap( ShowUpdateNotification )();
&#9;end;

&#9;table.insert( Connections, Mouse.KeyDown:connect( function ( key )

&#9;&#9;local key = key:lower();
&#9;&#9;local key_code = key:byte();

&#9;&#9;-- Provide the abiltiy to delete via the shift + X key combination
&#9;&#9;if ActiveKeys[47] or ActiveKeys[48] and key == &quot;x&quot; then
&#9;&#9;&#9;deleteSelection();
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Provide the ability to clone via the shift + C key combination
&#9;&#9;if ActiveKeys[47] or ActiveKeys[48] and key == &quot;c&quot; then
&#9;&#9;&#9;cloneSelection();
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Undo if shift+z is pressed
&#9;&#9;if key == &quot;z&quot; and ( ActiveKeys[47] or ActiveKeys[48] ) then
&#9;&#9;&#9;History:undo();
&#9;&#9;&#9;return;

&#9;&#9;-- Redo if shift+y is pressed
&#9;&#9;elseif key == &quot;y&quot; and ( ActiveKeys[47] or ActiveKeys[48] ) then
&#9;&#9;&#9;History:redo();
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Serialize and dump selection to logs if shift+p is pressed
&#9;&#9;if key == &quot;p&quot; and ( ActiveKeys[47] or ActiveKeys[48] ) then
&#9;&#9;&#9;IE:export();
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Perform a prism selection if shift + k is pressed
&#9;&#9;if key == &quot;k&quot; and ( ActiveKeys[47] or ActiveKeys[48] ) then
&#9;&#9;&#9;prismSelect();
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Clear the selection if shift + r is pressed
&#9;&#9;if key == &quot;r&quot; and ( ActiveKeys[47] or ActiveKeys[48] ) then
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;if key == &quot;z&quot; then
&#9;&#9;&#9;equipTool( Tools.Move );

&#9;&#9;elseif key == &quot;x&quot; then
&#9;&#9;&#9;equipTool( Tools.Resize );

&#9;&#9;elseif key == &quot;c&quot; then
&#9;&#9;&#9;equipTool( Tools.Rotate );

&#9;&#9;elseif key == &quot;v&quot; then
&#9;&#9;&#9;equipTool( Tools.Paint );

&#9;&#9;elseif key == &quot;b&quot; then
&#9;&#9;&#9;equipTool( Tools.Surface );

&#9;&#9;elseif key == &quot;n&quot; then
&#9;&#9;&#9;equipTool( Tools.Material );

&#9;&#9;elseif key == &quot;m&quot; then
&#9;&#9;&#9;equipTool( Tools.Anchor );

&#9;&#9;elseif key == &quot;k&quot; then
&#9;&#9;&#9;equipTool( Tools.Collision );

&#9;&#9;elseif key == &quot;j&quot; then
&#9;&#9;&#9;equipTool( Tools.NewPart );

&#9;&#9;elseif key == &quot;h&quot; then
&#9;&#9;&#9;equipTool( Tools.Mesh );

&#9;&#9;elseif key == &quot;g&quot; then
&#9;&#9;&#9;equipTool( Tools.Texture );

&#9;&#9;elseif key == &quot;f&quot; then
&#9;&#9;&#9;equipTool( Tools.Weld );

&#9;&#9;elseif key == &quot;u&quot; then
&#9;&#9;&#9;equipTool( Tools.Lighting );

&#9;&#9;elseif key == &quot;p&quot; then
&#9;&#9;&#9;equipTool( Tools.Decorate );

&#9;&#9;end;

&#9;&#9;ActiveKeys[key_code] = key_code;
&#9;&#9;ActiveKeys[key] = key;

&#9;&#9;-- If it&apos;s now in multiselection mode, update `selecting`
&#9;&#9;-- (these are the left/right ctrl &amp; shift keys)
&#9;&#9;if ActiveKeys[47] or ActiveKeys[48] or ActiveKeys[49] or ActiveKeys[50] then
&#9;&#9;&#9;selecting = ActiveKeys[47] or ActiveKeys[48] or ActiveKeys[49] or ActiveKeys[50];
&#9;&#9;end;

&#9;end ) );

&#9;table.insert( Connections, Mouse.KeyUp:connect( function ( key )

&#9;&#9;local key = key:lower();
&#9;&#9;local key_code = key:byte();

&#9;&#9;ActiveKeys[key_code] = nil;
&#9;&#9;ActiveKeys[key] = nil;

&#9;&#9;-- If it&apos;s no longer in multiselection mode, update `selecting` &amp; related values
&#9;&#9;if selecting and not ActiveKeys[selecting] then
&#9;&#9;&#9;selecting = false;
&#9;&#9;&#9;if Select2D.enabled then
&#9;&#9;&#9;&#9;Select2D:select();
&#9;&#9;&#9;&#9;Select2D:finish();
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- Fire tool listeners
&#9;&#9;if CurrentTool and CurrentTool.Listeners.KeyUp then
&#9;&#9;&#9;CurrentTool.Listeners.KeyUp( key );
&#9;&#9;end;

&#9;end ) );

&#9;table.insert( Connections, Mouse.Button1Down:connect( function ()

&#9;&#9;clicking = true;
&#9;&#9;click_x, click_y = Mouse.X, Mouse.Y;

&#9;&#9;-- If multiselection is, just add to the selection
&#9;&#9;if selecting then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Fire tool listeners
&#9;&#9;if CurrentTool and CurrentTool.Listeners.Button1Down then
&#9;&#9;&#9;CurrentTool.Listeners.Button1Down();
&#9;&#9;end;

&#9;end ) );

&#9;table.insert( Connections, Mouse.Move:connect( function ()

&#9;&#9;-- If the mouse has moved since it was clicked, start 2D selection mode
&#9;&#9;if not override_selection and not Select2D.enabled and clicking and selecting and ( click_x ~= Mouse.X or click_y ~= Mouse.Y ) then
&#9;&#9;&#9;Select2D:start();
&#9;&#9;end;

&#9;&#9;-- If the target has changed, update the selectionbox appropriately
&#9;&#9;if not override_selection and isSelectable( Mouse.Target ) and TargetBox.Adornee ~= Mouse.Target then
&#9;&#9;&#9;TargetBox.Adornee = Mouse.Target;
&#9;&#9;end;

&#9;&#9;-- When aiming at something invalid, don&apos;t highlight any targets
&#9;&#9;if not override_selection and not isSelectable( Mouse.Target ) then
&#9;&#9;&#9;TargetBox.Adornee = nil;
&#9;&#9;end;

&#9;&#9;-- Fire tool listeners
&#9;&#9;if CurrentTool and CurrentTool.Listeners.Move then
&#9;&#9;&#9;CurrentTool.Listeners.Move();
&#9;&#9;end;

&#9;&#9;if override_selection then
&#9;&#9;&#9;override_selection = false;
&#9;&#9;end;

&#9;end ) );

&#9;table.insert( Connections, Mouse.Button1Up:connect( function ()

&#9;&#9;clicking = false;

&#9;&#9;-- Make sure the person didn&apos;t accidentally miss a handle or something
&#9;&#9;if not Select2D.enabled and ( Mouse.X ~= click_x or Mouse.Y ~= click_y ) then
&#9;&#9;&#9;override_selection = true;
&#9;&#9;end;

&#9;&#9;-- If the target when clicking was invalid then clear the selection (unless we&apos;re multi-selecting)
&#9;&#9;if not override_selection and not selecting and not isSelectable( Mouse.Target ) then
&#9;&#9;&#9;Selection:clear();
&#9;&#9;end;

&#9;&#9;-- If multi-selecting, add to/remove from the selection
&#9;&#9;if not override_selection and selecting then

&#9;&#9;&#9;-- If the item isn&apos;t already selected, add it to the selection
&#9;&#9;&#9;if not Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;if isSelectable( Mouse.Target ) then
&#9;&#9;&#9;&#9;&#9;Selection:add( Mouse.Target );
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;-- If the item _is_ already selected, remove it from the selection
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if ( Mouse.X == click_x and Mouse.Y == click_y ) and Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;&#9;Selection:remove( Mouse.Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;-- If not multi-selecting, replace the selection
&#9;&#9;else
&#9;&#9;&#9;if not override_selection and isSelectable( Mouse.Target ) then
&#9;&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;&#9;Selection:add( Mouse.Target );
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- Fire tool listeners
&#9;&#9;if CurrentTool and CurrentTool.Listeners.Button1Up then
&#9;&#9;&#9;CurrentTool.Listeners.Button1Up();
&#9;&#9;end;

&#9;&#9;if override_selection then
&#9;&#9;&#9;override_selection = false;
&#9;&#9;end;

&#9;end ) );

&#9;table.insert( Connections, Mouse.Button2Down:connect( function ()
&#9;&#9;-- Fire tool listeners
&#9;&#9;if CurrentTool and CurrentTool.Listeners.Button2Down then
&#9;&#9;&#9;CurrentTool.Listeners.Button2Down();
&#9;&#9;end;
&#9;end ) );

&#9;table.insert( Connections, Mouse.Button2Up:connect( function ()
&#9;&#9;-- Fire tool listeners
&#9;&#9;if CurrentTool and CurrentTool.Listeners.Button2Up then
&#9;&#9;&#9;CurrentTool.Listeners.Button2Up();
&#9;&#9;end;
&#9;end ) );

end;

function unequipBT()

&#9;Mouse = nil;

&#9;-- Remove the mouse target SelectionBox from `Player`
&#9;if TargetBox then
&#9;&#9;TargetBox:Destroy();
&#9;&#9;TargetBox = nil;
&#9;end;

&#9;-- Disable all the selection boxes temporarily
&#9;for _, SelectionBox in pairs( SelectionBoxes ) do
&#9;&#9;SelectionBox.Parent = nil;
&#9;end;

&#9;-- Hide the dock
&#9;Dock.Visible = false;

&#9;-- Disconnect temporary platform-related connections
&#9;for connection_index, Connection in pairs( Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;Connections[connection_index] = nil;
&#9;end;

&#9;-- Call the `Unequipped` listener of the current tool
&#9;if CurrentTool and CurrentTool.Listeners.Unequipped then
&#9;&#9;CurrentTool.Listeners.Unequipped();
&#9;end;

end;


------------------------------------------
-- Provide the platform&apos;s environment for
-- other tool scripts to extend upon
------------------------------------------

local tool_list = {
&#9;&quot;Anchor&quot;,
&#9;&quot;Collision&quot;,
&#9;&quot;Material&quot;,
&#9;&quot;Mesh&quot;,
&#9;&quot;Move&quot;,
&#9;&quot;NewPart&quot;,
&#9;&quot;Paint&quot;,
&#9;&quot;Resize&quot;,
&#9;&quot;Rotate&quot;,
&#9;&quot;Surface&quot;,
&#9;&quot;Texture&quot;,
&#9;&quot;Weld&quot;,
&#9;&quot;Lighting&quot;,
&#9;&quot;Decorate&quot;
};

-- Make sure all the tool scripts are in the tool &amp; deactivate them
for _, tool_name in pairs( tool_list ) do
&#9;local script_name = &quot;BT&quot; .. tool_name .. &quot;Tool&quot;;
&#9;repeat wait() until script:FindFirstChild( script_name );
&#9;script[script_name].Disabled = true;
end;

-- Load the platform
if not _G.BTCoreEnv then
&#9;_G.BTCoreEnv = {};
end;
_G.BTCoreEnv[Tool] = getfenv( 0 );
CoreReady = true;

-- Reload the tool scripts
for _, tool_name in pairs( tool_list ) do
&#9;local script_name = &quot;BT&quot; .. tool_name .. &quot;Tool&quot;;
&#9;script[script_name].Disabled = false;
end;

-- Wait for all the tools to load
for _, tool_name in pairs( tool_list ) do
&#9;if not Tools[tool_name] then
&#9;&#9;repeat wait() until Tools[tool_name];
&#9;end;
&#9;repeat wait() until Tools[tool_name].Loaded;
end;

-- Activate the plugin and tool connections
if ToolType == &apos;plugin&apos; then
&#9;local ToolbarButton = plugin:CreateToolbar( &apos;Building Tools by F3X&apos; ):CreateButton( &apos;&apos;, &apos;Building Tools by F3X&apos;, plugin_icon );
&#9;local plugin_active = false;
&#9;ToolbarButton.Click:connect( function ()
&#9;&#9;if plugin_active then
&#9;&#9;&#9;plugin_active = false;
&#9;&#9;&#9;unequipBT();
&#9;&#9;else
&#9;&#9;&#9;plugin_active = true;
&#9;&#9;&#9;plugin:Activate( true );
&#9;&#9;&#9;equipBT( plugin:GetMouse() );
&#9;&#9;end;
&#9;end );
&#9;plugin.Deactivation:connect( unequipBT );

elseif ToolType == &apos;tool&apos; then
&#9;Tool.Equipped:connect( equipBT );
&#9;Tool.Unequipped:connect( unequipBT );
end;</ProtectedString>
			</Properties>
			<Item class="LocalScript" referent="RBX2">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTMoveTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Move tool
------------------------------------------

-- Create the main container for this tool
Tools.Move = {};

-- Define the color of the tool
Tools.Move.Color = BrickColor.new( &quot;Deep orange&quot; );

-- Keep a container for temporary connections
Tools.Move.Connections = {};

-- Keep options in a container too
Tools.Move.Options = {
&#9;[&quot;increment&quot;] = 1;
&#9;[&quot;axes&quot;] = &quot;global&quot;;
};

-- Keep internal state data in its own container
Tools.Move.State = {
&#9;[&quot;distance_moved&quot;] = 0;
&#9;[&quot;moving&quot;] = false;
&#9;[&quot;PreMove&quot;] = {};
};

-- Add listeners
Tools.Move.Listeners = {};

Tools.Move.Listeners.Equipped = function ()

&#9;local self = Tools.Move;

&#9;-- Make sure the tool is actually being equipped (because this is the default tool)
&#9;if not Mouse then
&#9;&#9;return;
&#9;end;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Create the boundingbox if it doesn&apos;t already exist
&#9;if not self.BoundingBox then
&#9;&#9;self.BoundingBox = RbxUtility.Create &quot;Part&quot; {
&#9;&#9;&#9;Name = &quot;BTBoundingBox&quot;;
&#9;&#9;&#9;CanCollide = false;
&#9;&#9;&#9;Transparency = 1;
&#9;&#9;&#9;Anchored = true;
&#9;&#9;};
&#9;end;
&#9;Mouse.TargetFilter = self.BoundingBox;

&#9;-- Refresh the axis type option
&#9;self:changeAxes( self.Options.axes );

&#9;-- Listen for any keystrokes that might affect any dragging operation
&#9;self.Connections.DraggerKeyListener = Mouse.KeyDown:connect( function ( key )

&#9;&#9;local key = key:lower();

&#9;&#9;-- Make sure a dragger exists
&#9;&#9;if not self.Dragger then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Rotate along the Z axis if `r` is pressed
&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;self.Dragger:AxisRotate( Enum.Axis.Z );

&#9;&#9;-- Rotate along the X axis if `t` is pressed
&#9;&#9;elseif key == &quot;t&quot; then
&#9;&#9;&#9;self.Dragger:AxisRotate( Enum.Axis.X );

&#9;&#9;-- Rotate along the Y axis if `y` is pressed
&#9;&#9;elseif key == &quot;y&quot; then
&#9;&#9;&#9;self.Dragger:AxisRotate( Enum.Axis.Y );
&#9;&#9;end;

&#9;&#9;-- Simulate a mouse move so that it applies the changes
&#9;&#9;self.Dragger:MouseMove( Mouse.UnitRay );

&#9;end );

&#9;-- Oh, and update the boundingbox and the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- Update the boundingbox if it&apos;s visible
&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;self:updateBoundingBox();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Move.Listeners.Unequipped = function ()

&#9;local self = Tools.Move;

&#9;-- Stop the update loop
&#9;if self.Updater then
&#9;&#9;self.Updater();
&#9;&#9;self.Updater = nil;
&#9;end;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Hide the handles
&#9;self:hideHandles();

&#9;-- Clear out any temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of the selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Move.updateGUI = function ( self )

&#9;if self.GUI then
&#9;&#9;local GUI = self.GUI;

&#9;&#9;if #Selection.Items &gt; 0 then

&#9;&#9;&#9;-- Look for identical numbers in each axis
&#9;&#9;&#9;local position_x, position_y, position_z =  nil, nil, nil;
&#9;&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;&#9;position_x, position_y, position_z = _round( Item.Position.x, 2 ), _round( Item.Position.y, 2 ), _round( Item.Position.z, 2 );

&#9;&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;if position_x ~= _round( Item.Position.x, 2 ) then
&#9;&#9;&#9;&#9;&#9;&#9;position_x = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if position_y ~= _round( Item.Position.y, 2 ) then
&#9;&#9;&#9;&#9;&#9;&#9;position_y = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if position_z ~= _round( Item.Position.z, 2 ) then
&#9;&#9;&#9;&#9;&#9;&#9;position_z = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;&#9;-- If each position along each axis is the same, display that number; otherwise, display &quot;*&quot;
&#9;&#9;&#9;if not self.State.pos_x_focused then
&#9;&#9;&#9;&#9;GUI.Info.Center.X.TextBox.Text = position_x and tostring( position_x ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.pos_y_focused then
&#9;&#9;&#9;&#9;GUI.Info.Center.Y.TextBox.Text = position_y and tostring( position_y ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.pos_z_focused then
&#9;&#9;&#9;&#9;GUI.Info.Center.Z.TextBox.Text = position_z and tostring( position_z ) or &quot;*&quot;;
&#9;&#9;&#9;end;

&#9;&#9;&#9;GUI.Info.Visible = true;
&#9;&#9;else
&#9;&#9;&#9;GUI.Info.Visible = false;
&#9;&#9;end;

&#9;&#9;if self.State.distance_moved then
&#9;&#9;&#9;GUI.Changes.Text.Text = &quot;moved &quot; .. tostring( self.State.distance_moved ) .. &quot; studs&quot;;
&#9;&#9;&#9;GUI.Changes.Position = GUI.Info.Visible and UDim2.new( 0, 5, 0, 165 ) or UDim2.new( 0, 5, 0, 100 );
&#9;&#9;&#9;GUI.Changes.Visible = true;
&#9;&#9;else
&#9;&#9;&#9;GUI.Changes.Text.Text = &quot;&quot;;
&#9;&#9;&#9;GUI.Changes.Visible = false;
&#9;&#9;end;
&#9;end;

end;

Tools.Move.changePosition = function ( self, component, new_value )

&#9;self:startHistoryRecord();

&#9;-- Change the position of each item selected
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.CFrame = CFrame.new(
&#9;&#9;&#9;component == &apos;x&apos; and new_value or Item.Position.x,
&#9;&#9;&#9;component == &apos;y&apos; and new_value or Item.Position.y,
&#9;&#9;&#9;component == &apos;z&apos; and new_value or Item.Position.z
&#9;&#9;) * CFrame.Angles( Item.CFrame:toEulerAnglesXYZ() );
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Move.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_positions = {};
&#9;&#9;terminal_positions = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.initial_positions[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.terminal_positions[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_positions[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;

end;

Tools.Move.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_positions[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Move.Listeners.Button1Down = function ()

&#9;local self = Tools.Move;

&#9;local Target = self.ManualTarget or Mouse.Target;
&#9;self.ManualTarget = nil;

&#9;-- If an unselected part is being moved, switch to it
&#9;if not Selection:find( Target ) and isSelectable( Target ) then
&#9;&#9;Selection:clear();
&#9;&#9;Selection:add( Target );
&#9;end;

&#9;-- If the unselected target can&apos;t be selected at all, ignore the rest of the procedure
&#9;if not Selection:find( Target ) then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.RotVelocity = Vector3.new( 0, 0, 0 );
&#9;&#9;Item.Velocity = Vector3.new( 0, 0, 0 );
&#9;end;

&#9;self:startHistoryRecord();

&#9;self.State.dragging = true;
&#9;override_selection = true;

&#9;self.Dragger = Instance.new( &quot;Dragger&quot; );
&#9;self.Dragger:MouseDown( Target, Target.CFrame:toObjectSpace( CFrame.new( Mouse.Hit.p ) ).p, Selection.Items );
&#9;self.Connections.DraggerConnection = Mouse.Button1Up:connect( function ()

&#9;&#9;override_selection = true;

&#9;&#9;-- Disable the dragger
&#9;&#9;if self.Connections.DraggerConnection then
&#9;&#9;&#9;self.Connections.DraggerConnection:disconnect();
&#9;&#9;&#9;self.Connections.DraggerConnection = nil;
&#9;&#9;end;
&#9;&#9;if not self.Dragger then
&#9;&#9;&#9;return;
&#9;&#9;end;
&#9;&#9;self.Dragger:MouseUp();
&#9;&#9;self.State.dragging = false;
&#9;&#9;self.Dragger:Destroy();
&#9;&#9;self.Dragger = nil;

&#9;&#9;self:finishHistoryRecord();

&#9;end );

end;

Tools.Move.Listeners.Move = function ()

&#9;local self = Tools.Move;

&#9;if not self.Dragger then
&#9;&#9;return;
&#9;end;

&#9;override_selection = true;

&#9;self.Dragger:MouseMove( Mouse.UnitRay );

end;

Tools.Move.Listeners.KeyUp = function ( Key )
&#9;local self = Tools.Move;

&#9;-- Provide a keyboard shortcut to the increment input
&#9;if Key == &quot;&apos;&quot; and self.GUI then
&#9;&#9;self.GUI.IncrementOption.Increment.TextBox:CaptureFocus();
&#9;end;
end;

Tools.Move.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces.BTMoveToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;-- Change the axis type option when the button is clicked
&#9;&#9;Container.AxesOption.Global.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeAxes( &quot;global&quot; );
&#9;&#9;&#9;Container.AxesOption.Global.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;Container.AxesOption.Global.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;Container.AxesOption.Local.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.AxesOption.Local.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;Container.AxesOption.Last.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.AxesOption.Last.Background.Image = light_slanted_rectangle;
&#9;&#9;end );

&#9;&#9;Container.AxesOption.Local.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeAxes( &quot;local&quot; );
&#9;&#9;&#9;Container.AxesOption.Global.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.AxesOption.Global.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;Container.AxesOption.Local.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;Container.AxesOption.Local.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;Container.AxesOption.Last.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.AxesOption.Last.Background.Image = light_slanted_rectangle;
&#9;&#9;end );

&#9;&#9;Container.AxesOption.Last.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeAxes( &quot;last&quot; );
&#9;&#9;&#9;Container.AxesOption.Global.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.AxesOption.Global.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;Container.AxesOption.Local.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.AxesOption.Local.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;Container.AxesOption.Last.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;Container.AxesOption.Last.Background.Image = dark_slanted_rectangle;
&#9;&#9;end );

&#9;&#9;-- Change the increment option when the value of the textbox is updated
&#9;&#9;Container.IncrementOption.Increment.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;self.Options.increment = tonumber( Container.IncrementOption.Increment.TextBox.Text ) or self.Options.increment;
&#9;&#9;&#9;Container.IncrementOption.Increment.TextBox.Text = tostring( self.Options.increment );
&#9;&#9;end );

&#9;&#9;-- Add functionality to the position inputs
&#9;&#9;Container.Info.Center.X.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pos_x_focused = true;
&#9;&#9;&#9;Container.Info.Center.X.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.Center.X.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.Center.X.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changePosition( &apos;x&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pos_x_focused = false;
&#9;&#9;end );
&#9;&#9;Container.Info.Center.Y.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pos_y_focused = true;
&#9;&#9;&#9;Container.Info.Center.Y.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.Center.Y.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.Center.Y.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changePosition( &apos;y&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pos_y_focused = false;
&#9;&#9;end );
&#9;&#9;Container.Info.Center.Z.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pos_z_focused = true;
&#9;&#9;&#9;Container.Info.Center.Z.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.Center.Z.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.Center.Z.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changePosition( &apos;z&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pos_z_focused = false;
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Move.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Move.showHandles = function ( self, Part )

&#9;-- Create the handles if they don&apos;t exist yet
&#9;if not self.Handles then

&#9;&#9;-- Create the object
&#9;&#9;self.Handles = RbxUtility.Create &quot;Handles&quot; {
&#9;&#9;&#9;Name = &quot;BTMovementHandles&quot;;
&#9;&#9;&#9;Color = self.Color;
&#9;&#9;&#9;Parent = GUIContainer;
&#9;&#9;};

&#9;&#9;-- Add functionality to the handles

&#9;&#9;self.Handles.MouseButton1Down:connect( function ()

&#9;&#9;&#9;-- Prevent the platform from thinking we&apos;re selecting
&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;self.State.moving = true;

&#9;&#9;&#9;-- Clear the change stats
&#9;&#9;&#9;self.State.distance_moved = 0;

&#9;&#9;&#9;self:startHistoryRecord();

&#9;&#9;&#9;-- Do a few things to the selection before manipulating it
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Keep a copy of the state of each item
&#9;&#9;&#9;&#9;self.State.PreMove[Item] = Item:Clone();

&#9;&#9;&#9;&#9;-- Anchor each item
&#9;&#9;&#9;&#9;Item.Anchored = true;

&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Return stuff to normal once the mouse button is released
&#9;&#9;&#9;self.Connections.HandleReleaseListener = Mouse.Button1Up:connect( function ()

&#9;&#9;&#9;&#9;-- Prevent the platform from thinking we&apos;re selecting
&#9;&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;&#9;self.State.moving = false;

&#9;&#9;&#9;&#9;-- Stop this connection from firing again
&#9;&#9;&#9;&#9;if self.Connections.HandleReleaseListener then
&#9;&#9;&#9;&#9;&#9;self.Connections.HandleReleaseListener:disconnect();
&#9;&#9;&#9;&#9;&#9;self.Connections.HandleReleaseListener = nil;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self:finishHistoryRecord();

&#9;&#9;&#9;&#9;-- Restore properties that may have been changed temporarily
&#9;&#9;&#9;&#9;-- from the pre-movement state copies
&#9;&#9;&#9;&#9;for Item, PreviousItemState in pairs( self.State.PreMove ) do
&#9;&#9;&#9;&#9;&#9;Item.Anchored = PreviousItemState.Anchored;
&#9;&#9;&#9;&#9;&#9;self.State.PreMove[Item] = nil;
&#9;&#9;&#9;&#9;&#9;Item:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Item.Velocity = Vector3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;&#9;Item.RotVelocity = Vector3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end );

&#9;&#9;end );

&#9;&#9;self.Handles.MouseDrag:connect( function ( face, drag_distance )

&#9;&#9;&#9;-- Calculate which multiple of the increment to use based on the current drag distance&apos;s
&#9;&#9;&#9;-- proximity to their nearest upper and lower multiples

&#9;&#9;&#9;local difference = drag_distance % self.Options.increment;

&#9;&#9;&#9;local lower_degree = drag_distance - difference;
&#9;&#9;&#9;local upper_degree = drag_distance - difference + self.Options.increment;

&#9;&#9;&#9;local lower_degree_proximity = math.abs( drag_distance - lower_degree );
&#9;&#9;&#9;local upper_degree_proximity = math.abs( drag_distance - upper_degree );

&#9;&#9;&#9;if lower_degree_proximity &lt;= upper_degree_proximity then
&#9;&#9;&#9;&#9;drag_distance = lower_degree;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;drag_distance = upper_degree;
&#9;&#9;&#9;end;

&#9;&#9;&#9;local increase = drag_distance;

&#9;&#9;&#9;self.State.distance_moved = drag_distance;

&#9;&#9;&#9;-- Increment the position of each selected item in the direction of `face`
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Remove any joints connected with `Item` so that it can freely move
&#9;&#9;&#9;&#9;Item:BreakJoints();

&#9;&#9;&#9;&#9;-- Update the position of `Item` depending on the type of axes that is currently set
&#9;&#9;&#9;&#9;if face == Enum.NormalId.Top then
&#9;&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( 0, increase, 0 ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( 0, increase, 0 ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( 0, increase, 0 ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Bottom then
&#9;&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( 0, -increase, 0 ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( 0, -increase, 0 ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( 0, -increase, 0 ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Front then
&#9;&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( 0, 0, -increase ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, -increase ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( 0, 0, -increase ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Back then
&#9;&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( 0, 0, increase ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, increase ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( 0, 0, increase ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Right then
&#9;&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( increase, 0, 0 ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( increase, 0, 0 ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( increase, 0, 0 ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Left then
&#9;&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( -increase, 0, 0 ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( -increase, 0, 0 ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( -increase, 0, 0 ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;end;

&#9;-- Stop listening for the existence of the previous adornee (if any)
&#9;if self.Connections.AdorneeExistenceListener then
&#9;&#9;self.Connections.AdorneeExistenceListener:disconnect();
&#9;&#9;self.Connections.AdorneeExistenceListener = nil;
&#9;end;

&#9;-- Attach the handles to `Part`
&#9;self.Handles.Adornee = Part;

&#9;-- Make sure to hide the handles if `Part` suddenly stops existing
&#9;self.Connections.AdorneeExistenceListener = Part.AncestryChanged:connect( function ( Object, NewParent )

&#9;&#9;-- Make sure this change in parent applies directly to `Part`
&#9;&#9;if Object ~= Part then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Show the handles according to the existence of the part
&#9;&#9;if NewParent == nil then
&#9;&#9;&#9;self:hideHandles();
&#9;&#9;else
&#9;&#9;&#9;self:showHandles( Part );
&#9;&#9;end;

&#9;end );

end;

Tools.Move.hideHandles = function ( self )

&#9;-- Hide the handles if they exist
&#9;if self.Handles then
&#9;&#9;self.Handles.Adornee = nil;
&#9;end;

end;

Tools.Move.updateBoundingBox = function ( self )

&#9;if #Selection.Items &gt; 0 and not self.State.dragging then
&#9;&#9;local SelectionSize, SelectionPosition = _getCollectionInfo( Selection.Items );
&#9;&#9;self.BoundingBox.Size = SelectionSize;
&#9;&#9;self.BoundingBox.CFrame = SelectionPosition;
&#9;&#9;self:showHandles( self.BoundingBox );

&#9;else
&#9;&#9;self:hideHandles();
&#9;end;

end;

Tools.Move.changeAxes = function ( self, new_axes )

&#9;-- Have a quick reference to the GUI (if any)
&#9;local AxesOptionGUI = self.GUI and self.GUI.AxesOption or nil;

&#9;-- Disconnect any handle-related listeners that are specific to a certain axes option

&#9;if self.Connections.HandleFocusChangeListener then
&#9;&#9;self.Connections.HandleFocusChangeListener:disconnect();
&#9;&#9;self.Connections.HandleFocusChangeListener = nil;
&#9;end;

&#9;if self.Connections.HandleSelectionChangeListener then
&#9;&#9;self.Connections.HandleSelectionChangeListener:disconnect();
&#9;&#9;self.Connections.HandleSelectionChangeListener = nil;
&#9;end;

&#9;if new_axes == &quot;global&quot; then

&#9;&#9;-- Update the options
&#9;&#9;self.Options.axes = &quot;global&quot;;

&#9;&#9;-- Clear out any previous adornee
&#9;&#9;self:hideHandles();

&#9;&#9;-- Focus the handles on the boundary box
&#9;&#9;self:showHandles( self.BoundingBox );

&#9;&#9;-- Update the GUI&apos;s option panel
&#9;&#9;if self.GUI then
&#9;&#9;&#9;AxesOptionGUI.Global.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;AxesOptionGUI.Global.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;AxesOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;AxesOptionGUI.Local.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;AxesOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;AxesOptionGUI.Last.Background.Image = light_slanted_rectangle;
&#9;&#9;end;

&#9;end;

&#9;if new_axes == &quot;local&quot; then

&#9;&#9;-- Update the options
&#9;&#9;self.Options.axes = &quot;local&quot;;

&#9;&#9;-- Always have the handles on the most recent addition to the selection
&#9;&#9;self.Connections.HandleSelectionChangeListener = Selection.Changed:connect( function ()

&#9;&#9;&#9;-- Clear out any previous adornee
&#9;&#9;&#9;self:hideHandles();

&#9;&#9;&#9;-- If there /is/ a last item in the selection, attach the handles to it
&#9;&#9;&#9;if Selection.Last then
&#9;&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Switch the adornee of the handles if the second mouse button is pressed
&#9;&#9;self.Connections.HandleFocusChangeListener = Mouse.Button2Up:connect( function ()

&#9;&#9;&#9;-- Make sure the platform doesn&apos;t think we&apos;re selecting
&#9;&#9;&#9;override_selection = true;

&#9;&#9;&#9;-- If the target is in the selection, make it the new adornee
&#9;&#9;&#9;if Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;Selection:focus( Mouse.Target );
&#9;&#9;&#9;&#9;self:showHandles( Mouse.Target );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Finally, attach the handles to the last item added to the selection (if any)
&#9;&#9;if Selection.Last then
&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;end;

&#9;&#9;-- Update the GUI&apos;s option panel
&#9;&#9;if self.GUI then
&#9;&#9;&#9;AxesOptionGUI.Global.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;AxesOptionGUI.Global.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;AxesOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;AxesOptionGUI.Local.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;AxesOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;AxesOptionGUI.Last.Background.Image = light_slanted_rectangle;
&#9;&#9;end;

&#9;end;

&#9;if new_axes == &quot;last&quot; then

&#9;&#9;-- Update the options
&#9;&#9;self.Options.axes = &quot;last&quot;;

&#9;&#9;-- Always have the handles on the most recent addition to the selection
&#9;&#9;self.Connections.HandleSelectionChangeListener = Selection.Changed:connect( function ()

&#9;&#9;&#9;-- Clear out any previous adornee
&#9;&#9;&#9;self:hideHandles();

&#9;&#9;&#9;-- If there /is/ a last item in the selection, attach the handles to it
&#9;&#9;&#9;if Selection.Last then
&#9;&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Switch the adornee of the handles if the second mouse button is pressed
&#9;&#9;self.Connections.HandleFocusChangeListener = Mouse.Button2Up:connect( function ()

&#9;&#9;&#9;-- Make sure the platform doesn&apos;t think we&apos;re selecting
&#9;&#9;&#9;override_selection = true;

&#9;&#9;&#9;-- If the target is in the selection, make it the new adornee
&#9;&#9;&#9;if Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;Selection:focus( Mouse.Target );
&#9;&#9;&#9;&#9;self:showHandles( Mouse.Target );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Finally, attach the handles to the last item added to the selection (if any)
&#9;&#9;if Selection.Last then
&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;end;

&#9;&#9;-- Update the GUI&apos;s option panel
&#9;&#9;if self.GUI then
&#9;&#9;&#9;AxesOptionGUI.Global.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;AxesOptionGUI.Global.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;AxesOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;AxesOptionGUI.Local.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;AxesOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;AxesOptionGUI.Last.Background.Image = dark_slanted_rectangle;
&#9;&#9;end;

&#9;end;

end;

Tools.Move.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX3">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTResizeTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Resize tool
------------------------------------------

-- Create the tool
Tools.Resize = {};

-- Create structures that will be used within the tool
Tools.Resize.Connections = {};

Tools.Resize.Options = {
&#9;[&quot;increment&quot;] = 1;
&#9;[&quot;directions&quot;] = &quot;normal&quot;;
};

Tools.Resize.State = {
&#9;[&quot;PreResize&quot;] = {};
&#9;[&quot;previous_distance&quot;] = 0;
&#9;[&quot;resizing&quot;] = false;
&#9;[&quot;length_resized&quot;] = 0;
};

Tools.Resize.Listeners = {};

-- Define the color of the tool
Tools.Resize.Color = BrickColor.new( &quot;Cyan&quot; );

Tools.Resize.Listeners.Equipped = function ()

&#9;local self = Tools.Resize;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Always have the handles on the most recent addition to the selection
&#9;table.insert( self.Connections, Selection.Changed:connect( function ()

&#9;&#9;-- Clear out any previous adornee
&#9;&#9;self:hideHandles();

&#9;&#9;-- If there /is/ a last item in the selection, attach the handles to it
&#9;&#9;if Selection.Last then
&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;end;

&#9;end ) );

&#9;-- Switch the adornee of the handles if the second mouse button is pressed
&#9;table.insert( self.Connections, Mouse.Button2Up:connect( function ()

&#9;&#9;-- Make sure the platform doesn&apos;t think we&apos;re selecting
&#9;&#9;override_selection = true;

&#9;&#9;-- If the target is in the selection, make it the new adornee
&#9;&#9;if Selection:find( Mouse.Target ) then
&#9;&#9;&#9;Selection:focus( Mouse.Target );
&#9;&#9;end;

&#9;end ) );

&#9;-- Finally, attach the handles to the last item added to the selection (if any)
&#9;if Selection.Last then
&#9;&#9;self:showHandles( Selection.Last );
&#9;end;

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Resize.Listeners.Unequipped = function ()

&#9;local self = Tools.Resize;

&#9;-- Stop the update loop
&#9;if self.Updater then
&#9;&#9;self.Updater();
&#9;&#9;self.Updater = nil;
&#9;end;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Hide the handles
&#9;self:hideHandles();

&#9;-- Clear out any temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of the selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Resize.Listeners.KeyUp = function ( Key )
&#9;local self = Tools.Resize;

&#9;-- Provide a keyboard shortcut to the increment input
&#9;if Key == &quot;&apos;&quot; and self.GUI then
&#9;&#9;self.GUI.IncrementOption.Increment.TextBox:CaptureFocus();
&#9;end;
end;

Tools.Resize.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces.BTResizeToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;-- Change the axis type option when the button is clicked
&#9;&#9;Container.DirectionsOption.Normal.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.Options.directions = &quot;normal&quot;;
&#9;&#9;&#9;Container.DirectionsOption.Normal.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;Container.DirectionsOption.Normal.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;Container.DirectionsOption.Both.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.DirectionsOption.Both.Background.Image = light_slanted_rectangle;
&#9;&#9;end );

&#9;&#9;Container.DirectionsOption.Both.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.Options.directions = &quot;both&quot;;
&#9;&#9;&#9;Container.DirectionsOption.Normal.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.DirectionsOption.Normal.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;Container.DirectionsOption.Both.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;Container.DirectionsOption.Both.Background.Image = dark_slanted_rectangle;
&#9;&#9;end );

&#9;&#9;-- Change the increment option when the value of the textbox is updated
&#9;&#9;Container.IncrementOption.Increment.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;self.Options.increment = tonumber( Container.IncrementOption.Increment.TextBox.Text ) or self.Options.increment;
&#9;&#9;&#9;Container.IncrementOption.Increment.TextBox.Text = tostring( self.Options.increment );
&#9;&#9;end );

&#9;&#9;-- Add functionality to the size inputs
&#9;&#9;Container.Info.SizeInfo.X.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.size_x_focused = true;
&#9;&#9;&#9;Container.Info.SizeInfo.X.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.SizeInfo.X.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.SizeInfo.X.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeSize( &apos;x&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.size_x_focused = false;
&#9;&#9;end );
&#9;&#9;Container.Info.SizeInfo.Y.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.size_y_focused = true;
&#9;&#9;&#9;Container.Info.SizeInfo.Y.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.SizeInfo.Y.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.SizeInfo.Y.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeSize( &apos;y&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.size_y_focused = false;
&#9;&#9;end );
&#9;&#9;Container.Info.SizeInfo.Z.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.size_z_focused = true;
&#9;&#9;&#9;Container.Info.SizeInfo.Z.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.SizeInfo.Z.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.SizeInfo.Z.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeSize( &apos;z&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.size_z_focused = false;
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Resize.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_positions = {};
&#9;&#9;terminal_positions = {};
&#9;&#9;initial_sizes = {};
&#9;&#9;terminal_sizes = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.Size = self.initial_sizes[Target];
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.initial_positions[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.Size = self.terminal_sizes[Target];
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.terminal_positions[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_sizes[Item] = Item.Size;
&#9;&#9;&#9;self.State.HistoryRecord.initial_positions[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;

end;

Tools.Resize.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_sizes[Item] = Item.Size;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_positions[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Resize.changeSize = function ( self, component, new_value )

&#9;self:startHistoryRecord();

&#9;-- Change the size of each item selected
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local OldCFrame = Item.CFrame;
&#9;&#9;-- Make the item be able to be freely resized
&#9;&#9;if ( pcall( function () local test = Item.FormFactor; end ) ) then
&#9;&#9;&#9;Item.FormFactor = Enum.FormFactor.Custom;
&#9;&#9;end;
&#9;&#9;Item.Size = Vector3.new(
&#9;&#9;&#9;component == &apos;x&apos; and new_value or Item.Size.x,
&#9;&#9;&#9;component == &apos;y&apos; and new_value or Item.Size.y,
&#9;&#9;&#9;component == &apos;z&apos; and new_value or Item.Size.z
&#9;&#9;);
&#9;&#9;Item.CFrame = OldCFrame;
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Resize.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;local GUI = self.GUI;

&#9;if #Selection.Items &gt; 0 then

&#9;&#9;-- Look for identical numbers in each axis
&#9;&#9;local size_x, size_y, size_z =  nil, nil, nil;
&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;size_x, size_y, size_z = _round( Item.Size.x, 2 ), _round( Item.Size.y, 2 ), _round( Item.Size.z, 2 );

&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if size_x ~= _round( Item.Size.x, 2 ) then
&#9;&#9;&#9;&#9;&#9;size_x = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if size_y ~= _round( Item.Size.y, 2 ) then
&#9;&#9;&#9;&#9;&#9;size_y = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if size_z ~= _round( Item.Size.z, 2 ) then
&#9;&#9;&#9;&#9;&#9;size_z = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;&#9;-- Update the size info on the GUI
&#9;&#9;if not self.State.size_x_focused then
&#9;&#9;&#9;GUI.Info.SizeInfo.X.TextBox.Text = size_x and tostring( size_x ) or &quot;*&quot;;
&#9;&#9;end;
&#9;&#9;if not self.State.size_y_focused then
&#9;&#9;&#9;GUI.Info.SizeInfo.Y.TextBox.Text = size_y and tostring( size_y ) or &quot;*&quot;;
&#9;&#9;end;
&#9;&#9;if not self.State.size_z_focused then
&#9;&#9;&#9;GUI.Info.SizeInfo.Z.TextBox.Text = size_z and tostring( size_z ) or &quot;*&quot;;
&#9;&#9;end;

&#9;&#9;GUI.Info.Visible = true;
&#9;else
&#9;&#9;GUI.Info.Visible = false;
&#9;end;

&#9;if self.State.length_resized then
&#9;&#9;GUI.Changes.Text.Text = &quot;resized &quot; .. tostring( self.State.length_resized ) .. &quot; studs&quot;;
&#9;&#9;GUI.Changes.Position = GUI.Info.Visible and UDim2.new( 0, 5, 0, 165 ) or UDim2.new( 0, 5, 0, 100 );
&#9;&#9;GUI.Changes.Visible = true;
&#9;else
&#9;&#9;GUI.Changes.Text.Text = &quot;&quot;;
&#9;&#9;GUI.Changes.Visible = false;
&#9;end;

end;

Tools.Resize.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Resize.showHandles = function ( self, Part )

&#9;-- Create the handles if they don&apos;t exist yet
&#9;if not self.Handles then

&#9;&#9;-- Create the object
&#9;&#9;self.Handles = RbxUtility.Create &quot;Handles&quot; {
&#9;&#9;&#9;Name = &quot;BTResizeHandles&quot;;
&#9;&#9;&#9;Style = Enum.HandlesStyle.Resize;
&#9;&#9;&#9;Color = self.Color;
&#9;&#9;&#9;Parent = GUIContainer;
&#9;&#9;};

&#9;&#9;-- Add functionality to the handles
&#9;&#9;self.Handles.MouseButton1Down:connect( function ()

&#9;&#9;&#9;-- Prevent the platform from thinking we&apos;re selecting
&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;self.State.resizing = true;

&#9;&#9;&#9;-- Clear the change stats
&#9;&#9;&#9;self.State.length_resized = 0;

&#9;&#9;&#9;self:startHistoryRecord();

&#9;&#9;&#9;-- Do a few things to the selection before manipulating it
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Keep a copy of the state of each item
&#9;&#9;&#9;&#9;self.State.PreResize[Item] = Item:Clone();

&#9;&#9;&#9;&#9;-- Make the item be able to be freely resized
&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.FormFactor; end ) ) then
&#9;&#9;&#9;&#9;&#9;Item.FormFactor = Enum.FormFactor.Custom;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- Anchor each item
&#9;&#9;&#9;&#9;Item.Anchored = true;

&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Return stuff to normal once the mouse button is released
&#9;&#9;&#9;self.Connections.HandleReleaseListener = Mouse.Button1Up:connect( function ()

&#9;&#9;&#9;&#9;-- Prevent the platform from thinking we&apos;re selecting
&#9;&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;&#9;self.State.resizing = false;

&#9;&#9;&#9;&#9;-- Stop this connection from firing again
&#9;&#9;&#9;&#9;if self.Connections.HandleReleaseListener then
&#9;&#9;&#9;&#9;&#9;self.Connections.HandleReleaseListener:disconnect();
&#9;&#9;&#9;&#9;&#9;self.Connections.HandleReleaseListener = nil;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self:finishHistoryRecord();

&#9;&#9;&#9;&#9;-- Restore properties that may have been changed temporarily
&#9;&#9;&#9;&#9;-- from the pre-resize state copies
&#9;&#9;&#9;&#9;for Item, PreviousItemState in pairs( self.State.PreResize ) do
&#9;&#9;&#9;&#9;&#9;Item.Anchored = PreviousItemState.Anchored;
&#9;&#9;&#9;&#9;&#9;self.State.PreResize[Item] = nil;
&#9;&#9;&#9;&#9;&#9;Item:MakeJoints();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end );

&#9;&#9;end );

&#9;&#9;self.Handles.MouseDrag:connect( function ( face, drag_distance )

&#9;&#9;&#9;-- Calculate which multiple of the increment to use based on the current drag distance&apos;s
&#9;&#9;&#9;-- proximity to their nearest upper and lower multiples

&#9;&#9;&#9;local difference = drag_distance % self.Options.increment;

&#9;&#9;&#9;local lower_degree = drag_distance - difference;
&#9;&#9;&#9;local upper_degree = drag_distance - difference + self.Options.increment;

&#9;&#9;&#9;local lower_degree_proximity = math.abs( drag_distance - lower_degree );
&#9;&#9;&#9;local upper_degree_proximity = math.abs( drag_distance - upper_degree );

&#9;&#9;&#9;if lower_degree_proximity &lt;= upper_degree_proximity then
&#9;&#9;&#9;&#9;drag_distance = lower_degree;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;drag_distance = upper_degree;
&#9;&#9;&#9;end;

&#9;&#9;&#9;local increase = drag_distance;

&#9;&#9;&#9;-- Log the distance that the handle was dragged
&#9;&#9;&#9;self.State.previous_distance = drag_distance;

&#9;&#9;&#9;-- Note the length by which the selection will be enlarged
&#9;&#9;&#9;if self.Options.directions == &quot;both&quot; then
&#9;&#9;&#9;&#9;increase = drag_distance * 2;
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.length_resized = increase;

&#9;&#9;&#9;-- Go through the selection and make changes to it
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Keep a copy of `Item` in case we need to revert anything
&#9;&#9;&#9;&#9;local PreviousItemState = Item:Clone();

&#9;&#9;&#9;&#9;-- Break any of `Item`&apos;s joints so it can move freely
&#9;&#9;&#9;&#9;Item:BreakJoints();

&#9;&#9;&#9;&#9;-- Position and resize `Item` according to the options and the handle that was used

&#9;&#9;&#9;&#9;if face == Enum.NormalId.Top then

&#9;&#9;&#9;&#9;&#9;-- Calculate the appropriate increment to the size based on the shape of `Item`
&#9;&#9;&#9;&#9;&#9;local SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, increase, increase );
&#9;&#9;&#9;&#9;&#9;elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( 0, increase, 0 );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;&#9;Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.directions == &quot;normal&quot; and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( 0, increase / 2, 0 ) ) )
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  or ( self.Options.directions == &quot;both&quot; and self.State.PreResize[Item].CFrame );
&#9;&#9;&#9;&#9;&#9;-- If the resizing was not possible, revert `Item`&apos;s state
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Item.Size = PreviousItemState.Size;
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = PreviousItemState.CFrame;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Bottom then

&#9;&#9;&#9;&#9;&#9;-- Calculate the appropriate increment to the size based on the shape of `Item`
&#9;&#9;&#9;&#9;&#9;local SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, increase, increase );
&#9;&#9;&#9;&#9;&#9;elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( 0, increase, 0 );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;&#9;Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.directions == &quot;normal&quot; and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( 0, -increase / 2, 0 ) ) )
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  or ( self.Options.directions == &quot;both&quot; and self.State.PreResize[Item].CFrame );
&#9;&#9;&#9;&#9;&#9;-- If the resizing was not possible, revert `Item`&apos;s state
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Item.Size = PreviousItemState.Size;
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = PreviousItemState.CFrame;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Front then

&#9;&#9;&#9;&#9;&#9;-- Calculate the appropriate increment to the size based on the shape of `Item`
&#9;&#9;&#9;&#9;&#9;local SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, increase, increase );
&#9;&#9;&#9;&#9;&#9;elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( 0, 0, increase );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;&#9;Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.directions == &quot;normal&quot; and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, -increase / 2 ) ) )
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  or ( self.Options.directions == &quot;both&quot; and self.State.PreResize[Item].CFrame );
&#9;&#9;&#9;&#9;&#9;-- If the resizing was not possible, revert `Item`&apos;s state
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Item.Size = PreviousItemState.Size;
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = PreviousItemState.CFrame;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Back then

&#9;&#9;&#9;&#9;&#9;-- Calculate the appropriate increment to the size based on the shape of `Item`
&#9;&#9;&#9;&#9;&#9;local SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, increase, increase );
&#9;&#9;&#9;&#9;&#9;elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( 0, 0, increase );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;&#9;Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.directions == &quot;normal&quot; and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, increase / 2 ) ) )
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  or ( self.Options.directions == &quot;both&quot; and self.State.PreResize[Item].CFrame );
&#9;&#9;&#9;&#9;&#9;-- If the resizing was not possible, revert `Item`&apos;s state
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Item.Size = PreviousItemState.Size;
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = PreviousItemState.CFrame;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Left then

&#9;&#9;&#9;&#9;&#9;-- Calculate the appropriate increment to the size based on the shape of `Item`
&#9;&#9;&#9;&#9;&#9;local SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, increase, increase );
&#9;&#9;&#9;&#9;&#9;elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, 0, 0 );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;&#9;Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.directions == &quot;normal&quot; and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( -increase / 2, 0, 0 ) ) )
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  or ( self.Options.directions == &quot;both&quot; and self.State.PreResize[Item].CFrame );
&#9;&#9;&#9;&#9;&#9;-- If the resizing was not possible, revert `Item`&apos;s state
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Item.Size = PreviousItemState.Size;
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = PreviousItemState.CFrame;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Right then

&#9;&#9;&#9;&#9;&#9;-- Calculate the appropriate increment to the size based on the shape of `Item`
&#9;&#9;&#9;&#9;&#9;local SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, increase, increase );
&#9;&#9;&#9;&#9;&#9;elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, 0, 0 );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;&#9;Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.directions == &quot;normal&quot; and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( increase / 2, 0, 0 ) ) )
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  or ( self.Options.directions == &quot;both&quot; and self.State.PreResize[Item].CFrame );
&#9;&#9;&#9;&#9;&#9;-- If the resizing was not possible, revert `Item`&apos;s state
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Item.Size = PreviousItemState.Size;
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = PreviousItemState.CFrame;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- Make joints with surrounding parts again once the resizing is done
&#9;&#9;&#9;&#9;Item:MakeJoints();

&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;end;

&#9;-- Stop listening for the existence of the previous adornee (if any)
&#9;if self.Connections.AdorneeExistenceListener then
&#9;&#9;self.Connections.AdorneeExistenceListener:disconnect();
&#9;&#9;self.Connections.AdorneeExistenceListener = nil;
&#9;end;

&#9;-- Attach the handles to `Part`
&#9;self.Handles.Adornee = Part;

&#9;-- Make sure to hide the handles if `Part` suddenly stops existing
&#9;self.Connections.AdorneeExistenceListener = Part.AncestryChanged:connect( function ( Object, NewParent )

&#9;&#9;-- Make sure this change in parent applies directly to `Part`
&#9;&#9;if Object ~= Part then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Show the handles according to the existence of the part
&#9;&#9;if NewParent == nil then
&#9;&#9;&#9;self:hideHandles();
&#9;&#9;else
&#9;&#9;&#9;self:showHandles( Part );
&#9;&#9;end;

&#9;end );

end;

Tools.Resize.hideHandles = function ( self )

&#9;-- Hide the handles if they exist
&#9;if self.Handles then
&#9;&#9;self.Handles.Adornee = nil;
&#9;end;

end;

Tools.Resize.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX4">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTRotateTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Rotate tool
------------------------------------------

-- Create the tool
Tools.Rotate = {};

-- Create structures to hold data that the tool needs
Tools.Rotate.Connections = {};

Tools.Rotate.Options = {
&#9;[&quot;increment&quot;] = 15;
&#9;[&quot;pivot&quot;] = &quot;center&quot;
};

Tools.Rotate.State = {
&#9;[&quot;PreRotation&quot;] = {};
&#9;[&quot;rotating&quot;] = false;
&#9;[&quot;previous_distance&quot;] = 0;
&#9;[&quot;degrees_rotated&quot;] = 0;
&#9;[&quot;rotation_size&quot;] = 0;
};

Tools.Rotate.Listeners = {};

-- Define the color of the tool
Tools.Rotate.Color = BrickColor.new( &quot;Bright green&quot; );

-- Start adding functionality to the tool
Tools.Rotate.Listeners.Equipped = function ()

&#9;local self = Tools.Rotate;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Create the boundingbox if it doesn&apos;t already exist
&#9;if not self.BoundingBox then
&#9;&#9;self.BoundingBox = RbxUtility.Create &quot;Part&quot; {
&#9;&#9;&#9;Name = &quot;BTBoundingBox&quot;;
&#9;&#9;&#9;CanCollide = false;
&#9;&#9;&#9;Transparency = 1;
&#9;&#9;&#9;Anchored = true;
&#9;&#9;};
&#9;end;
&#9;Mouse.TargetFilter = self.BoundingBox;

&#9;-- Update the pivot option
&#9;self:changePivot( self.Options.pivot );

&#9;-- Oh, and update the boundingbox and the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- Update the boundingbox if it&apos;s visible
&#9;&#9;&#9;&#9;if self.Options.pivot == &quot;center&quot; then
&#9;&#9;&#9;&#9;&#9;self:updateBoundingBox();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

&#9;-- Also enable the ability to select an edge as a pivot
&#9;SelectEdge:start( function ( EdgeMarker )
&#9;&#9;self:changePivot( &quot;last&quot; );
&#9;&#9;self.Options.PivotPoint = EdgeMarker.CFrame;
&#9;&#9;self.Connections.EdgeSelectionRemover = Selection.Changed:connect( function ()
&#9;&#9;&#9;self.Options.PivotPoint = nil;
&#9;&#9;&#9;if self.Connections.EdgeSelectionRemover then
&#9;&#9;&#9;&#9;self.Connections.EdgeSelectionRemover:disconnect();
&#9;&#9;&#9;&#9;self.Connections.EdgeSelectionRemover = nil;
&#9;&#9;&#9;end;
&#9;&#9;end );
&#9;&#9;self:showHandles( EdgeMarker );
&#9;end );

end;

Tools.Rotate.Listeners.Unequipped = function ()

&#9;local self = Tools.Rotate;

&#9;-- Stop the update loop
&#9;if self.Updater then
&#9;&#9;self.Updater();
&#9;&#9;self.Updater = nil;
&#9;end;

&#9;-- Disable the ability to select edges
&#9;SelectEdge:stop();
&#9;if self.Options.PivotPoint then
&#9;&#9;self.Options.PivotPoint = nil;
&#9;end;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Hide the handles
&#9;self:hideHandles();

&#9;-- Clear out any temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of the selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Rotate.Listeners.Button1Down = function ()

&#9;local self = Tools.Rotate;

&#9;if not self.State.rotating and self.Options.PivotPoint then
&#9;&#9;self.Options.PivotPoint = nil;
&#9;end;

end;

Tools.Rotate.Listeners.KeyUp = function ( Key )
&#9;local self = Tools.Rotate;

&#9;-- Provide a keyboard shortcut to the increment input
&#9;if Key == &quot;&apos;&quot; and self.GUI then
&#9;&#9;self.GUI.IncrementOption.Increment.TextBox:CaptureFocus();
&#9;end;
end;

Tools.Rotate.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces.BTRotateToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;-- Change the pivot type option when the button is clicked
&#9;&#9;Container.PivotOption.Center.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changePivot( &quot;center&quot; );
&#9;&#9;end );

&#9;&#9;Container.PivotOption.Local.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changePivot( &quot;local&quot; );
&#9;&#9;end );

&#9;&#9;Container.PivotOption.Last.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changePivot( &quot;last&quot; );
&#9;&#9;end );

&#9;&#9;-- Change the increment option when the value of the textbox is updated
&#9;&#9;Container.IncrementOption.Increment.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;self.Options.increment = tonumber( Container.IncrementOption.Increment.TextBox.Text ) or self.Options.increment;
&#9;&#9;&#9;Container.IncrementOption.Increment.TextBox.Text = tostring( self.Options.increment );
&#9;&#9;end );

&#9;&#9;-- Add functionality to the rotation inputs
&#9;&#9;Container.Info.RotationInfo.X.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.rot_x_focused = true;
&#9;&#9;&#9;Container.Info.RotationInfo.X.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.RotationInfo.X.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.RotationInfo.X.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeRotation( &apos;x&apos;, math.rad( potential_new ) );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.rot_x_focused = false;
&#9;&#9;end );
&#9;&#9;Container.Info.RotationInfo.Y.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.rot_y_focused = true;
&#9;&#9;&#9;Container.Info.RotationInfo.Y.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.RotationInfo.Y.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.RotationInfo.Y.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeRotation( &apos;y&apos;, math.rad( potential_new ) );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.rot_y_focused = false;
&#9;&#9;end );
&#9;&#9;Container.Info.RotationInfo.Z.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.rot_z_focused = true;
&#9;&#9;&#9;Container.Info.RotationInfo.Z.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.RotationInfo.Z.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.RotationInfo.Z.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeRotation( &apos;z&apos;, math.rad( potential_new ) );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.rot_z_focused = false;
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Rotate.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_cframes = {};
&#9;&#9;terminal_cframes = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.initial_cframes[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.terminal_cframes[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_cframes[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;

end;

Tools.Rotate.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_cframes[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Rotate.changeRotation = function ( self, component, new_value )

&#9;self:startHistoryRecord();

&#9;-- Change the rotation of each item selected
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local old_x_rot, old_y_rot, old_z_rot = Item.CFrame:toEulerAnglesXYZ();
&#9;&#9;Item.CFrame = CFrame.new( Item.Position ) * CFrame.Angles(
&#9;&#9;&#9;component == &apos;x&apos; and new_value or old_x_rot,
&#9;&#9;&#9;component == &apos;y&apos; and new_value or old_y_rot,
&#9;&#9;&#9;component == &apos;z&apos; and new_value or old_z_rot
&#9;&#9;);
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Rotate.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;local GUI = self.GUI;

&#9;if #Selection.Items &gt; 0 then

&#9;&#9;-- Look for identical numbers in each axis
&#9;&#9;local rot_x, rot_y, rot_z = nil, nil, nil;
&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;local item_rot_x, item_rot_y, item_rot_z = Item.CFrame:toEulerAnglesXYZ();

&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;rot_x, rot_y, rot_z = _round( math.deg( item_rot_x ), 2 ), _round( math.deg( item_rot_y ), 2 ), _round( math.deg( item_rot_z ), 2 );

&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if rot_x ~= _round( math.deg( item_rot_x ), 2 ) then
&#9;&#9;&#9;&#9;&#9;rot_x = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if rot_y ~= _round( math.deg( item_rot_y ), 2 ) then
&#9;&#9;&#9;&#9;&#9;rot_y = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if rot_z ~= _round( math.deg( item_rot_z ), 2 ) then
&#9;&#9;&#9;&#9;&#9;rot_z = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;&#9;-- Update the size info on the GUI
&#9;&#9;if not self.State.rot_x_focused then
&#9;&#9;&#9;GUI.Info.RotationInfo.X.TextBox.Text = rot_x and tostring( rot_x ) or &quot;*&quot;;
&#9;&#9;end;
&#9;&#9;if not self.State.rot_y_focused then
&#9;&#9;&#9;GUI.Info.RotationInfo.Y.TextBox.Text = rot_y and tostring( rot_y ) or &quot;*&quot;;
&#9;&#9;end;
&#9;&#9;if not self.State.rot_z_focused then
&#9;&#9;&#9;GUI.Info.RotationInfo.Z.TextBox.Text = rot_z and tostring( rot_z ) or &quot;*&quot;;
&#9;&#9;end;

&#9;&#9;GUI.Info.Visible = true;
&#9;else
&#9;&#9;GUI.Info.Visible = false;
&#9;end;

&#9;if self.State.degrees_rotated then
&#9;&#9;GUI.Changes.Text.Text = &quot;rotated &quot; .. tostring( self.State.degrees_rotated ) .. &quot; degrees&quot;;
&#9;&#9;GUI.Changes.Position = GUI.Info.Visible and UDim2.new( 0, 5, 0, 165 ) or UDim2.new( 0, 5, 0, 100 );
&#9;&#9;GUI.Changes.Visible = true;
&#9;else
&#9;&#9;GUI.Changes.Text.Text = &quot;&quot;;
&#9;&#9;GUI.Changes.Visible = false;
&#9;end;

end;

Tools.Rotate.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Rotate.updateBoundingBox = function ( self )

&#9;if #Selection.Items &gt; 0 then
&#9;&#9;local SelectionSize, SelectionPosition = _getCollectionInfo( Selection.Items );
&#9;&#9;self.BoundingBox.Size = SelectionSize;
&#9;&#9;self.BoundingBox.CFrame = SelectionPosition;
&#9;&#9;self:showHandles( self.BoundingBox );

&#9;else
&#9;&#9;self:hideHandles();
&#9;end;

end;

Tools.Rotate.changePivot = function ( self, new_pivot )

&#9;-- Have a quick reference to the GUI (if any)
&#9;local PivotOptionGUI = self.GUI and self.GUI.PivotOption or nil;

&#9;-- Disconnect any handle-related listeners that are specific to a certain pivot option
&#9;if self.Connections.HandleFocusChangeListener then
&#9;&#9;self.Connections.HandleFocusChangeListener:disconnect();
&#9;&#9;self.Connections.HandleFocusChangeListener = nil;
&#9;end;

&#9;if self.Connections.HandleSelectionChangeListener then
&#9;&#9;self.Connections.HandleSelectionChangeListener:disconnect();
&#9;&#9;self.Connections.HandleSelectionChangeListener = nil;
&#9;end;

&#9;-- Remove any temporary edge selection
&#9;if self.Options.PivotPoint then
&#9;&#9;self.Options.PivotPoint = nil;
&#9;end;

&#9;if new_pivot == &quot;center&quot; then

&#9;&#9;-- Update the options
&#9;&#9;self.Options.pivot = &quot;center&quot;;

&#9;&#9;-- Focus the handles on the boundingbox
&#9;&#9;self:showHandles( self.BoundingBox );

&#9;&#9;-- Update the GUI&apos;s option panel
&#9;&#9;if self.GUI then
&#9;&#9;&#9;PivotOptionGUI.Center.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;PivotOptionGUI.Center.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;PivotOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;PivotOptionGUI.Local.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;PivotOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;PivotOptionGUI.Last.Background.Image = light_slanted_rectangle;
&#9;&#9;end;

&#9;end;

&#9;if new_pivot == &quot;local&quot; then

&#9;&#9;-- Update the options
&#9;&#9;self.Options.pivot = &quot;local&quot;;

&#9;&#9;-- Always have the handles on the most recent addition to the selection
&#9;&#9;self.Connections.HandleSelectionChangeListener = Selection.Changed:connect( function ()

&#9;&#9;&#9;-- Clear out any previous adornee
&#9;&#9;&#9;self:hideHandles();

&#9;&#9;&#9;-- If there /is/ a last item in the selection, attach the handles to it
&#9;&#9;&#9;if Selection.Last then
&#9;&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Switch the adornee of the handles if the second mouse button is pressed
&#9;&#9;self.Connections.HandleFocusChangeListener = Mouse.Button2Up:connect( function ()

&#9;&#9;&#9;-- Make sure the platform doesn&apos;t think we&apos;re selecting
&#9;&#9;&#9;override_selection = true;

&#9;&#9;&#9;-- If the target is in the selection, make it the new adornee
&#9;&#9;&#9;if Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;Selection:focus( Mouse.Target );
&#9;&#9;&#9;&#9;self:showHandles( Mouse.Target );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Finally, attach the handles to the last item added to the selection (if any)
&#9;&#9;if Selection.Last then
&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;end;

&#9;&#9;-- Update the GUI&apos;s option panel
&#9;&#9;if self.GUI then
&#9;&#9;&#9;PivotOptionGUI.Center.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;PivotOptionGUI.Center.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;PivotOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;PivotOptionGUI.Local.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;PivotOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;PivotOptionGUI.Last.Background.Image = light_slanted_rectangle;
&#9;&#9;end;

&#9;end;

&#9;if new_pivot == &quot;last&quot; then

&#9;&#9;-- Update the options
&#9;&#9;self.Options.pivot = &quot;last&quot;;

&#9;&#9;-- Always have the handles on the most recent addition to the selection
&#9;&#9;self.Connections.HandleSelectionChangeListener = Selection.Changed:connect( function ()

&#9;&#9;&#9;-- Clear out any previous adornee
&#9;&#9;&#9;if not self.Options.PivotPoint then
&#9;&#9;&#9;&#9;self:hideHandles();
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- If there /is/ a last item in the selection, attach the handles to it
&#9;&#9;&#9;if Selection.Last and not self.Options.PivotPoint then
&#9;&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Switch the adornee of the handles if the second mouse button is pressed
&#9;&#9;self.Connections.HandleFocusChangeListener = Mouse.Button2Up:connect( function ()

&#9;&#9;&#9;-- Make sure the platform doesn&apos;t think we&apos;re selecting
&#9;&#9;&#9;override_selection = true;

&#9;&#9;&#9;-- If the target is in the selection, make it the new adornee
&#9;&#9;&#9;if Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;Selection:focus( Mouse.Target );
&#9;&#9;&#9;&#9;self:showHandles( Mouse.Target );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Finally, attach the handles to the last item added to the selection (if any)
&#9;&#9;if Selection.Last then
&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;end;

&#9;&#9;-- Update the GUI&apos;s option panel
&#9;&#9;if self.GUI then
&#9;&#9;&#9;PivotOptionGUI.Center.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;PivotOptionGUI.Center.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;PivotOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;PivotOptionGUI.Local.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;PivotOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;PivotOptionGUI.Last.Background.Image = dark_slanted_rectangle;
&#9;&#9;end;

&#9;end;

end;


Tools.Rotate.showHandles = function ( self, Part )

&#9;-- Create the handles if they don&apos;t exist yet
&#9;if not self.Handles then

&#9;&#9;-- Create the object
&#9;&#9;self.Handles = RbxUtility.Create &quot;ArcHandles&quot; {
&#9;&#9;&#9;Name = &quot;BTRotationHandles&quot;;
&#9;&#9;&#9;Color = self.Color;
&#9;&#9;&#9;Parent = GUIContainer;
&#9;&#9;};

&#9;&#9;-- Add functionality to the handles

&#9;&#9;self.Handles.MouseButton1Down:connect( function ()

&#9;&#9;&#9;-- Prevent the platform from thinking we&apos;re selecting
&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;self.State.rotating = true;

&#9;&#9;&#9;-- Clear the change stats
&#9;&#9;&#9;self.State.degrees_rotated = 0;
&#9;&#9;&#9;self.State.rotation_size = 0;

&#9;&#9;&#9;self:startHistoryRecord();

&#9;&#9;&#9;-- Do a few things to the selection before manipulating it
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Keep a copy of the state of each item
&#9;&#9;&#9;&#9;self.State.PreRotation[Item] = Item:Clone();

&#9;&#9;&#9;&#9;-- Anchor each item
&#9;&#9;&#9;&#9;Item.Anchored = true;

&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Also keep the position of the original selection
&#9;&#9;&#9;local PreRotationSize, PreRotationPosition = _getCollectionInfo( self.State.PreRotation );
&#9;&#9;&#9;self.State.PreRotationPosition = PreRotationPosition;

&#9;&#9;&#9;-- Return stuff to normal once the mouse button is released
&#9;&#9;&#9;self.Connections.HandleReleaseListener = Mouse.Button1Up:connect( function ()

&#9;&#9;&#9;&#9;-- Prevent the platform from thinking we&apos;re selecting
&#9;&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;&#9;self.State.rotating = false;

&#9;&#9;&#9;&#9;-- Stop this connection from firing again
&#9;&#9;&#9;&#9;if self.Connections.HandleReleaseListener then
&#9;&#9;&#9;&#9;&#9;self.Connections.HandleReleaseListener:disconnect();
&#9;&#9;&#9;&#9;&#9;self.Connections.HandleReleaseListener = nil;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self:finishHistoryRecord();

&#9;&#9;&#9;&#9;-- Restore properties that may have been changed temporarily
&#9;&#9;&#9;&#9;-- from the pre-rotation state copies
&#9;&#9;&#9;&#9;for Item, PreviousItemState in pairs( self.State.PreRotation ) do
&#9;&#9;&#9;&#9;&#9;Item.Anchored = PreviousItemState.Anchored;
&#9;&#9;&#9;&#9;&#9;self.State.PreRotation[Item] = nil;
&#9;&#9;&#9;&#9;&#9;Item:MakeJoints();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end );

&#9;&#9;end );

&#9;&#9;self.Handles.MouseDrag:connect( function ( axis, drag_distance )

&#9;&#9;&#9;-- Round down and convert the drag distance to degrees to make it easier to work with
&#9;&#9;&#9;local drag_distance = math.floor( math.deg( drag_distance ) );

&#9;&#9;&#9;-- Calculate which multiple of the increment to use based on the current angle&apos;s
&#9;&#9;&#9;-- proximity to their nearest upper and lower multiples

&#9;&#9;&#9;local difference = drag_distance % self.Options.increment;

&#9;&#9;&#9;local lower_degree = drag_distance - difference;
&#9;&#9;&#9;local upper_degree = drag_distance - difference + self.Options.increment;

&#9;&#9;&#9;local lower_degree_proximity = math.abs( drag_distance - lower_degree );
&#9;&#9;&#9;local upper_degree_proximity = math.abs( drag_distance - upper_degree );

&#9;&#9;&#9;if lower_degree_proximity &lt;= upper_degree_proximity then
&#9;&#9;&#9;&#9;drag_distance = lower_degree;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;drag_distance = upper_degree;
&#9;&#9;&#9;end;

&#9;&#9;&#9;local increase = self.Options.increment * math.floor( drag_distance / self.Options.increment );

&#9;&#9;&#9;self.State.degrees_rotated = drag_distance;

&#9;&#9;&#9;-- Go through the selection and make changes to it
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Keep a copy of `Item` in case we need to revert anything
&#9;&#9;&#9;&#9;local PreviousItemState = Item:Clone();

&#9;&#9;&#9;&#9;-- Break any of `Item`&apos;s joints so it can move freely
&#9;&#9;&#9;&#9;Item:BreakJoints();

&#9;&#9;&#9;&#9;-- Rotate `Item` according to the options and the handle that was used
&#9;&#9;&#9;&#9;if axis == Enum.Axis.Y then
&#9;&#9;&#9;&#9;&#9;if self.Options.pivot == &quot;center&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreRotationPosition:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, math.rad( increase ), 0 ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.State.PreRotationPosition ):inverse() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.pivot == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreRotation[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, math.rad( increase ), 0 ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.pivot == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, math.rad( increase ), 0 ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;elseif axis == Enum.Axis.X then
&#9;&#9;&#9;&#9;&#9;if self.Options.pivot == &quot;center&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreRotationPosition:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( math.rad( increase ), 0, 0 ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.State.PreRotationPosition ):inverse() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.pivot == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreRotation[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( math.rad( increase ), 0, 0 ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.pivot == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( math.rad( increase ), 0, 0 ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;elseif axis == Enum.Axis.Z then
&#9;&#9;&#9;&#9;&#9;if self.Options.pivot == &quot;center&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreRotationPosition:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, 0, math.rad( increase ) ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.State.PreRotationPosition ):inverse() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.pivot == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreRotation[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, 0, math.rad( increase ) ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.pivot == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, 0, math.rad( increase ) ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- Make joints with surrounding parts again once the resizing is done
&#9;&#9;&#9;&#9;Item:MakeJoints();

&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;end;

&#9;-- Stop listening for the existence of the previous adornee (if any)
&#9;if self.Connections.AdorneeExistenceListener then
&#9;&#9;self.Connections.AdorneeExistenceListener:disconnect();
&#9;&#9;self.Connections.AdorneeExistenceListener = nil;
&#9;end;

&#9;-- Attach the handles to `Part`
&#9;self.Handles.Adornee = Part;

&#9;-- Make sure to hide the handles if `Part` suddenly stops existing
&#9;self.Connections.AdorneeExistenceListener = Part.AncestryChanged:connect( function ( Object, NewParent )

&#9;&#9;-- Make sure this change in parent applies directly to `Part`
&#9;&#9;if Object ~= Part then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Show the handles according to the existence of the part
&#9;&#9;if NewParent == nil then
&#9;&#9;&#9;self:hideHandles();
&#9;&#9;else
&#9;&#9;&#9;self:showHandles( Part );
&#9;&#9;end;

&#9;end );

end;

Tools.Rotate.hideHandles = function ( self )

&#9;-- Hide the handles if they exist
&#9;if self.Handles then
&#9;&#9;self.Handles.Adornee = nil;
&#9;end;

end;

Tools.Rotate.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX5">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTPaintTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Paint tool
------------------------------------------

-- Create the main container for this tool
Tools.Paint = {};

-- Define the color of the tool
Tools.Paint.Color = BrickColor.new( &quot;Really red&quot; );

-- Define options
Tools.Paint.Options = {
&#9;[&quot;Color&quot;] = nil
};

Tools.Paint.State = {};

-- Add listeners
Tools.Paint.Listeners = {};

Tools.Paint.Listeners.Equipped = function ()

&#9;local self = Tools.Paint;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Show the GUI
&#9;self:showGUI();

&#9;-- Update the selected color
&#9;self:changeColor( self.Options.Color );

end;

Tools.Paint.Listeners.Unequipped = function ()

&#9;local self = Tools.Paint;

&#9;-- Clear out the preferred color option
&#9;self:changeColor( nil );

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Restore the original color of the selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Paint.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_colors = {};
&#9;&#9;terminal_colors = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.BrickColor = self.initial_colors[Target];
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.BrickColor = self.terminal_colors[Target];
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_colors[Item] = Item.BrickColor;
&#9;&#9;end;
&#9;end;

end;

Tools.Paint.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_colors[Item] = Item.BrickColor;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Paint.Listeners.Button1Up = function ()

&#9;local self = Tools.Paint;

&#9;-- Make sure that they clicked on one of the items in their selection
&#9;-- (and they weren&apos;t multi-selecting)
&#9;if Selection:find( Mouse.Target ) and not selecting and not selecting then

&#9;&#9;override_selection = true;

&#9;&#9;self:startHistoryRecord();

&#9;&#9;-- Paint all of the selected items `Tools.Paint.Options.Color`
&#9;&#9;if self.Options.Color then
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;&#9;Item.BrickColor = self.Options.Color;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;self:finishHistoryRecord();

&#9;end;

end;

Tools.Paint.changeColor = function ( self, Color )

&#9;-- Alright so if `Color` is given, set that as the preferred color
&#9;if Color then

&#9;&#9;-- First of all, change the color option itself
&#9;&#9;self.Options.Color = Color;

&#9;&#9;self:startHistoryRecord();

&#9;&#9;-- Then, we want to update the color of any items in the selection
&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;Item.BrickColor = Color;
&#9;&#9;end;

&#9;&#9;self:finishHistoryRecord();

&#9;&#9;-- After that, we want to mark our new color in the palette
&#9;&#9;if self.GUI then

&#9;&#9;&#9;-- First clear out any other marks
&#9;&#9;&#9;for _, ColorSquare in pairs( self.GUI.Palette:GetChildren() ) do
&#9;&#9;&#9;&#9;ColorSquare.Text = &quot;&quot;;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Then mark the right square
&#9;&#9;&#9;self.GUI.Palette[Color.Name].Text = &quot;X&quot;;

&#9;&#9;end;

&#9;-- Otherwise, let&apos;s assume no color at all
&#9;else

&#9;&#9;-- Set the preferred color to none
&#9;&#9;self.Options.Color = nil;

&#9;&#9;-- Clear out any color option marks on any of the squares
&#9;&#9;if self.GUI then
&#9;&#9;&#9;for _, ColorSquare in pairs( self.GUI.Palette:GetChildren() ) do
&#9;&#9;&#9;&#9;ColorSquare.Text = &quot;&quot;;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;end;

end;

Tools.Paint.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces.BTPaintToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;for _, ColorButton in pairs( Container.Palette:GetChildren() ) do
&#9;&#9;&#9;ColorButton.MouseButton1Click:connect( function ()
&#9;&#9;&#9;&#9;self:changeColor( BrickColor.new( ColorButton.Name ) );
&#9;&#9;&#9;end );
&#9;&#9;end;

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Paint.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Paint.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX6">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTSurfaceTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Surface tool
------------------------------------------

-- Create the tool
Tools.Surface = {};

-- Define the tool&apos;s color
Tools.Surface.Color = BrickColor.new( &quot;Bright violet&quot; );

-- Keep a container for temporary connections
Tools.Surface.Connections = {};

-- Keep a container for state data
Tools.Surface.State = {
&#9;[&quot;type&quot;] = nil;
};

-- Maintain a container for options
Tools.Surface.Options = {
&#9;[&quot;side&quot;] = Enum.NormalId.Front;
};

-- Keep a container for platform event connections
Tools.Surface.Listeners = {};

-- Start adding functionality to the tool
Tools.Surface.Listeners.Equipped = function ()

&#9;local self = Tools.Surface;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Restore the side option
&#9;self:changeSurface( self.Options.side );

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the surface type of every item in the selection
&#9;&#9;&#9;&#9;local surface_type = nil;
&#9;&#9;&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;surface_type = Item[self.Options.side.Name .. &quot;Surface&quot;];

&#9;&#9;&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;if surface_type ~= Item[self.Options.side.Name .. &quot;Surface&quot;] then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;surface_type = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self.State.type = surface_type;

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Surface.Listeners.Unequipped = function ()

&#9;local self = Tools.Surface;

&#9;-- Stop the GUI updating loop
&#9;if self.Updater then
&#9;&#9;self.Updater();
&#9;&#9;self.Updater = nil;
&#9;end;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Surface.Listeners.Button2Down = function ()

&#9;local self = Tools.Surface;

&#9;-- Capture the camera rotation (for later use
&#9;-- in determining whether a surface was being
&#9;-- selected or the camera was being rotated
&#9;-- with the right mouse button)
&#9;local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
&#9;self.State.PreB2DownCameraRotation = Vector3.new( cr_x, cr_y, cr_z );

end;

Tools.Surface.Listeners.Button2Up = function ()

&#9;local self = Tools.Surface;

&#9;local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
&#9;local CameraRotation = Vector3.new( cr_x, cr_y, cr_z );

&#9;-- If a surface is selected
&#9;if Selection:find( Mouse.Target ) and self.State.PreB2DownCameraRotation == CameraRotation then
&#9;&#9;self:changeSurface( Mouse.TargetSurface );
&#9;end;

end;

Tools.Surface.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;target_surface = self.Options.side;
&#9;&#9;initial_surfaces = {};
&#9;&#9;terminal_surfaces = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target[self.target_surface.Name .. &quot;Surface&quot;] = self.initial_surfaces[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target[self.target_surface.Name .. &quot;Surface&quot;] = self.terminal_surfaces[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_surfaces[Item] = Item[self.Options.side.Name .. &quot;Surface&quot;];
&#9;&#9;end;
&#9;end;

end;

Tools.Surface.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_surfaces[Item] = Item[self.Options.side.Name .. &quot;Surface&quot;];
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Surface.SpecialTypeNames = {
&#9;SmoothNoOutlines = &quot;NO OUTLINE&quot;,
&#9;Inlet = &quot;INLETS&quot;
};

Tools.Surface.changeType = function ( self, surface_type )

&#9;self:startHistoryRecord();

&#9;-- Apply `surface_type` to all items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item[self.Options.side.Name .. &quot;Surface&quot;] = surface_type;
&#9;&#9;Item:MakeJoints();
&#9;end;

&#9;self:finishHistoryRecord();

&#9;self.TypeDropdown:selectOption( self.SpecialTypeNames[surface_type.Name] or surface_type.Name:upper() );
&#9;if self.TypeDropdown.open then
&#9;&#9;self.TypeDropdown:toggle();
&#9;end;
end;

Tools.Surface.changeSurface = function ( self, surface )
&#9;self.Options.side = surface;
&#9;self.SideDropdown:selectOption( surface.Name:upper() );
&#9;if self.SideDropdown.open then
&#9;&#9;self.SideDropdown:toggle();
&#9;end;
end;

Tools.Surface.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;if #Selection.Items &gt; 0 then
&#9;&#9;self.TypeDropdown:selectOption( self.State.type and ( self.SpecialTypeNames[self.State.type.Name] or self.State.type.Name:upper() ) or &quot;*&quot; );
&#9;else
&#9;&#9;self.TypeDropdown:selectOption( &quot;&quot; );
&#9;end;

end;

Tools.Surface.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces.BTSurfaceToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;local SideDropdown = createDropdown();
&#9;&#9;self.SideDropdown = SideDropdown;
&#9;&#9;SideDropdown.Frame.Parent = Container.SideOption;
&#9;&#9;SideDropdown.Frame.Position = UDim2.new( 0, 30, 0, 0 );
&#9;&#9;SideDropdown.Frame.Size = UDim2.new( 0, 72, 0, 25 );

&#9;&#9;SideDropdown:addOption( &quot;TOP&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSurface( Enum.NormalId.Top );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;BOTTOM&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSurface( Enum.NormalId.Bottom );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;FRONT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSurface( Enum.NormalId.Front );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;BACK&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSurface( Enum.NormalId.Back );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;LEFT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSurface( Enum.NormalId.Left );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;RIGHT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSurface( Enum.NormalId.Right );
&#9;&#9;end );

&#9;&#9;local TypeDropdown = createDropdown();
&#9;&#9;self.TypeDropdown = TypeDropdown;
&#9;&#9;TypeDropdown.Frame.Parent = Container.TypeOption;
&#9;&#9;TypeDropdown.Frame.Position = UDim2.new( 0, 30, 0, 0 );
&#9;&#9;TypeDropdown.Frame.Size = UDim2.new( 0, 87, 0, 25 );

&#9;&#9;TypeDropdown:addOption( &quot;STUDS&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Studs );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;INLETS&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Inlet );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;SMOOTH&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Smooth );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;WELD&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Weld );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;GLUE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Glue );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;UNIVERSAL&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Universal );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;HINGE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Hinge );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;MOTOR&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Motor );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;NO OUTLINE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.SmoothNoOutlines );
&#9;&#9;end );

&#9;&#9;self.GUI = Container;

&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Surface.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Surface.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX7">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTMaterialTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Material tool
------------------------------------------

-- Create the tool
Tools.Material = {};
Tools.Material.Color = BrickColor.new( &quot;Bright violet&quot; );
Tools.Material.Connections = {};
Tools.Material.State = {
&#9;[&quot;material&quot;] = nil;
&#9;[&quot;reflectance_focused&quot;] = false;
&#9;[&quot;transparency_focused&quot;] = false;
};
Tools.Material.Listeners = {};
Tools.Material.SpecialMaterialNames = {
&#9;CorrodedMetal = &quot;CORRODED METAL&quot;,
&#9;DiamondPlate = &quot;DIAMOND PLATE&quot;,
&#9;SmoothPlastic = &quot;SMOOTH PLASTIC&quot;
};

-- Start adding functionality to the tool
Tools.Material.Listeners.Equipped = function ()

&#9;local self = Tools.Material;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the material type of every item in the selection
&#9;&#9;&#9;&#9;local material_type, transparency, reflectance = nil, nil, nil;
&#9;&#9;&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;material_type = Item.Material;
&#9;&#9;&#9;&#9;&#9;&#9;transparency = Item.Transparency;
&#9;&#9;&#9;&#9;&#9;&#9;reflectance = Item.Reflectance;

&#9;&#9;&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;if material_type ~= Item.Material then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;material_type = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;&#9;if reflectance ~= Item.Reflectance then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;reflectance = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;&#9;if transparency ~= Item.Transparency then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;transparency = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self.State.material = material_type;
&#9;&#9;&#9;&#9;self.State.transparency = transparency;
&#9;&#9;&#9;&#9;self.State.reflectance = reflectance;

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Material.Listeners.Unequipped = function ()

&#9;local self = Tools.Material;

&#9;-- Stop the GUI updating loop
&#9;self.Updater();
&#9;self.Updater = nil;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Material.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_material = {};
&#9;&#9;terminal_material = {};
&#9;&#9;initial_transparency = {};
&#9;&#9;terminal_transparency = {};
&#9;&#9;initial_reflectance = {};
&#9;&#9;terminal_reflectance = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.Material = self.initial_material[Target];
&#9;&#9;&#9;&#9;&#9;Target.Transparency = self.initial_transparency[Target];
&#9;&#9;&#9;&#9;&#9;Target.Reflectance = self.initial_reflectance[Target];
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.Material = self.terminal_material[Target];
&#9;&#9;&#9;&#9;&#9;Target.Transparency = self.terminal_transparency[Target];
&#9;&#9;&#9;&#9;&#9;Target.Reflectance = self.terminal_reflectance[Target];
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_material[Item] = Item.Material;
&#9;&#9;&#9;self.State.HistoryRecord.initial_transparency[Item] = Item.Transparency;
&#9;&#9;&#9;self.State.HistoryRecord.initial_reflectance[Item] = Item.Reflectance;
&#9;&#9;end;
&#9;end;

end;

Tools.Material.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_material[Item] = Item.Material;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_transparency[Item] = Item.Transparency;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_reflectance[Item] = Item.Reflectance;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Material.changeMaterial = function ( self, material_type )

&#9;self:startHistoryRecord();

&#9;-- Apply `material_type` to all items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.Material = material_type;
&#9;end;

&#9;self:finishHistoryRecord();

&#9;if self.MaterialDropdown.open then
&#9;&#9;self.MaterialDropdown:toggle();
&#9;end;
end;

Tools.Material.changeTransparency = function ( self, transparency )

&#9;self:startHistoryRecord();

&#9;-- Apply `transparency` to all items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.Transparency = transparency;
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Material.changeReflectance = function ( self, reflectance )

&#9;self:startHistoryRecord();

&#9;-- Apply `reflectance` to all items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.Reflectance = reflectance;
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Material.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;if #Selection.Items &gt; 0 then
&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 145 );
&#9;&#9;self.GUI.MaterialOption.Visible = true;
&#9;&#9;self.GUI.ReflectanceOption.Visible = true;
&#9;&#9;self.GUI.TransparencyOption.Visible = true;
&#9;&#9;self.GUI.SelectNote.Visible = false;
&#9;&#9;self.MaterialDropdown:selectOption( self.State.material and ( self.SpecialMaterialNames[self.State.material.Name] or self.State.material.Name:upper() ) or &quot;*&quot; );

&#9;&#9;-- Update the text inputs without interrupting the user
&#9;&#9;if not self.State.transparency_focused then
&#9;&#9;&#9;self.GUI.TransparencyOption.TransparencyInput.TextBox.Text = self.State.transparency and tostring( _round( self.State.transparency, 2 ) ) or &quot;*&quot;;
&#9;&#9;end;
&#9;&#9;if not self.State.reflectance_focused then
&#9;&#9;&#9;self.GUI.ReflectanceOption.ReflectanceInput.TextBox.Text = self.State.reflectance and tostring( _round( self.State.reflectance, 2 ) ) or &quot;*&quot;;
&#9;&#9;end;

&#9;else
&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 62 );
&#9;&#9;self.GUI.MaterialOption.Visible = false;
&#9;&#9;self.GUI.ReflectanceOption.Visible = false;
&#9;&#9;self.GUI.TransparencyOption.Visible = false;
&#9;&#9;self.GUI.SelectNote.Visible = true;
&#9;&#9;self.MaterialDropdown:selectOption( &quot;&quot; );
&#9;&#9;self.GUI.TransparencyOption.TransparencyInput.TextBox.Text = &quot;&quot;;
&#9;&#9;self.GUI.ReflectanceOption.ReflectanceInput.TextBox.Text = &quot;&quot;;
&#9;end;

end;


Tools.Material.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces.BTMaterialToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;local MaterialDropdown = createDropdown();
&#9;&#9;self.MaterialDropdown = MaterialDropdown;
&#9;&#9;MaterialDropdown.Frame.Parent = Container.MaterialOption;
&#9;&#9;MaterialDropdown.Frame.Position = UDim2.new( 0, 50, 0, 0 );
&#9;&#9;MaterialDropdown.Frame.Size = UDim2.new( 0, 130, 0, 25 );

&#9;&#9;MaterialDropdown:addOption( &quot;SMOOTH PLASTIC&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.SmoothPlastic );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;PLASTIC&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Plastic );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;CONCRETE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Concrete );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;DIAMOND PLATE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.DiamondPlate );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;CORRODED METAL&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.CorrodedMetal );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;BRICK&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Brick );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;FABRIC&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Fabric );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;FOIL&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Foil );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;GRANITE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Granite );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;GRASS&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Grass );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;ICE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Ice );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;MARBLE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Marble );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;PEBBLE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Pebble );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;SAND&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Sand );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;SLATE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Slate );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;WOOD&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Wood );
&#9;&#9;end );

&#9;&#9;-- Capture focus of the input when clicked
&#9;&#9;-- (so we can detect when it is focused-on)
&#9;&#9;Container.TransparencyOption.TransparencyInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.transparency_focused = true;
&#9;&#9;&#9;Container.TransparencyOption.TransparencyInput.TextBox:CaptureFocus();
&#9;&#9;end );

&#9;&#9;-- Change the transparency when the value of the textbox is updated
&#9;&#9;Container.TransparencyOption.TransparencyInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.TransparencyOption.TransparencyInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 1 then
&#9;&#9;&#9;&#9;&#9;potential_new = 1;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeTransparency( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.transparency_focused = false;
&#9;&#9;end );

&#9;&#9;-- Capture focus of the input when clicked
&#9;&#9;-- (so we can detect when it is focused-on)
&#9;&#9;Container.ReflectanceOption.ReflectanceInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.reflectance_focused = true;
&#9;&#9;&#9;Container.ReflectanceOption.ReflectanceInput.TextBox:CaptureFocus();
&#9;&#9;end );

&#9;&#9;-- Change the reflectance when the value of the textbox is updated
&#9;&#9;Container.ReflectanceOption.ReflectanceInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.ReflectanceOption.ReflectanceInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 1 then
&#9;&#9;&#9;&#9;&#9;potential_new = 1;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeReflectance( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.reflectance_focused = false;
&#9;&#9;end );

&#9;&#9;self.GUI = Container;

&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Material.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Material.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX8">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTAnchorTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Anchor tool
------------------------------------------

-- Create the tool
Tools.Anchor = {};

-- Create structures to hold data that the tool needs
Tools.Anchor.Connections = {};

Tools.Anchor.State = {
&#9;[&quot;anchored&quot;] = nil;
};

Tools.Anchor.Listeners = {};

-- Define the color of the tool
Tools.Anchor.Color = BrickColor.new( &quot;Really black&quot; );

-- Start adding functionality to the tool
Tools.Anchor.Listeners.Equipped = function ()

&#9;local self = Tools.Anchor;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the anchor status of every item in the selection
&#9;&#9;&#9;&#9;local anchor_status = nil;
&#9;&#9;&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;anchor_status = Item.Anchored;

&#9;&#9;&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;if anchor_status ~= Item.Anchored then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;anchor_status = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self.State.anchored = anchor_status;

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

&#9;-- Listen for the Enter button to be pressed to toggle the anchor
&#9;self.Connections.EnterButtonListener = Mouse.KeyDown:connect( function ( key )

&#9;&#9;local key = key:lower();
&#9;&#9;local key_code = key:byte();

&#9;&#9;-- If the Enter button is pressed
&#9;&#9;if key_code == 13 then

&#9;&#9;&#9;if self.State.anchored == true then
&#9;&#9;&#9;&#9;self:unanchor();

&#9;&#9;&#9;elseif self.State.anchored == false then
&#9;&#9;&#9;&#9;self:anchor();

&#9;&#9;&#9;elseif self.State.anchored == nil then
&#9;&#9;&#9;&#9;self:anchor();

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end );

end;


Tools.Anchor.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_positions = {};
&#9;&#9;terminal_positions = {};
&#9;&#9;initial_anchors = {};
&#9;&#9;terminal_anchors = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.RotVelocity = Vector3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;&#9;Target.Velocity = Vector3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.initial_positions[Target];
&#9;&#9;&#9;&#9;&#9;Target.Anchored = self.initial_anchors[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.RotVelocity = Vector3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;&#9;Target.Velocity = Vector3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.terminal_positions[Target];
&#9;&#9;&#9;&#9;&#9;Target.Anchored = self.terminal_anchors[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_anchors[Item] = Item.Anchored;
&#9;&#9;&#9;self.State.HistoryRecord.initial_positions[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;

end;

Tools.Anchor.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_anchors[Item] = Item.Anchored;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_positions[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Anchor.anchor = function ( self )

&#9;self:startHistoryRecord();

&#9;-- Anchor all the items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.Anchored = true;
&#9;&#9;Item:MakeJoints();
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Anchor.unanchor = function ( self )

&#9;self:startHistoryRecord();

&#9;-- Unanchor all the items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.Anchored = false;
&#9;&#9;Item.Velocity = Vector3.new( 0, 0, 0 );
&#9;&#9;Item.RotVelocity = Vector3.new( 0, 0, 0 );
&#9;&#9;Item:MakeJoints();
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Anchor.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces.BTAnchorToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;-- Change the anchor status when the button is clicked
&#9;&#9;Container.Status.Anchored.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:anchor();
&#9;&#9;end );

&#9;&#9;Container.Status.Unanchored.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:unanchor();
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Anchor.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;local GUI = self.GUI;

&#9;if self.State.anchored == nil then
&#9;&#9;GUI.Status.Anchored.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.Anchored.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;GUI.Status.Unanchored.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.Unanchored.SelectedIndicator.BackgroundTransparency = 1;

&#9;elseif self.State.anchored == true then
&#9;&#9;GUI.Status.Anchored.Background.Image = dark_slanted_rectangle;
&#9;&#9;GUI.Status.Anchored.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;GUI.Status.Unanchored.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.Unanchored.SelectedIndicator.BackgroundTransparency = 1;

&#9;elseif self.State.anchored == false then
&#9;&#9;GUI.Status.Anchored.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.Anchored.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;GUI.Status.Unanchored.Background.Image = dark_slanted_rectangle;
&#9;&#9;GUI.Status.Unanchored.SelectedIndicator.BackgroundTransparency = 0;

&#9;end;

end;

Tools.Anchor.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Anchor.Listeners.Unequipped = function ()

&#9;local self = Tools.Anchor;

&#9;-- Stop the update loop
&#9;if self.Updater then
&#9;&#9;self.Updater();
&#9;&#9;self.Updater = nil;
&#9;end;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Clear out any temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of the selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Anchor.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX9">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTCollisionTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Collision tool
------------------------------------------

-- Create the tool
Tools.Collision = {};

-- Create structures to hold data that the tool needs
Tools.Collision.Connections = {};

Tools.Collision.State = {
&#9;[&quot;colliding&quot;] = nil;
};

Tools.Collision.Listeners = {};

-- Define the color of the tool
Tools.Collision.Color = BrickColor.new( &quot;Really black&quot; );

-- Start adding functionality to the tool
Tools.Collision.Listeners.Equipped = function ()

&#9;local self = Tools.Collision;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the collision status of every item in the selection
&#9;&#9;&#9;&#9;local colliding = nil;
&#9;&#9;&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;colliding = Item.CanCollide;

&#9;&#9;&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;if colliding ~= Item.CanCollide then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;colliding = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self.State.colliding = colliding;

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

&#9;-- Listen for the Enter button to be pressed to toggle collision
&#9;self.Connections.EnterButtonListener = Mouse.KeyDown:connect( function ( key )

&#9;&#9;local key = key:lower();
&#9;&#9;local key_code = key:byte();

&#9;&#9;-- If the Enter button is pressed
&#9;&#9;if key_code == 13 then

&#9;&#9;&#9;if self.State.colliding == true then
&#9;&#9;&#9;&#9;self:disable();

&#9;&#9;&#9;elseif self.State.colliding == false then
&#9;&#9;&#9;&#9;self:enable();

&#9;&#9;&#9;elseif self.State.colliding == nil then
&#9;&#9;&#9;&#9;self:enable();

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end );

end;

Tools.Collision.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_collide = {};
&#9;&#9;terminal_collide = {};
&#9;&#9;initial_cframe = {};
&#9;&#9;terminal_cframe = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.CanCollide = self.initial_collide[Target];
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.initial_cframe[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.CanCollide = self.terminal_collide[Target];
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.terminal_cframe[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_collide[Item] = Item.CanCollide;
&#9;&#9;&#9;self.State.HistoryRecord.initial_cframe[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;

end;

Tools.Collision.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_collide[Item] = Item.CanCollide;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_cframe[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Collision.enable = function ( self )

&#9;self:startHistoryRecord();

&#9;-- Enable collision for all the items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.CanCollide = true;
&#9;&#9;Item:MakeJoints();
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Collision.disable = function ( self )

&#9;self:startHistoryRecord();

&#9;-- Disable collision for all the items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.CanCollide = false;
&#9;&#9;Item:MakeJoints();
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Collision.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces.BTCollisionToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;Container.Status.On.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:enable();
&#9;&#9;end );

&#9;&#9;Container.Status.Off.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:disable();
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Collision.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;local GUI = self.GUI;

&#9;if self.State.colliding == nil then
&#9;&#9;GUI.Status.On.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.On.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;GUI.Status.Off.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.Off.SelectedIndicator.BackgroundTransparency = 1;

&#9;elseif self.State.colliding == true then
&#9;&#9;GUI.Status.On.Background.Image = dark_slanted_rectangle;
&#9;&#9;GUI.Status.On.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;GUI.Status.Off.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.Off.SelectedIndicator.BackgroundTransparency = 1;

&#9;elseif self.State.colliding == false then
&#9;&#9;GUI.Status.On.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.On.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;GUI.Status.Off.Background.Image = dark_slanted_rectangle;
&#9;&#9;GUI.Status.Off.SelectedIndicator.BackgroundTransparency = 0;

&#9;end;

end;

Tools.Collision.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Collision.Listeners.Unequipped = function ()

&#9;local self = Tools.Collision;

&#9;-- Stop the update loop
&#9;if self.Updater then
&#9;&#9;self.Updater();
&#9;&#9;self.Updater = nil;
&#9;end;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Clear out any temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of the selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Collision.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX10">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTNewPartTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- New part tool
------------------------------------------

-- Create the tool
Tools.NewPart = {};

-- Define the tool&apos;s color
Tools.NewPart.Color = BrickColor.new( &quot;Really black&quot; );

-- Keep a container for temporary connections
Tools.NewPart.Connections = {};

-- Keep a container for state data
Tools.NewPart.State = {
&#9;[&quot;Part&quot;] = nil;
};

-- Maintain a container for options
Tools.NewPart.Options = {
&#9;[&quot;type&quot;] = &quot;normal&quot;
};

-- Keep a container for platform event connections
Tools.NewPart.Listeners = {};

-- Start adding functionality to the tool
Tools.NewPart.Listeners.Equipped = function ()

&#9;local self = Tools.NewPart;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Restore the type option
&#9;self:changeType( self.Options.type );

end;

Tools.NewPart.Listeners.Unequipped = function ()

&#9;local self = Tools.NewPart;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.NewPart.Listeners.Button1Down = function ()

&#9;local self = Tools.NewPart;

&#9;local NewPart;

&#9;-- Create the new part of type `self.Options.type`
&#9;if self.Options.type == &quot;normal&quot; then
&#9;&#9;NewPart = Instance.new( &quot;Part&quot;, Services.Workspace );
&#9;&#9;NewPart.FormFactor = &quot;Custom&quot;;
&#9;&#9;NewPart.Size = Vector3.new( 4, 1, 2 );
&#9;elseif self.Options.type == &quot;truss&quot; then
&#9;&#9;NewPart = Instance.new( &quot;TrussPart&quot;, Services.Workspace );
&#9;elseif self.Options.type == &quot;wedge&quot; then
&#9;&#9;NewPart = Instance.new( &quot;WedgePart&quot;, Services.Workspace );
&#9;elseif self.Options.type == &quot;corner&quot; then
&#9;&#9;NewPart = Instance.new( &quot;CornerWedgePart&quot;, Services.Workspace );
&#9;elseif self.Options.type == &quot;cylinder&quot; then
&#9;&#9;NewPart = Instance.new( &quot;Part&quot;, Services.Workspace );
&#9;&#9;NewPart.Shape = &quot;Cylinder&quot;;
&#9;elseif self.Options.type == &quot;ball&quot; then
&#9;&#9;NewPart = Instance.new( &quot;Part&quot;, Services.Workspace );
&#9;&#9;NewPart.Shape = &quot;Ball&quot;;
&#9;elseif self.Options.type == &quot;seat&quot; then
&#9;&#9;NewPart = Instance.new( &quot;Seat&quot;, Services.Workspace );
&#9;elseif self.Options.type == &quot;vehicle seat&quot; then
&#9;&#9;NewPart = Instance.new( &quot;VehicleSeat&quot;, Services.Workspace );
&#9;elseif self.Options.type == &quot;spawn&quot; then
&#9;&#9;NewPart = Instance.new( &quot;SpawnLocation&quot;, Services.Workspace );
&#9;end;
&#9;NewPart.Anchored = true;

&#9;-- Select the new part
&#9;Selection:clear();
&#9;Selection:add( NewPart );

&#9;local HistoryRecord = {
&#9;&#9;target = NewPart;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;if self.target then
&#9;&#9;&#9;&#9;self.target.Parent = Services.Workspace;
&#9;&#9;&#9;&#9;Selection:add( self.target );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;if self.target then
&#9;&#9;&#9;&#9;self.target.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;History:add( HistoryRecord );

&#9;-- Switch to the move tool and simulate clicking so
&#9;-- that the user could easily position their new part
&#9;equipTool( Tools.Move );
&#9;Tools.Move.ManualTarget = NewPart;
&#9;NewPart.CFrame = CFrame.new( Mouse.Hit.p );
&#9;Tools.Move.Listeners.Button1Down();
&#9;Tools.Move.Listeners.Move();

end;

Tools.NewPart.changeType = function ( self, new_type )
&#9;self.Options.type = new_type;
&#9;self.TypeDropdown:selectOption( new_type:upper() );
&#9;if self.TypeDropdown.open then
&#9;&#9;self.TypeDropdown:toggle();
&#9;end;
end;

Tools.NewPart.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces.BTNewPartToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;local TypeDropdown = createDropdown();
&#9;&#9;self.TypeDropdown = TypeDropdown;
&#9;&#9;TypeDropdown.Frame.Parent = Container.TypeOption;
&#9;&#9;TypeDropdown.Frame.Position = UDim2.new( 0, 70, 0, 0 );
&#9;&#9;TypeDropdown.Frame.Size = UDim2.new( 0, 140, 0, 25 );

&#9;&#9;TypeDropdown:addOption( &quot;NORMAL&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;normal&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;TRUSS&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;truss&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;WEDGE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;wedge&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;CORNER&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;corner&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;CYLINDER&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;cylinder&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;BALL&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;ball&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;SEAT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;seat&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;VEHICLE SEAT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;vehicle seat&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;SPAWN&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;spawn&quot; );
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.NewPart.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.NewPart.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX11">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTMeshTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Mesh tool
------------------------------------------

-- Create the tool
Tools.Mesh = {};

-- Define the tool&apos;s color
Tools.Mesh.Color = BrickColor.new( &quot;Bright violet&quot; );

-- Keep a container for state data
Tools.Mesh.State = {};

-- Keep a container for temporary connections
Tools.Mesh.Connections = {};

-- Keep a container for platform event connections
Tools.Mesh.Listeners = {};

-- Start adding functionality to the tool
Tools.Mesh.Listeners.Equipped = function ()

&#9;local self = Tools.Mesh;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Mesh.Listeners.Unequipped = function ()

&#9;local self = Tools.Mesh;

&#9;-- Stop the GUI updater
&#9;if self.Updater then
&#9;&#9;self.Updater();
&#9;&#9;self.Updater = nil;
&#9;end;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Mesh.TypeDropdownLabels = {
&#9;[Enum.MeshType.Brick] = &quot;BLOCK&quot;;
&#9;[Enum.MeshType.Cylinder] = &quot;CYLINDER&quot;;
&#9;[Enum.MeshType.FileMesh] = &quot;FILE&quot;;
&#9;[Enum.MeshType.Head] = &quot;HEAD&quot;;
&#9;[Enum.MeshType.Sphere] = &quot;SPHERE&quot;;
&#9;[Enum.MeshType.Torso] = &quot;TRAPEZOID&quot;;
&#9;[Enum.MeshType.Wedge] = &quot;WEDGE&quot;;
};

Tools.Mesh.changeType = function ( self, new_type )

&#9;-- Apply type `new_type` to all the meshes in items from the selection
&#9;local meshes = {};
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;if Mesh then
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;end;
&#9;end;

&#9;self:startHistoryRecord( meshes );
&#9;for _, Mesh in pairs( meshes ) do
&#9;&#9;Mesh.MeshType = new_type;
&#9;end;
&#9;self:finishHistoryRecord();

&#9;if self.TypeDropdown.open then
&#9;&#9;self.TypeDropdown:toggle();
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Mesh.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;local GUI = self.GUI;

&#9;if #Selection.Items &gt; 0 then

&#9;&#9;local meshes = {};
&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;&#9;if Mesh then
&#9;&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;local show_add, show_remove, show_mesh_id;
&#9;&#9;local mesh_type, mesh_scale_x, mesh_scale_y, mesh_scale_z, mesh_id, mesh_texture, mesh_tint_r, mesh_tint_g, mesh_tint_b;

&#9;&#9;-- If every item has a mesh
&#9;&#9;if #meshes == #Selection.Items then
&#9;&#9;&#9;show_add = false;
&#9;&#9;&#9;show_remove = true;

&#9;&#9;-- If no item has a mesh
&#9;&#9;elseif #meshes == 0 then
&#9;&#9;&#9;show_add = true;
&#9;&#9;&#9;show_remove = false;

&#9;&#9;-- If some items have a mesh
&#9;&#9;else
&#9;&#9;&#9;show_add = true;
&#9;&#9;&#9;show_remove = true;
&#9;&#9;end;

&#9;&#9;-- If there are meshes
&#9;&#9;if #meshes &gt; 0 then
&#9;&#9;&#9;show_type = true;
&#9;&#9;&#9;for mesh_index, Mesh in pairs( meshes ) do

&#9;&#9;&#9;&#9;-- Set the start values for later comparison
&#9;&#9;&#9;&#9;if mesh_index == 1 then
&#9;&#9;&#9;&#9;&#9;mesh_type = Mesh.MeshType;
&#9;&#9;&#9;&#9;&#9;mesh_scale_x, mesh_scale_y, mesh_scale_z = Mesh.Scale.x, Mesh.Scale.y, Mesh.Scale.z;
&#9;&#9;&#9;&#9;&#9;mesh_id = Mesh.MeshId:lower();
&#9;&#9;&#9;&#9;&#9;mesh_texture = Mesh.TextureId:lower();
&#9;&#9;&#9;&#9;&#9;mesh_tint_r, mesh_tint_g, mesh_tint_b = Mesh.VertexColor.x, Mesh.VertexColor.y, Mesh.VertexColor.z;

&#9;&#9;&#9;&#9;-- Set the values to `nil` if they vary across the selection
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;if mesh_type ~= Mesh.MeshType then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_type = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_scale_x ~= Mesh.Scale.x then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_scale_x = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_scale_y ~= Mesh.Scale.y then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_scale_y = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_scale_z ~= Mesh.Scale.z then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_scale_z = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_id ~= Mesh.MeshId:lower() then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_id = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_texture ~= Mesh.TextureId:lower() then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_texture = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_tint_r ~= Mesh.VertexColor.x then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_tint_r = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_tint_g ~= Mesh.VertexColor.y then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_tint_g = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_tint_b ~= Mesh.VertexColor.z then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_tint_b = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- If there&apos;s a FileMesh around here, note that
&#9;&#9;&#9;&#9;if Mesh.MeshType == Enum.MeshType.FileMesh then
&#9;&#9;&#9;&#9;&#9;show_mesh_id = true;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;&#9;self.State.mesh_tint = ( mesh_tint_r and mesh_tint_g and mesh_tint_b ) and Color3.new( mesh_tint_r, mesh_tint_g, mesh_tint_b ) or nil;

&#9;&#9;&#9;if show_mesh_id and show_add and show_remove then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TintOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Position = UDim2.new( 0, 14, 0, 65 );
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Position = UDim2.new( 0, 0, 0, 100 );
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.Position = UDim2.new( 0, 14, 0, 135 );
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.Position = UDim2.new( 0, 14, 0, 165 );
&#9;&#9;&#9;&#9;self.GUI.TintOption.Position = UDim2.new( 0, 0, 0, 200 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 265 );
&#9;&#9;&#9;elseif show_mesh_id and not show_add and show_remove then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TintOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Position = UDim2.new( 0, 14, 0, 30 );
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Position = UDim2.new( 0, 0, 0, 65 );
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.Position = UDim2.new( 0, 14, 0, 100 );
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.Position = UDim2.new( 0, 14, 0, 130 );
&#9;&#9;&#9;&#9;self.GUI.TintOption.Position = UDim2.new( 0, 0, 0, 165 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 230 );

&#9;&#9;&#9;elseif not show_mesh_id and show_add and show_remove then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TintOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Position = UDim2.new( 0, 14, 0, 65 );
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Position = UDim2.new( 0, 0, 0, 100 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 165 );
&#9;&#9;&#9;elseif not show_mesh_id and not show_add and show_remove then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TintOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Position = UDim2.new( 0, 14, 0, 30 );
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Position = UDim2.new( 0, 0, 0, 65 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 130 );
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Update the values shown on the GUI
&#9;&#9;&#9;if not self.State.mesh_id_focused then
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.TextBox.Text = mesh_id and ( mesh_id:match( &quot;%?id=([0-9]+)&quot; ) or &quot;&quot; ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.texture_id_focused then
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.TextBox.Text = mesh_texture and ( mesh_texture:match( &quot;%?id=([0-9]+)&quot; ) or &quot;&quot; ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.TypeDropdown:selectOption( mesh_type and self.TypeDropdownLabels[mesh_type] or &quot;*&quot; );
&#9;&#9;&#9;if not self.State.scale_x_focused then
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.XInput.TextBox.Text = mesh_scale_x and _round( mesh_scale_x, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.scale_y_focused then
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.YInput.TextBox.Text = mesh_scale_y and _round( mesh_scale_y, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.scale_z_focused then
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.ZInput.TextBox.Text = mesh_scale_z and _round( mesh_scale_z, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.tint_r_focused then
&#9;&#9;&#9;&#9;self.GUI.TintOption.RInput.TextBox.Text = mesh_tint_r and _round( mesh_tint_r * 255, 0 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.tint_g_focused then
&#9;&#9;&#9;&#9;self.GUI.TintOption.GInput.TextBox.Text = mesh_tint_g and _round( mesh_tint_g * 255, 0 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.tint_b_focused then
&#9;&#9;&#9;&#9;self.GUI.TintOption.BInput.TextBox.Text = mesh_tint_b and _round( mesh_tint_b * 255, 0 ) or &quot;*&quot;;
&#9;&#9;&#9;end;

&#9;&#9;-- If there are no meshes
&#9;&#9;else
&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.RemoveButton.Visible = false;
&#9;&#9;&#9;self.GUI.MeshIDOption.Visible = false;
&#9;&#9;&#9;self.GUI.TextureIDOption.Visible = false;
&#9;&#9;&#9;self.GUI.ScaleOption.Visible = false;
&#9;&#9;&#9;self.GUI.TintOption.Visible = false;
&#9;&#9;&#9;self.GUI.TypeOption.Visible = false;
&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 62 );
&#9;&#9;end;
&#9;&#9;self.GUI.SelectNote.Visible = false;

&#9;-- Show a note that says to select something
&#9;else
&#9;&#9;self.GUI.AddButton.Visible = false;
&#9;&#9;self.GUI.RemoveButton.Visible = false;
&#9;&#9;self.GUI.MeshIDOption.Visible = false;
&#9;&#9;self.GUI.TextureIDOption.Visible = false;
&#9;&#9;self.GUI.ScaleOption.Visible = false;
&#9;&#9;self.GUI.TintOption.Visible = false;
&#9;&#9;self.GUI.TypeOption.Visible = false;
&#9;&#9;self.GUI.SelectNote.Visible = true;
&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 55 );
&#9;end;

end;

Tools.Mesh.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then
&#9;&#9;local Container = Tool.Interfaces.BTMeshToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;-- Add functionality to the add/remove buttons
&#9;&#9;Container.AddButton.Button.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:addMesh();
&#9;&#9;end );
&#9;&#9;Container.RemoveButton.Button.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:removeMesh();
&#9;&#9;end );

&#9;&#9;-- Add the type dropdown
&#9;&#9;local TypeDropdown = createDropdown();
&#9;&#9;self.TypeDropdown = TypeDropdown;
&#9;&#9;TypeDropdown.Frame.Parent = Container.TypeOption;
&#9;&#9;TypeDropdown.Frame.Position = UDim2.new( 0, 40, 0, 0 );
&#9;&#9;TypeDropdown.Frame.Size = UDim2.new( 1, -40, 0, 25 );
&#9;&#9;TypeDropdown:addOption( &quot;BLOCK&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.Brick );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;CYLINDER&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.Cylinder );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;FILE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.FileMesh );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;HEAD&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.Head );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;SPHERE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.Sphere );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;TRAPEZOID&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.Torso );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;WEDGE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.Wedge );
&#9;&#9;end );

&#9;&#9;-- Add functionality to the scale inputs
&#9;&#9;Container.ScaleOption.XInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.scale_x_focused = true;
&#9;&#9;&#9;Container.ScaleOption.XInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.ScaleOption.XInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.ScaleOption.XInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeScale( &apos;x&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.scale_x_focused = false;
&#9;&#9;end );

&#9;&#9;Container.ScaleOption.YInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.scale_y_focused = true;
&#9;&#9;&#9;Container.ScaleOption.YInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.ScaleOption.YInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.ScaleOption.YInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeScale( &apos;y&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.scale_y_focused = false;
&#9;&#9;end );

&#9;&#9;Container.ScaleOption.ZInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.scale_z_focused = true;
&#9;&#9;&#9;Container.ScaleOption.ZInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.ScaleOption.ZInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.ScaleOption.ZInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeScale( &apos;z&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.scale_z_focused = false;
&#9;&#9;end );

&#9;&#9;-- Add functionality to the mesh/texture ID inputs
&#9;&#9;Container.MeshIDOption.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.mesh_id_focused = true;
&#9;&#9;&#9;Container.MeshIDOption.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.MeshIDOption.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local input = Container.MeshIDOption.TextBox.Text;
&#9;&#9;&#9;local potential_new = tonumber( input ) or input:lower():match( &quot;%?id=([0-9]+)&quot; );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeMesh( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.mesh_id_focused = false;
&#9;&#9;end );

&#9;&#9;Container.TextureIDOption.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.texture_id_focused = true;
&#9;&#9;&#9;Container.TextureIDOption.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.TextureIDOption.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local input = Container.TextureIDOption.TextBox.Text;
&#9;&#9;&#9;local potential_new = tonumber( input ) or input:lower():match( &quot;%?id=([0-9]+)&quot; );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeTexture( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.texture_id_focused = false;
&#9;&#9;end );

&#9;&#9;-- Add functionality to the tint inputs
&#9;&#9;Container.TintOption.RInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.tint_r_focused = true;
&#9;&#9;&#9;Container.TintOption.RInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.TintOption.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.TintOption.RInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeTint( &apos;r&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.tint_r_focused = false;
&#9;&#9;end );

&#9;&#9;Container.TintOption.GInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.tint_g_focused = true;
&#9;&#9;&#9;Container.TintOption.GInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.TintOption.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.TintOption.GInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeTint( &apos;g&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.tint_g_focused = false;
&#9;&#9;end );

&#9;&#9;Container.TintOption.BInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.tint_b_focused = true;
&#9;&#9;&#9;Container.TintOption.BInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.TintOption.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.TintOption.BInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeTint( &apos;b&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.tint_b_focused = false;
&#9;&#9;end );

&#9;&#9;Container.TintOption.HSVPicker.MouseButton1Up:connect( function ()
&#9;&#9;&#9;ColorPicker:start( function ( ... )
&#9;&#9;&#9;&#9;local args = { ... };
&#9;&#9;&#9;&#9;-- If a color was picked, change the spotlights&apos; color
&#9;&#9;&#9;&#9;-- to the selected color
&#9;&#9;&#9;&#9;if #args == 3 then
&#9;&#9;&#9;&#9;&#9;local meshes = {};
&#9;&#9;&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;&#9;&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;&#9;&#9;&#9;&#9;if Mesh then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;self:startHistoryRecord( meshes );
&#9;&#9;&#9;&#9;&#9;for _, Mesh in pairs( meshes ) do
&#9;&#9;&#9;&#9;&#9;&#9;Mesh.VertexColor = Vector3.new( _HSVToRGB( ... ) );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;self:finishHistoryRecord();
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end, self.State.mesh_tint );
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Mesh.addMesh = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Mesh in pairs( self.meshes ) do
&#9;&#9;&#9;&#9;Mesh.Parent = self.mesh_parents[Mesh];
&#9;&#9;&#9;&#9;Selection:add( Mesh.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Mesh in pairs( self.meshes ) do
&#9;&#9;&#9;&#9;Selection:add( Mesh.Parent );
&#9;&#9;&#9;&#9;Mesh.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Add meshes to all the items from the selection that
&#9;-- don&apos;t already have one
&#9;local meshes = {};
&#9;local mesh_parents = {};
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;if not Mesh then
&#9;&#9;&#9;local Mesh = RbxUtility.Create &quot;SpecialMesh&quot; {
&#9;&#9;&#9;&#9;Parent = Item;
&#9;&#9;&#9;&#9;MeshType = Enum.MeshType.Brick;
&#9;&#9;&#9;};
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;&#9;mesh_parents[Mesh] = Item;
&#9;&#9;end;
&#9;end;

&#9;HistoryRecord.meshes = meshes;
&#9;HistoryRecord.mesh_parents = mesh_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Mesh.removeMesh = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Mesh in pairs( self.meshes ) do
&#9;&#9;&#9;&#9;Selection:add( Mesh.Parent );
&#9;&#9;&#9;&#9;Mesh.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Mesh in pairs( self.meshes ) do
&#9;&#9;&#9;&#9;Mesh.Parent = self.mesh_parents[Mesh];
&#9;&#9;&#9;&#9;Selection:add( Mesh.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;local meshes = {};
&#9;local mesh_parents = {};
&#9;-- Remove meshes from all the selected items
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local meshes_found = _getChildrenOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;for _, Mesh in pairs( meshes_found ) do
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;&#9;mesh_parents[Mesh] = Mesh.Parent;
&#9;&#9;&#9;Mesh.Parent = nil;
&#9;&#9;end;
&#9;end;

&#9;HistoryRecord.meshes = meshes;
&#9;HistoryRecord.mesh_parents = mesh_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Mesh.startHistoryRecord = function ( self, meshes )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( meshes );
&#9;&#9;initial_type = {};
&#9;&#9;terminal_type = {};
&#9;&#9;initial_mesh = {};
&#9;&#9;terminal_mesh = {};
&#9;&#9;initial_texture = {};
&#9;&#9;terminal_texture = {};
&#9;&#9;initial_scale = {};
&#9;&#9;terminal_scale = {};
&#9;&#9;initial_tint = {};
&#9;&#9;terminal_tint = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;Target.MeshType = self.initial_type[Target];
&#9;&#9;&#9;&#9;&#9;Target.MeshId = self.initial_mesh[Target];
&#9;&#9;&#9;&#9;&#9;Target.TextureId = self.initial_texture[Target];
&#9;&#9;&#9;&#9;&#9;Target.Scale = self.initial_scale[Target];
&#9;&#9;&#9;&#9;&#9;Target.VertexColor = self.initial_tint[Target];
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;Target.MeshType = self.terminal_type[Target];
&#9;&#9;&#9;&#9;&#9;Target.MeshId = self.terminal_mesh[Target];
&#9;&#9;&#9;&#9;&#9;Target.TextureId = self.terminal_texture[Target];
&#9;&#9;&#9;&#9;&#9;Target.Scale = self.terminal_scale[Target];
&#9;&#9;&#9;&#9;&#9;Target.VertexColor = self.terminal_tint[Target];
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_type[Item] = Item.MeshType;
&#9;&#9;&#9;self.State.HistoryRecord.initial_mesh[Item] = Item.MeshId;
&#9;&#9;&#9;self.State.HistoryRecord.initial_texture[Item] = Item.TextureId;
&#9;&#9;&#9;self.State.HistoryRecord.initial_scale[Item] = Item.Scale;
&#9;&#9;&#9;self.State.HistoryRecord.initial_tint[Item] = Item.VertexColor;
&#9;&#9;end;
&#9;end;

end;

Tools.Mesh.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_type[Item] = Item.MeshType;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_mesh[Item] = Item.MeshId;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_texture[Item] = Item.TextureId;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_scale[Item] = Item.Scale;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_tint[Item] = Item.VertexColor;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Mesh.changeMesh = function ( self, mesh_id )

&#9;local meshes = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;if Mesh then
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;end;
&#9;end;
&#9;self:startHistoryRecord( meshes );
&#9;for _, Mesh in pairs( meshes ) do
&#9;&#9;Mesh.MeshId = &quot;http://www.roblox.com/asset/?id=&quot; .. mesh_id;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Mesh.changeTexture = function ( self, texture_id )

&#9;local meshes = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;if Mesh then
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;end;
&#9;end;
&#9;self:startHistoryRecord( meshes );
&#9;for _, Mesh in pairs( meshes ) do
&#9;&#9;Mesh.TextureId = &quot;http://www.roblox.com/asset/?id=&quot; .. texture_id;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Mesh.changeScale = function ( self, component, new_value )

&#9;local meshes = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;if Mesh then
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;end;
&#9;end;

&#9;self:startHistoryRecord( meshes );
&#9;for _, Mesh in pairs( meshes ) do
&#9;&#9;Mesh.Scale = Vector3.new(
&#9;&#9;&#9;component == &apos;x&apos; and new_value or Mesh.Scale.x,
&#9;&#9;&#9;component == &apos;y&apos; and new_value or Mesh.Scale.y,
&#9;&#9;&#9;component == &apos;z&apos; and new_value or Mesh.Scale.z
&#9;&#9;);
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Mesh.changeTint = function ( self, component, new_value )

&#9;local meshes = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;if Mesh then
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;end;
&#9;end;

&#9;self:startHistoryRecord( meshes );
&#9;for _, Mesh in pairs( meshes ) do
&#9;&#9;Mesh.VertexColor = Vector3.new(
&#9;&#9;&#9;component == &apos;r&apos; and new_value or Mesh.VertexColor.x,
&#9;&#9;&#9;component == &apos;g&apos; and new_value or Mesh.VertexColor.y,
&#9;&#9;&#9;component == &apos;b&apos; and new_value or Mesh.VertexColor.z
&#9;&#9;);
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Mesh.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Mesh.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX12">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTTextureTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Texture tool
------------------------------------------

-- Create the tool
Tools.Texture = {};

-- Define the tool&apos;s color
Tools.Texture.Color = BrickColor.new( &quot;Bright violet&quot; );

-- Keep a container for state data
Tools.Texture.Options = {
&#9;side = Enum.NormalId.Front;
&#9;mode = &quot;decal&quot;;
};
Tools.Texture.State = {};

-- Keep a container for temporary connections
Tools.Texture.Connections = {};

-- Keep a container for platform event connections
Tools.Texture.Listeners = {};

-- Start adding functionality to the tool
Tools.Texture.Listeners.Equipped = function ()

&#9;local self = Tools.Texture;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Prepare the GUI
&#9;self:changeSide( self.Options.side );
&#9;self:changeMode( self.Options.mode );

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Texture.Listeners.Unequipped = function ()

&#9;local self = Tools.Texture;

&#9;-- Stop the GUI updater
&#9;if self.Updater then
&#9;&#9;self.Updater();
&#9;&#9;self.Updater = nil;
&#9;end;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Texture.Listeners.Button2Down = function ()

&#9;local self = Tools.Texture;

&#9;-- Capture the camera rotation (for later use
&#9;-- in determining whether a surface was being
&#9;-- selected or the camera was being rotated
&#9;-- with the right mouse button)
&#9;local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
&#9;self.State.PreB2DownCameraRotation = Vector3.new( cr_x, cr_y, cr_z );

end;

Tools.Texture.Listeners.Button2Up = function ()

&#9;local self = Tools.Texture;

&#9;local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
&#9;local CameraRotation = Vector3.new( cr_x, cr_y, cr_z );

&#9;-- If a surface is selected, change the side option
&#9;if Selection:find( Mouse.Target ) and self.State.PreB2DownCameraRotation == CameraRotation then
&#9;&#9;self:changeSide( Mouse.TargetSurface );
&#9;end;

end;

Tools.Texture.startHistoryRecord = function ( self, textures )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( textures );
&#9;&#9;initial_texture = {};
&#9;&#9;terminal_texture = {};
&#9;&#9;initial_transparency = {};
&#9;&#9;terminal_transparency = {};
&#9;&#9;initial_repeat = {};
&#9;&#9;terminal_repeat = {};
&#9;&#9;initial_side = {};
&#9;&#9;terminal_side = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;Target.Texture = self.initial_texture[Target];
&#9;&#9;&#9;&#9;&#9;Target.Transparency = self.initial_transparency[Target];
&#9;&#9;&#9;&#9;&#9;Target.Face = self.initial_side[Target];
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &quot;Texture&quot; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.StudsPerTileU = self.initial_repeat[Target].x;
&#9;&#9;&#9;&#9;&#9;&#9;Target.StudsPerTileV = self.initial_repeat[Target].y;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;Target.Texture = self.terminal_texture[Target];
&#9;&#9;&#9;&#9;&#9;Target.Transparency = self.terminal_transparency[Target];
&#9;&#9;&#9;&#9;&#9;Target.Face = self.terminal_side[Target];
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &quot;Texture&quot; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.StudsPerTileU = self.terminal_repeat[Target].x;
&#9;&#9;&#9;&#9;&#9;&#9;Target.StudsPerTileV = self.terminal_repeat[Target].y;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_texture[Item] = Item.Texture;
&#9;&#9;&#9;self.State.HistoryRecord.initial_transparency[Item] = Item.Transparency;
&#9;&#9;&#9;self.State.HistoryRecord.initial_side[Item] = Item.Face;
&#9;&#9;&#9;if Item:IsA( &quot;Texture&quot; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_repeat[Item] = Vector2.new( Item.StudsPerTileU, Item.StudsPerTileV );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

end;

Tools.Texture.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_texture[Item] = Item.Texture;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_transparency[Item] = Item.Transparency;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_side[Item] = Item.Face;
&#9;&#9;&#9;if Item:IsA( &quot;Texture&quot; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_repeat[Item] = Vector2.new( Item.StudsPerTileU, Item.StudsPerTileV );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Texture.changeMode = function ( self, new_mode )

&#9;-- Set the option
&#9;self.Options.mode = new_mode;

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;-- Update the GUI
&#9;if new_mode == &quot;decal&quot; then
&#9;&#9;self.GUI.ModeOption.Decal.SelectedIndicator.Transparency = 0;
&#9;&#9;self.GUI.ModeOption.Texture.SelectedIndicator.Transparency = 1;
&#9;&#9;self.GUI.ModeOption.Decal.Background.Image = dark_slanted_rectangle;
&#9;&#9;self.GUI.ModeOption.Texture.Background.Image = light_slanted_rectangle;
&#9;&#9;self.GUI.AddButton.Button.Text = &quot;ADD DECAL&quot;;
&#9;&#9;self.GUI.RemoveButton.Button.Text = &quot;REMOVE DECAL&quot;;
&#9;elseif new_mode == &quot;texture&quot; then
&#9;&#9;self.GUI.ModeOption.Decal.SelectedIndicator.Transparency = 1;
&#9;&#9;self.GUI.ModeOption.Texture.SelectedIndicator.Transparency = 0;
&#9;&#9;self.GUI.ModeOption.Decal.Background.Image = light_slanted_rectangle;
&#9;&#9;self.GUI.ModeOption.Texture.Background.Image = dark_slanted_rectangle;
&#9;&#9;self.GUI.AddButton.Button.Text = &quot;ADD TEXTURE&quot;;
&#9;&#9;self.GUI.RemoveButton.Button.Text = &quot;REMOVE TEXTURE&quot;;
&#9;end;

end;

Tools.Texture.changeSide = function ( self, new_side )

&#9;-- Set the option
&#9;self.Options.side = new_side;

&#9;-- Update the GUI
&#9;if self.SideDropdown then
&#9;&#9;self.SideDropdown:selectOption( new_side.Name:upper() );
&#9;&#9;if self.SideDropdown.open then
&#9;&#9;&#9;self.SideDropdown:toggle();
&#9;&#9;end;
&#9;end;

end;

Tools.Texture.changeTexture = function ( self, new_texture )

&#9;local textures = {};

&#9;-- Apply the new texture to any items w/ textures in the selection
&#9;-- that are on the side in the options
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local textures_found = _getChildrenOfClass( Item, &quot;Texture&quot; );
&#9;&#9;for _, Texture in pairs( textures_found ) do
&#9;&#9;&#9;if Texture.Face == self.Options.side then
&#9;&#9;&#9;&#9;table.insert( textures, Texture );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;self:startHistoryRecord( textures );
&#9;for _, Texture in pairs( textures ) do
&#9;&#9;Texture.Texture = &quot;http://www.roblox.com/asset/?id=&quot; .. new_texture;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Texture.changeDecal = function ( self, new_decal )

&#9;local decals = {};

&#9;-- Apply the new decal to any items w/ decals in the selection
&#9;-- that are on the side in the options
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local decals_found = _getChildrenOfClass( Item, &quot;Decal&quot; );
&#9;&#9;for _, Decal in pairs( decals_found ) do
&#9;&#9;&#9;if Decal.Face == self.Options.side then
&#9;&#9;&#9;&#9;table.insert( decals, Decal );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;self:startHistoryRecord( decals );
&#9;for _, Decal in pairs( decals ) do
&#9;&#9;Decal.Texture = &quot;http://www.roblox.com/asset/?id=&quot; .. new_decal;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Texture.changeTransparency = function ( self, new_transparency )

&#9;local textures = {};

&#9;-- Apply the new transparency to any items w/
&#9;-- decals/textures in the selectionthat are on
&#9;-- the side in the options
&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;if self.Options.mode == &quot;texture&quot; then
&#9;&#9;&#9;local textures_found = _getChildrenOfClass( Item, &quot;Texture&quot; );
&#9;&#9;&#9;for _, Texture in pairs( textures_found ) do
&#9;&#9;&#9;&#9;if Texture.Face == self.Options.side then
&#9;&#9;&#9;&#9;&#9;table.insert( textures, Texture );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;elseif self.Options.mode == &quot;decal&quot; then
&#9;&#9;&#9;local decals_found = _getChildrenOfClass( Item, &quot;Decal&quot; );
&#9;&#9;&#9;for _, Decal in pairs( decals_found ) do
&#9;&#9;&#9;&#9;if Decal.Face == self.Options.side then
&#9;&#9;&#9;&#9;&#9;table.insert( textures, Decal );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;end;

&#9;self:startHistoryRecord( textures );
&#9;for _, Texture in pairs( textures ) do
&#9;&#9;Texture.Transparency = new_transparency;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Texture.changeFrequency = function ( self, direction, new_frequency )

&#9;local textures = {};

&#9;-- Apply the new frequency to any items w/ textures
&#9;-- in the selection that are on the side in the options
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local textures_found = _getChildrenOfClass( Item, &quot;Texture&quot; );
&#9;&#9;for _, Texture in pairs( textures_found ) do
&#9;&#9;&#9;if Texture.Face == self.Options.side then
&#9;&#9;&#9;&#9;table.insert( textures, Texture );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;self:startHistoryRecord( textures );
&#9;for _, Texture in pairs( textures ) do
&#9;&#9;-- Apply the new frequency to the right direction
&#9;&#9;if direction == &quot;x&quot; then
&#9;&#9;&#9;Texture.StudsPerTileU = new_frequency;
&#9;&#9;elseif direction == &quot;y&quot; then
&#9;&#9;&#9;Texture.StudsPerTileV = new_frequency;
&#9;&#9;end;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Texture.addTexture = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Texture in pairs( self.textures ) do
&#9;&#9;&#9;&#9;Texture.Parent = self.texture_parents[Texture];
&#9;&#9;&#9;&#9;Selection:add( Texture.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Texture in pairs( self.textures ) do
&#9;&#9;&#9;&#9;Selection:add( Texture.Parent );
&#9;&#9;&#9;&#9;Texture.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;local textures = {};
&#9;local texture_parents = {};

&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;-- Check if the item has a texture already
&#9;&#9;local textures_found = _getChildrenOfClass( Item, &quot;Texture&quot; );
&#9;&#9;local has_texture = false;
&#9;&#9;for _, Texture in pairs( textures_found ) do
&#9;&#9;&#9;if Texture.Face == self.Options.side then
&#9;&#9;&#9;&#9;has_texture = true;
&#9;&#9;&#9;&#9;break;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- Only add a texture if it doesn&apos;t already exist
&#9;&#9;if not has_texture then
&#9;&#9;&#9;local Texture = RbxUtility.Create &quot;Texture&quot; {
&#9;&#9;&#9;&#9;Parent = Item;
&#9;&#9;&#9;&#9;Face = self.Options.side;
&#9;&#9;&#9;};
&#9;&#9;&#9;table.insert( textures, Texture );
&#9;&#9;&#9;texture_parents[Texture] = Item;
&#9;&#9;end;

&#9;end;

&#9;HistoryRecord.textures = textures;
&#9;HistoryRecord.texture_parents = texture_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Texture.addDecal = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Decal in pairs( self.decals ) do
&#9;&#9;&#9;&#9;Decal.Parent = self.decal_parents[Decal];
&#9;&#9;&#9;&#9;Selection:add( Decal.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Decal in pairs( self.decals ) do
&#9;&#9;&#9;&#9;Selection:add( Decal.Parent );
&#9;&#9;&#9;&#9;Decal.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;local decals = {};
&#9;local decal_parents = {};

&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;-- Check if the item has a decal already
&#9;&#9;local decals_found = _getChildrenOfClass( Item, &quot;Decal&quot; );
&#9;&#9;local has_decal = false;
&#9;&#9;for _, Decal in pairs( decals_found ) do
&#9;&#9;&#9;if Decal.Face == self.Options.side then
&#9;&#9;&#9;&#9;has_decal = true;
&#9;&#9;&#9;&#9;break;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- Only add a texture if it doesn&apos;t already exist
&#9;&#9;if not has_decal then
&#9;&#9;&#9;local Decal = RbxUtility.Create &quot;Decal&quot; {
&#9;&#9;&#9;&#9;Parent = Item;
&#9;&#9;&#9;&#9;Face = self.Options.side;
&#9;&#9;&#9;};
&#9;&#9;&#9;table.insert( decals, Decal );
&#9;&#9;&#9;decal_parents[Decal] = Item;
&#9;&#9;end;

&#9;end;

&#9;HistoryRecord.decals = decals;
&#9;HistoryRecord.decal_parents = decal_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Texture.removeTexture = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;textures = {};
&#9;&#9;texture_parents = {};
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Texture in pairs( self.textures ) do
&#9;&#9;&#9;&#9;Selection:add( Texture.Parent );
&#9;&#9;&#9;&#9;Texture.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Texture in pairs( self.textures ) do
&#9;&#9;&#9;&#9;Texture.Parent = self.texture_parents[Texture];
&#9;&#9;&#9;&#9;Selection:add( Texture.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Remove any textures on the selected side
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local textures = _getChildrenOfClass( Item, &quot;Texture&quot; );
&#9;&#9;for _, Texture in pairs( textures ) do
&#9;&#9;&#9;if Texture.Face == self.Options.side then
&#9;&#9;&#9;&#9;table.insert( HistoryRecord.textures, Texture );
&#9;&#9;&#9;&#9;HistoryRecord.texture_parents[Texture] = Texture.Parent;
&#9;&#9;&#9;&#9;Texture.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;History:add( HistoryRecord );

end;

Tools.Texture.removeDecal = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;decals = {};
&#9;&#9;decal_parents = {};
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Decal in pairs( self.decals ) do
&#9;&#9;&#9;&#9;Selection:add( Decal.Parent );
&#9;&#9;&#9;&#9;Decal.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Decal in pairs( self.decals ) do
&#9;&#9;&#9;&#9;Decal.Parent = self.decal_parents[Decal];
&#9;&#9;&#9;&#9;Selection:add( Decal.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Remove any decals on the selected side
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local decals = _getChildrenOfClass( Item, &quot;Decal&quot; );
&#9;&#9;for _, Decal in pairs( decals ) do
&#9;&#9;&#9;if Decal.Face == self.Options.side then
&#9;&#9;&#9;&#9;table.insert( HistoryRecord.decals, Decal );
&#9;&#9;&#9;&#9;HistoryRecord.decal_parents[Decal] = Decal.Parent;
&#9;&#9;&#9;&#9;Decal.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;History:add( HistoryRecord );

end;

Tools.Texture.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;local GUI = self.GUI;

&#9;-- If there are no items selected, just minimize
&#9;-- non-tool-option controls
&#9;if #Selection.Items == 0 then
&#9;&#9;self.GUI.AddButton.Visible = false;
&#9;&#9;self.GUI.RemoveButton.Visible = false;
&#9;&#9;self.GUI.ImageIDOption.Visible = false;
&#9;&#9;self.GUI.TransparencyOption.Visible = false;
&#9;&#9;self.GUI.RepeatOption.Visible = false;
&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 100 );

&#9;else
&#9;&#9;if self.Options.mode == &quot;texture&quot; then

&#9;&#9;&#9;-- Get the applicable textures
&#9;&#9;&#9;local textures = {};
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;&#9;local textures_found = _getChildrenOfClass( Item, &quot;Texture&quot; );
&#9;&#9;&#9;&#9;for _, Texture in pairs( textures_found ) do
&#9;&#9;&#9;&#9;&#9;if Texture.Face == self.Options.side then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert( textures, Texture );
&#9;&#9;&#9;&#9;&#9;&#9;break;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- If there are no textures
&#9;&#9;&#9;if #textures == 0 then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 130 );

&#9;&#9;&#9;-- If only some parts have textures
&#9;&#9;&#9;elseif #textures ~= #Selection.Items then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Position = UDim2.new( 0, 14, 0, 135 );
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Position = UDim2.new( 0, 14, 0, 170 );
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Position = UDim2.new( 0, 0, 0, 205 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 280 );

&#9;&#9;&#9;-- If every item has a texture
&#9;&#9;&#9;elseif #textures == #Selection.Items then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Position = UDim2.new( 0, 14, 0, 100 );
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Position = UDim2.new( 0, 14, 0, 135 );
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Position = UDim2.new( 0, 0, 0, 170 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 245 );
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Get the values to display on the GUI
&#9;&#9;&#9;local texture_id, texture_transparency, texture_repeat_x, texture_repeat_y;
&#9;&#9;&#9;for texture_index, Texture in pairs( textures ) do

&#9;&#9;&#9;&#9;-- Set the start values for later comparison
&#9;&#9;&#9;&#9;if texture_index == 1 then
&#9;&#9;&#9;&#9;&#9;texture_id = Texture.Texture:lower();
&#9;&#9;&#9;&#9;&#9;texture_transparency = Texture.Transparency;
&#9;&#9;&#9;&#9;&#9;texture_repeat_x = Texture.StudsPerTileU;
&#9;&#9;&#9;&#9;&#9;texture_repeat_y = Texture.StudsPerTileV;

&#9;&#9;&#9;&#9;-- Set the values to `nil` if they vary across the selection
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;if texture_id ~= Texture.Texture:lower() then
&#9;&#9;&#9;&#9;&#9;&#9;texture_id = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if texture_transparency ~= Texture.Transparency then
&#9;&#9;&#9;&#9;&#9;&#9;texture_transparency = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if texture_repeat_x ~= Texture.StudsPerTileU then
&#9;&#9;&#9;&#9;&#9;&#9;texture_repeat_x = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if texture_repeat_y ~= Texture.StudsPerTileV then
&#9;&#9;&#9;&#9;&#9;&#9;texture_repeat_y = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Update the GUI&apos;s values
&#9;&#9;&#9;if not self.State.image_id_focused then
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.TextBox.Text = texture_id and ( texture_id:match( &quot;%?id=([0-9]+)&quot; ) or &quot;&quot; ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.transparency_focused then
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.TransparencyInput.TextBox.Text = texture_transparency and _round( texture_transparency, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.rep_x_focused then
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.XInput.TextBox.Text = texture_repeat_x and _round( texture_repeat_x, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.rep_y_focused then
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.YInput.TextBox.Text = texture_repeat_y and _round( texture_repeat_y, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;

&#9;&#9;elseif self.Options.mode == &quot;decal&quot; then

&#9;&#9;&#9;-- Get the applicable decals
&#9;&#9;&#9;local decals = {};
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;&#9;local decals_found = _getChildrenOfClass( Item, &quot;Decal&quot; );
&#9;&#9;&#9;&#9;for _, Decal in pairs( decals_found ) do
&#9;&#9;&#9;&#9;&#9;if Decal.Face == self.Options.side then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert( decals, Decal );
&#9;&#9;&#9;&#9;&#9;&#9;break;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- If there are no decals
&#9;&#9;&#9;if #decals == 0 then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 130 );

&#9;&#9;&#9;-- If only some parts have decals
&#9;&#9;&#9;elseif #decals ~= #Selection.Items then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Position = UDim2.new( 0, 14, 0, 135 );
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Position = UDim2.new( 0, 14, 0, 170 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 245 );

&#9;&#9;&#9;-- If every item has a decal
&#9;&#9;&#9;elseif #decals == #Selection.Items then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Position = UDim2.new( 0, 14, 0, 100 );
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Position = UDim2.new( 0, 14, 0, 135 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 205 );
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Get the values to display on the GUI
&#9;&#9;&#9;local decal_id, decal_transparency;
&#9;&#9;&#9;for decal_index, Decal in pairs( decals ) do

&#9;&#9;&#9;&#9;-- Set the start values for later comparison
&#9;&#9;&#9;&#9;if decal_index == 1 then
&#9;&#9;&#9;&#9;&#9;decal_id = Decal.Texture:lower();
&#9;&#9;&#9;&#9;&#9;decal_transparency = Decal.Transparency;

&#9;&#9;&#9;&#9;-- Set the values to `nil` if they vary across the selection
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;if decal_id ~= Decal.Texture:lower() then
&#9;&#9;&#9;&#9;&#9;&#9;decal_id = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if decal_transparency ~= Decal.Transparency then
&#9;&#9;&#9;&#9;&#9;&#9;decal_transparency = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Update the GUI&apos;s values
&#9;&#9;&#9;if not self.State.image_id_focused then
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.TextBox.Text = decal_id and ( decal_id:match( &quot;%?id=([0-9]+)&quot; ) or &quot;&quot; ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.transparency_focused then
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.TransparencyInput.TextBox.Text = decal_transparency and _round( decal_transparency, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;

&#9;&#9;end;
&#9;end;

end;

Tools.Texture.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then
&#9;&#9;local Container = Tool.Interfaces.BTTextureToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;-- Add functionality to the add/remove buttons
&#9;&#9;Container.AddButton.Button.MouseButton1Up:connect( function ()
&#9;&#9;&#9;if self.Options.mode == &quot;decal&quot; then
&#9;&#9;&#9;&#9;self:addDecal();
&#9;&#9;&#9;elseif self.Options.mode == &quot;texture&quot; then
&#9;&#9;&#9;&#9;self:addTexture();
&#9;&#9;&#9;end;
&#9;&#9;end );
&#9;&#9;Container.RemoveButton.Button.MouseButton1Up:connect( function ()
&#9;&#9;&#9;if self.Options.mode == &quot;decal&quot; then
&#9;&#9;&#9;&#9;self:removeDecal();
&#9;&#9;&#9;elseif self.Options.mode == &quot;texture&quot; then
&#9;&#9;&#9;&#9;self:removeTexture();
&#9;&#9;&#9;end;
&#9;&#9;end );

&#9;&#9;-- Add functionality to the mode selectors
&#9;&#9;Container.ModeOption.Decal.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeMode( &quot;decal&quot; );
&#9;&#9;end );
&#9;&#9;Container.ModeOption.Texture.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeMode( &quot;texture&quot; );
&#9;&#9;end );

&#9;&#9;-- Add the side dropdown
&#9;&#9;local SideDropdown = createDropdown();
&#9;&#9;self.SideDropdown = SideDropdown;
&#9;&#9;SideDropdown.Frame.Parent = Container.SideOption;
&#9;&#9;SideDropdown.Frame.Position = UDim2.new( 0, 35, 0, 0 );
&#9;&#9;SideDropdown.Frame.Size = UDim2.new( 1, -50, 0, 25 );
&#9;&#9;SideDropdown:addOption( &quot;TOP&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Top );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;BOTTOM&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Bottom );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;FRONT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Front );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;BACK&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Back );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;LEFT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Left );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;RIGHT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Right );
&#9;&#9;end );

&#9;&#9;-- Add functionality to the repeat inputs
&#9;&#9;Container.RepeatOption.XInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.rep_x_focused = true;
&#9;&#9;&#9;Container.RepeatOption.XInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.RepeatOption.XInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.RepeatOption.XInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeFrequency( &apos;x&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.rep_x_focused = false;
&#9;&#9;end );

&#9;&#9;Container.RepeatOption.YInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.rep_y_focused = true;
&#9;&#9;&#9;Container.RepeatOption.YInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.RepeatOption.YInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.RepeatOption.YInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeFrequency( &apos;y&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.rep_y_focused = false;
&#9;&#9;end );

&#9;&#9;-- Add functionality to the decal/texture ID inputs
&#9;&#9;Container.ImageIDOption.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.image_id_focused = true;
&#9;&#9;&#9;Container.ImageIDOption.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.ImageIDOption.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local input = Container.ImageIDOption.TextBox.Text;
&#9;&#9;&#9;local potential_new = tonumber( input ) or input:lower():match( &quot;%?id=([0-9]+)&quot; );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if self.Options.mode == &quot;decal&quot; then
&#9;&#9;&#9;&#9;&#9;self:changeDecal( potential_new );
&#9;&#9;&#9;&#9;elseif self.Options.mode == &quot;texture&quot; then
&#9;&#9;&#9;&#9;&#9;self:changeTexture( potential_new );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.image_id_focused = false;
&#9;&#9;end );

&#9;&#9;Container.TransparencyOption.TransparencyInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.transparency_focused = true;
&#9;&#9;&#9;Container.TransparencyOption.TransparencyInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.TransparencyOption.TransparencyInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.TransparencyOption.TransparencyInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 1 then
&#9;&#9;&#9;&#9;&#9;potential_new = 1;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeTransparency( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.transparency_focused = false;
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Texture.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Texture.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX13">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTWeldTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Weld tool
------------------------------------------

-- Create the tool
Tools.Weld = {};

-- Define the tool&apos;s color
Tools.Weld.Color = BrickColor.new( &quot;Really black&quot; );

-- Keep a container for state data
Tools.Weld.State = {};

-- Keep a container for temporary connections
Tools.Weld.Connections = {};

-- Keep a container for platform event connections
Tools.Weld.Listeners = {};

-- Start adding functionality to the tool
Tools.Weld.Listeners.Equipped = function ()

&#9;local self = Tools.Weld;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Highlight the last part in the selection
&#9;if Selection.Last then
&#9;&#9;SelectionBoxes[Selection.Last].Color = BrickColor.new( &quot;Pastel Blue&quot; );
&#9;end;
&#9;self.Connections.LastPartHighlighter = Selection.Changed:connect( function ()
&#9;&#9;updateSelectionBoxColor();
&#9;&#9;if Selection.Last then
&#9;&#9;&#9;SelectionBoxes[Selection.Last].Color = BrickColor.new( &quot;Pastel Blue&quot; );
&#9;&#9;end;
&#9;end );

end;

Tools.Weld.Listeners.Unequipped = function ()

&#9;local self = Tools.Weld;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Weld.Listeners.Button2Down = function ()

&#9;local self = Tools.Weld;

&#9;-- Capture the camera rotation (for later use
&#9;-- in determining whether a surface was being
&#9;-- selected or the camera was being rotated
&#9;-- with the right mouse button)
&#9;local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
&#9;self.State.PreB2DownCameraRotation = Vector3.new( cr_x, cr_y, cr_z );

end;

Tools.Weld.Listeners.Button2Up = function ()

&#9;local self = Tools.Weld;

&#9;local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
&#9;local CameraRotation = Vector3.new( cr_x, cr_y, cr_z );

&#9;-- If a part is selected
&#9;if Selection:find( Mouse.Target ) and self.State.PreB2DownCameraRotation == CameraRotation then
&#9;&#9;Selection:focus( Mouse.Target );
&#9;end;

end;

Tools.Weld.weld = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;weld_parents = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Weld in pairs( self.welds ) do
&#9;&#9;&#9;&#9;Selection:add( Weld.Part0 );
&#9;&#9;&#9;&#9;Selection:add( Weld.Part1 );
&#9;&#9;&#9;&#9;Weld.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Weld in pairs( self.welds ) do
&#9;&#9;&#9;&#9;Weld.Parent = self.weld_parents[Weld];
&#9;&#9;&#9;&#9;Selection:add( Weld.Part0 );
&#9;&#9;&#9;&#9;Selection:add( Weld.Part1 );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Keep track of the welds we create
&#9;local welds = {};

&#9;-- Make sure there&apos;s more than one item
&#9;if #Selection.Items &gt; 1 and Selection.Last then

&#9;&#9;-- Weld all the parts to the last part
&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;if Item ~= Selection.Last then
&#9;&#9;&#9;&#9;local Weld = RbxUtility.Create &quot;Weld&quot; {
&#9;&#9;&#9;&#9;&#9;Name = &apos;BTWeld&apos;;
&#9;&#9;&#9;&#9;&#9;Parent = Selection.Last;
&#9;&#9;&#9;&#9;&#9;Part0 = Selection.Last;
&#9;&#9;&#9;&#9;&#9;Part1 = Item;
&#9;&#9;&#9;&#9;&#9;Archivable = false;

&#9;&#9;&#9;&#9;&#9;-- Calculate the offset of `Item` from `Selection.Last`
&#9;&#9;&#9;&#9;&#9;C1 = Item.CFrame:toObjectSpace( Selection.Last.CFrame );
&#9;&#9;&#9;&#9;};
&#9;&#9;&#9;&#9;table.insert( welds, Weld );
&#9;&#9;&#9;&#9;HistoryRecord.weld_parents[Weld] = Weld.Parent;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;end;

&#9;HistoryRecord.welds = welds;
&#9;History:add( HistoryRecord );

&#9;-- Update the change bar
&#9;self.GUI.Changes.Text.Text = &quot;created &quot; .. #welds .. &quot; weld&quot; .. ( #welds ~= 1 and &quot;s&quot; or &quot;&quot; );

&#9;-- Play a confirmation sound
&#9;local Sound = RbxUtility.Create &quot;Sound&quot; {
&#9;&#9;Name = &quot;BTActionCompletionSound&quot;;
&#9;&#9;Pitch = 1.5;
&#9;&#9;SoundId = action_completion_sound;
&#9;&#9;Volume = 1;
&#9;&#9;Parent = Player;
&#9;};
&#9;Sound:Play();
&#9;Sound:Destroy();

end;

Tools.Weld.breakWelds = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;weld_parents = {};
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Weld in pairs( self.welds ) do
&#9;&#9;&#9;&#9;Selection:add( Weld.Part0 );
&#9;&#9;&#9;&#9;Selection:add( Weld.Part1 );
&#9;&#9;&#9;&#9;Weld.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Weld in pairs( self.welds ) do
&#9;&#9;&#9;&#9;Selection:add( Weld.Part1 );
&#9;&#9;&#9;&#9;Selection:add( Weld.Part0 );
&#9;&#9;&#9;&#9;Weld.Parent = self.weld_parents[Weld];
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Break any welds we created for each item in the selection
&#9;local welds = {};
&#9;local all_objects = _getAllDescendants( Game.Workspace );
&#9;for _, Weld in pairs( all_objects ) do
&#9;&#9;if Weld:IsA( &quot;Weld&quot; ) and Weld.Name == &quot;BTWeld&quot; then
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;&#9;if Weld.Part0 == Item or Weld.Part1 == Item then
&#9;&#9;&#9;&#9;&#9;if not HistoryRecord.weld_parents[Weld] then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert( welds, Weld );
&#9;&#9;&#9;&#9;&#9;&#9;HistoryRecord.weld_parents[Weld] = Weld.Parent;
&#9;&#9;&#9;&#9;&#9;&#9;Weld.Parent = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;HistoryRecord.welds = welds;
&#9;History:add( HistoryRecord );

&#9;-- Update the change bar
&#9;self.GUI.Changes.Text.Text = &quot;broke &quot; .. #welds .. &quot; weld&quot; .. ( #welds ~= 1 and &quot;s&quot; or &quot;&quot; );

&#9;-- Play a confirmation sound
&#9;local Sound = RbxUtility.Create &quot;Sound&quot; {
&#9;&#9;Name = &quot;BTActionCompletionSound&quot;;
&#9;&#9;Pitch = 1.5;
&#9;&#9;SoundId = action_completion_sound;
&#9;&#9;Volume = 1;
&#9;&#9;Parent = Player;
&#9;};
&#9;Sound:Play();
&#9;Sound:Destroy();

end;

Tools.Weld.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces.BTWeldToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;Container.Interface.WeldButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:weld();
&#9;&#9;end );

&#9;&#9;Container.Interface.BreakWeldsButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:breakWelds();
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Weld.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Weld.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX14">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTLightingTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Lighting tool
------------------------------------------

-- Create the tool
Tools.Lighting = {};

-- Define the tool&apos;s color
Tools.Lighting.Color = BrickColor.new( &quot;Really black&quot; );

-- Keep a container for state data
Tools.Lighting.State = {};

-- Keep a container for temporary connections
Tools.Lighting.Connections = {};

-- Keep a container for platform event connections
Tools.Lighting.Listeners = {};

-- Start adding functionality to the tool
Tools.Lighting.Listeners.Equipped = function ()

&#9;local self = Tools.Lighting;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Lighting.Listeners.Unequipped = function ()

&#9;local self = Tools.Lighting;

&#9;-- Stop the GUI updater
&#9;if self.Updater then
&#9;&#9;self.Updater();
&#9;&#9;self.Updater = nil;
&#9;end;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Lighting.Listeners.Button2Down = function ()

&#9;local self = Tools.Lighting;

&#9;-- Capture the camera rotation (for later use
&#9;-- in determining whether a surface was being
&#9;-- selected or the camera was being rotated
&#9;-- with the right mouse button)
&#9;local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
&#9;self.State.PreB2DownCameraRotation = Vector3.new( cr_x, cr_y, cr_z );

end;

Tools.Lighting.Listeners.Button2Up = function ()

&#9;local self = Tools.Lighting;

&#9;local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
&#9;local CameraRotation = Vector3.new( cr_x, cr_y, cr_z );

&#9;-- If a surface is selected, change the side option
&#9;if Selection:find( Mouse.Target ) and self.State.PreB2DownCameraRotation == CameraRotation then
&#9;&#9;self:changeSide( Mouse.TargetSurface );
&#9;end;

end;

Tools.Lighting.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;-- If there are items, display the regular interface
&#9;if #Selection.Items &gt; 0 then
&#9;&#9;local spotlights = self:getSpotlights();
&#9;&#9;local pointlights = self:getPointLights();

&#9;&#9;-- Get the properties of the spot/point lights
&#9;&#9;local sl_color_r, sl_color_g, sl_color_b, sl_brightness, sl_range, sl_shadows, sl_angle, sl_side;
&#9;&#9;local pl_color_r, pl_color_g, pl_color_b, pl_brightness, pl_range, pl_shadows;
&#9;&#9;for light_index, Light in pairs( spotlights ) do

&#9;&#9;&#9;-- Set the initial values for later comparison
&#9;&#9;&#9;if light_index == 1 then
&#9;&#9;&#9;&#9;sl_color_r, sl_color_g, sl_color_b = Light.Color.r, Light.Color.g, Light.Color.b;
&#9;&#9;&#9;&#9;sl_brightness = Light.Brightness;
&#9;&#9;&#9;&#9;sl_range = Light.Range;
&#9;&#9;&#9;&#9;sl_shadows = Light.Shadows;
&#9;&#9;&#9;&#9;sl_angle = Light.Angle;
&#9;&#9;&#9;&#9;sl_side = Light.Face;

&#9;&#9;&#9;-- Set the values to `nil` if they vary across the selection
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if sl_color_r ~= Light.Color.r then
&#9;&#9;&#9;&#9;&#9;sl_color_r = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_color_g ~= Light.Color.g then
&#9;&#9;&#9;&#9;&#9;sl_color_g = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_color_b ~= Light.Color.b then
&#9;&#9;&#9;&#9;&#9;sl_color_b = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_brightness ~= Light.Brightness then
&#9;&#9;&#9;&#9;&#9;sl_brightness = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_range ~= Light.Range then
&#9;&#9;&#9;&#9;&#9;sl_range = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_shadows ~= Light.Shadows then
&#9;&#9;&#9;&#9;&#9;sl_shadows = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_angle ~= Light.Angle then
&#9;&#9;&#9;&#9;&#9;sl_angle = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_side ~= Light.Face then
&#9;&#9;&#9;&#9;&#9;sl_side = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;&#9;for light_index, Light in pairs( pointlights ) do

&#9;&#9;&#9;-- Set the initial values for later comparison
&#9;&#9;&#9;if light_index == 1 then
&#9;&#9;&#9;&#9;pl_color_r, pl_color_g, pl_color_b = Light.Color.r, Light.Color.g, Light.Color.b;
&#9;&#9;&#9;&#9;pl_brightness = Light.Brightness;
&#9;&#9;&#9;&#9;pl_range = Light.Range;
&#9;&#9;&#9;&#9;pl_shadows = Light.Shadows;

&#9;&#9;&#9;-- Set the values to `nil` if they vary across the selection
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if pl_color_r ~= Light.Color.r then
&#9;&#9;&#9;&#9;&#9;pl_color_r = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if pl_color_g ~= Light.Color.g then
&#9;&#9;&#9;&#9;&#9;pl_color_g = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if pl_color_b ~= Light.Color.b then
&#9;&#9;&#9;&#9;&#9;pl_color_b = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if pl_brightness ~= Light.Brightness then
&#9;&#9;&#9;&#9;&#9;pl_brightness = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if pl_range ~= Light.Range then
&#9;&#9;&#9;&#9;&#9;pl_range = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if pl_shadows ~= Light.Shadows then
&#9;&#9;&#9;&#9;&#9;pl_shadows = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;&#9;self.State.sl_color = ( sl_color_r and sl_color_g and sl_color_b ) and Color3.new( sl_color_r, sl_color_g, sl_color_b ) or nil;
&#9;&#9;self.State.pl_color = ( pl_color_r and pl_color_g and pl_color_b ) and Color3.new( pl_color_r, pl_color_g, pl_color_b ) or nil;

&#9;&#9;-- Update the spotlight GUI data
&#9;&#9;if not self.State.sl_color_r_focused then
&#9;&#9;&#9;self.GUI.Spotlight.Options.ColorOption.RInput.TextBox.Text = sl_color_r and _round( sl_color_r * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.sl_color_g_focused then
&#9;&#9;&#9;self.GUI.Spotlight.Options.ColorOption.GInput.TextBox.Text = sl_color_g and _round( sl_color_g * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.sl_color_b_focused then
&#9;&#9;&#9;self.GUI.Spotlight.Options.ColorOption.BInput.TextBox.Text = sl_color_b and _round( sl_color_b * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.sl_brightness_focused then
&#9;&#9;&#9;self.GUI.Spotlight.Options.BrightnessOption.Input.TextBox.Text = sl_brightness and _round( sl_brightness, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.sl_range_focused then
&#9;&#9;&#9;self.GUI.Spotlight.Options.RangeOption.Input.TextBox.Text = sl_range and _round( sl_range, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if sl_shadows == nil then
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.On.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.Off.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;elseif sl_shadows == true then
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.On.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.Off.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;elseif sl_shadows == false then
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.On.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.Off.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;end;
&#9;&#9;if not self.State.sl_angle_focused then
&#9;&#9;&#9;self.GUI.Spotlight.Options.AngleOption.Input.TextBox.Text = sl_angle and _round( sl_angle, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;self.SideDropdown:selectOption( sl_side and sl_side.Name:upper() or &apos;*&apos; );

&#9;&#9;-- Update the point light GUI info
&#9;&#9;if not self.State.pl_color_r_focused then
&#9;&#9;&#9;self.GUI.PointLight.Options.ColorOption.RInput.TextBox.Text = pl_color_r and _round( pl_color_r * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.pl_color_g_focused then
&#9;&#9;&#9;self.GUI.PointLight.Options.ColorOption.GInput.TextBox.Text = pl_color_g and _round( pl_color_g * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.pl_color_b_focused then
&#9;&#9;&#9;self.GUI.PointLight.Options.ColorOption.BInput.TextBox.Text = pl_color_b and _round( pl_color_b * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.pl_brightness_focused then
&#9;&#9;&#9;self.GUI.PointLight.Options.BrightnessOption.Input.TextBox.Text = pl_brightness and _round( pl_brightness, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.pl_range_focused then
&#9;&#9;&#9;self.GUI.PointLight.Options.RangeOption.Input.TextBox.Text = pl_range and _round( pl_range, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if pl_shadows == nil then
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.On.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.Off.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;elseif pl_shadows == true then
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.On.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.Off.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;elseif pl_shadows == false then
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.On.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.Off.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;end;

&#9;&#9;if self.GUI.SelectNote.Visible then
&#9;&#9;&#9;self:closePointLight();
&#9;&#9;&#9;self:closeSpotlight();
&#9;&#9;end;
&#9;&#9;self.GUI.Spotlight.Visible = true;
&#9;&#9;self.GUI.PointLight.Visible = true;
&#9;&#9;self.GUI.SelectNote.Visible = false;

&#9;&#9;if not self.State.spotlight_open and not self.State.pointlight_open then
&#9;&#9;&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 95 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;&#9;end;

&#9;&#9;-- If there are no spotlights
&#9;&#9;if #spotlights == 0 then
&#9;&#9;&#9;self.GUI.Spotlight.Options.Size = UDim2.new( 1, -3, 0, 0 );
&#9;&#9;&#9;self.GUI.Spotlight.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.Spotlight.RemoveButton.Visible = false;
&#9;&#9;&#9;if self.State.spotlight_open then
&#9;&#9;&#9;&#9;self:closeSpotlight();
&#9;&#9;&#9;end;

&#9;&#9;-- If only some items have spotlights
&#9;&#9;elseif #spotlights ~= #Selection.Items then
&#9;&#9;&#9;self.GUI.Spotlight.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.Spotlight.RemoveButton.Position = UDim2.new( 0, 90, 0, 3 );
&#9;&#9;&#9;self.GUI.Spotlight.RemoveButton.Visible = true;

&#9;&#9;-- If all items have spotlights
&#9;&#9;elseif #spotlights == #Selection.Items then
&#9;&#9;&#9;self.GUI.Spotlight.AddButton.Visible = false;
&#9;&#9;&#9;self.GUI.Spotlight.RemoveButton.Position = UDim2.new( 0, 127, 0, 3 );
&#9;&#9;&#9;self.GUI.Spotlight.RemoveButton.Visible = true;
&#9;&#9;&#9;if self.GUI.Spotlight.Size == UDim2.new( 0, 200, 0, 52 ) then
&#9;&#9;&#9;&#9;self.GUI.Spotlight.Size = UDim2.new( 0, 200, 0, 95 );
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- If there are no point lights
&#9;&#9;if #pointlights == 0 then
&#9;&#9;&#9;self.GUI.PointLight.Options.Size = UDim2.new( 1, -3, 0, 0 );
&#9;&#9;&#9;self.GUI.PointLight.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.PointLight.RemoveButton.Visible = false;
&#9;&#9;&#9;if self.State.pointlight_open then
&#9;&#9;&#9;&#9;self:closePointLight();
&#9;&#9;&#9;end;

&#9;&#9;-- If only some items have point lights
&#9;&#9;elseif #pointlights ~= #Selection.Items then
&#9;&#9;&#9;self.GUI.PointLight.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.PointLight.RemoveButton.Position = UDim2.new( 0, 90, 0, 3 );
&#9;&#9;&#9;self.GUI.PointLight.RemoveButton.Visible = true;

&#9;&#9;-- If all items have point lights
&#9;&#9;elseif #pointlights == #Selection.Items then
&#9;&#9;&#9;self.GUI.PointLight.AddButton.Visible = false;
&#9;&#9;&#9;self.GUI.PointLight.RemoveButton.Position = UDim2.new( 0, 127, 0, 3 );
&#9;&#9;&#9;self.GUI.PointLight.RemoveButton.Visible = true;
&#9;&#9;end;

&#9;-- If nothing is selected, show the select something note
&#9;else
&#9;&#9;self.GUI.Spotlight.Visible = false;
&#9;&#9;self.GUI.PointLight.Visible = false;
&#9;&#9;self.GUI.SelectNote.Visible = true;
&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 52 );
&#9;end;

end;

Tools.Lighting.openSpotlight = function ( self )
&#9;self.State.spotlight_open = true;
&#9;self:closePointLight();
&#9;self.GUI.Spotlight.Options:TweenSize( UDim2.new( 1, -3, 0, 300 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI.Spotlight:TweenPosition( UDim2.new( 0, 10, 0, 30 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 275 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
end;

Tools.Lighting.openPointLight = function ( self )
&#9;self.State.pointlight_open = true;
&#9;self:closeSpotlight();
&#9;self.GUI.PointLight.Options:TweenSize( UDim2.new( 1, -3, 0, 110 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI.PointLight:TweenPosition( UDim2.new( 0, 10, 0, 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 200 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
end;

Tools.Lighting.closeSpotlight = function ( self )
&#9;self.State.spotlight_open = false;
&#9;self.GUI.Spotlight.Options:TweenSize( UDim2.new( 1, -3, 0, 0 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI.PointLight:TweenPosition( UDim2.new( 0, 10, 0, 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;if not self.State.pointlight_open then
&#9;&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 95 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;end;
end;

Tools.Lighting.closePointLight = function ( self )
&#9;self.State.pointlight_open = false;
&#9;self.GUI.PointLight:TweenPosition( UDim2.new( 0, 10, 0, self.State.spotlight_open and 240 or 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI.PointLight.Options:TweenSize( UDim2.new( 1, -3, 0, 0 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;if not self.State.spotlight_open then
&#9;&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 95 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;end;
end;

Tools.Lighting.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then
&#9;&#9;local Container = Tool.Interfaces.BTLightingToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;Container.Spotlight.ArrowButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;if not self.State.spotlight_open and #self:getSpotlights() &gt; 0 then
&#9;&#9;&#9;&#9;self:openSpotlight();
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:closeSpotlight();
&#9;&#9;&#9;end;
&#9;&#9;end );
&#9;&#9;Container.PointLight.ArrowButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;if not self.State.pointlight_open and #self:getPointLights() &gt; 0 then
&#9;&#9;&#9;&#9;self:openPointLight();
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:closePointLight();
&#9;&#9;&#9;end;
&#9;&#9;end );

&#9;&#9;Container.Spotlight.AddButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:addLight( &apos;SpotLight&apos; );
&#9;&#9;&#9;self:openSpotlight();
&#9;&#9;end );
&#9;&#9;Container.PointLight.AddButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:addLight( &apos;PointLight&apos; );
&#9;&#9;&#9;self:openPointLight();
&#9;&#9;end );
&#9;&#9;Container.Spotlight.RemoveButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:removeLight( &apos;spotlight&apos; );
&#9;&#9;&#9;self:closeSpotlight();
&#9;&#9;end );
&#9;&#9;Container.PointLight.RemoveButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:removeLight( &apos;pointlight&apos; );
&#9;&#9;&#9;self:closePointLight();
&#9;&#9;end );

&#9;&#9;-- Create the spotlight interface&apos;s side dropdown
&#9;&#9;local SideDropdown = createDropdown();
&#9;&#9;self.SideDropdown = SideDropdown;
&#9;&#9;SideDropdown.Frame.Parent = Container.Spotlight.Options.SideOption;
&#9;&#9;SideDropdown.Frame.Position = UDim2.new( 0, 35, 0, 0 );
&#9;&#9;SideDropdown.Frame.Size = UDim2.new( 0, 90, 0, 25 );

&#9;&#9;SideDropdown:addOption( &quot;TOP&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Top );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;BOTTOM&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Bottom );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;FRONT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Front );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;BACK&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Back );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;LEFT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Left );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;RIGHT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Right );
&#9;&#9;end );

&#9;&#9;-- Add functionality to spotlight inputs
&#9;&#9;local SpotlightUI = Container.Spotlight;

&#9;&#9;local SLColor = SpotlightUI.Options.ColorOption;
&#9;&#9;SLColor.RInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sl_color_r_focused = true;
&#9;&#9;&#9;SLColor.RInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SLColor.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SLColor.RInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeColor( &apos;spotlight&apos;, &apos;r&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sl_color_r_focused = false;
&#9;&#9;end );
&#9;&#9;SLColor.GInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sl_color_g_focused = true;
&#9;&#9;&#9;SLColor.GInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SLColor.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SLColor.GInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeColor( &apos;spotlight&apos;, &apos;g&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sl_color_g_focused = false;
&#9;&#9;end );
&#9;&#9;SLColor.BInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sl_color_b_focused = true;
&#9;&#9;&#9;SLColor.BInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SLColor.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SLColor.BInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeColor( &apos;spotlight&apos;, &apos;b&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sl_color_b_focused = false;
&#9;&#9;end );

&#9;&#9;SLColor.HSVPicker.MouseButton1Up:connect( function ()
&#9;&#9;&#9;ColorPicker:start( function ( ... )
&#9;&#9;&#9;&#9;local args = { ... };
&#9;&#9;&#9;&#9;-- If a color was picked, change the spotlights&apos; color
&#9;&#9;&#9;&#9;-- to the selected color
&#9;&#9;&#9;&#9;if #args == 3 then
&#9;&#9;&#9;&#9;&#9;self:changeColor( &apos;spotlight&apos;, _HSVToRGB( ... ) );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end, self.State.sl_color );
&#9;&#9;end );

&#9;&#9;local SLBrightness = SpotlightUI.Options.BrightnessOption.Input;
&#9;&#9;SLBrightness.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sl_brightness_focused = true;
&#9;&#9;&#9;SLBrightness.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SLBrightness.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SLBrightness.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 5 then
&#9;&#9;&#9;&#9;&#9;potential_new = 5;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeBrightness( &apos;spotlight&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sl_brightness_focused = false;
&#9;&#9;end );

&#9;&#9;local SLAngle = SpotlightUI.Options.AngleOption.Input;
&#9;&#9;SLAngle.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sl_angle_focused = true;
&#9;&#9;&#9;SLAngle.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SLAngle.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SLAngle.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeAngle( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sl_angle_focused = false;
&#9;&#9;end );

&#9;&#9;local SLRange = SpotlightUI.Options.RangeOption.Input;
&#9;&#9;SLRange.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sl_range_focused = true;
&#9;&#9;&#9;SLRange.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SLRange.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SLRange.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 60 then
&#9;&#9;&#9;&#9;&#9;potential_new = 60;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeRange( &apos;spotlight&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sl_range_focused = false;
&#9;&#9;end );

&#9;&#9;local SLShadows = SpotlightUI.Options.ShadowsOption;
&#9;&#9;SLShadows.On.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeShadows( &apos;spotlight&apos;, true );
&#9;&#9;end );
&#9;&#9;SLShadows.Off.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeShadows( &apos;spotlight&apos;, false );
&#9;&#9;end );

&#9;&#9;-- Add functionality to point light inputs
&#9;&#9;local PointLightUI = Container.PointLight;

&#9;&#9;local PLColor = PointLightUI.Options.ColorOption;
&#9;&#9;PLColor.RInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pl_color_r_focused = true;
&#9;&#9;&#9;PLColor.RInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;PLColor.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( PLColor.RInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeColor( &apos;pointlight&apos;, &apos;r&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pl_color_r_focused = false;
&#9;&#9;end );
&#9;&#9;PLColor.GInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pl_color_g_focused = true;
&#9;&#9;&#9;PLColor.GInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;PLColor.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( PLColor.GInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeColor( &apos;pointlight&apos;, &apos;g&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pl_color_g_focused = false;
&#9;&#9;end );
&#9;&#9;PLColor.BInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pl_color_b_focused = true;
&#9;&#9;&#9;PLColor.BInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;PLColor.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( PLColor.BInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeColor( &apos;pointlight&apos;, &apos;b&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pl_color_b_focused = false;
&#9;&#9;end );

&#9;&#9;PLColor.HSVPicker.MouseButton1Up:connect( function ()
&#9;&#9;&#9;ColorPicker:start( function ( ... )
&#9;&#9;&#9;&#9;local args = { ... };
&#9;&#9;&#9;&#9;-- If a color was picked, change the point lights&apos; color
&#9;&#9;&#9;&#9;-- to the selected color
&#9;&#9;&#9;&#9;if #args == 3 then
&#9;&#9;&#9;&#9;&#9;self:changeColor( &apos;pointlight&apos;, _HSVToRGB( ... ) );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end, self.State.pl_color );
&#9;&#9;end );

&#9;&#9;local PLBrightness = PointLightUI.Options.BrightnessOption.Input;
&#9;&#9;PLBrightness.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pl_brightness_focused = true;
&#9;&#9;&#9;PLBrightness.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;PLBrightness.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( PLBrightness.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 5 then
&#9;&#9;&#9;&#9;&#9;potential_new = 5;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeBrightness( &apos;pointlight&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pl_brightness_focused = false;
&#9;&#9;end );

&#9;&#9;local PLRange = PointLightUI.Options.RangeOption.Input;
&#9;&#9;PLRange.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pl_range_focused = true;
&#9;&#9;&#9;PLRange.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;PLRange.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( PLRange.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 60 then
&#9;&#9;&#9;&#9;&#9;potential_new = 60;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeRange( &apos;pointlight&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pl_range_focused = false;
&#9;&#9;end );

&#9;&#9;local PLShadows = PointLightUI.Options.ShadowsOption;
&#9;&#9;PLShadows.On.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeShadows( &apos;pointlight&apos;, true );
&#9;&#9;end );
&#9;&#9;PLShadows.Off.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeShadows( &apos;pointlight&apos;, false );
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Lighting.changeSide = function ( self, side )

&#9;local lights = self:getSpotlights();

&#9;self:startHistoryRecord( lights );
&#9;for _, Light in pairs( lights ) do
&#9;&#9;Light.Face = side;
&#9;end;
&#9;self:finishHistoryRecord();

&#9;if self.SideDropdown.open then
&#9;&#9;self.SideDropdown:toggle();
&#9;end;

end;

Tools.Lighting.changeAngle = function ( self, angle )

&#9;local lights = self:getSpotlights();

&#9;self:startHistoryRecord( lights );
&#9;for _, Light in pairs( lights ) do
&#9;&#9;Light.Angle = angle;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Lighting.getSpotlights = function ( self )
&#9;-- Returns a list of all the relevant spotlights in the selection items

&#9;local spotlights = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Spotlight = _getChildOfClass( Item, &apos;SpotLight&apos; );
&#9;&#9;if Spotlight then
&#9;&#9;&#9;table.insert( spotlights, Spotlight );
&#9;&#9;end;
&#9;end;

&#9;return spotlights;

end;

Tools.Lighting.getPointLights = function ( self )
&#9;-- Returns a list of all the relevant point lights in the selection items

&#9;local pointlights = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local PointLight = _getChildOfClass( Item, &apos;PointLight&apos; );
&#9;&#9;if PointLight then
&#9;&#9;&#9;table.insert( pointlights, PointLight );
&#9;&#9;end;
&#9;end;

&#9;return pointlights;

end;

Tools.Lighting.changeColor = function ( self, target, ... )

&#9;local args = { ... };
&#9;local targets;

&#9;if target == &apos;spotlight&apos; then
&#9;&#9;targets = self:getSpotlights();
&#9;elseif target == &apos;pointlight&apos; then
&#9;&#9;targets = self:getPointLights();
&#9;end;

&#9;self:startHistoryRecord( targets );

&#9;-- If only one component is being changed at a time
&#9;if #args == 2 then
&#9;&#9;local component = args[1];
&#9;&#9;local component_value = args[2];

&#9;&#9;for _, Light in pairs( targets ) do
&#9;&#9;&#9;Light.Color = Color3.new(
&#9;&#9;&#9;&#9;component == &apos;r&apos; and component_value or Light.Color.r,
&#9;&#9;&#9;&#9;component == &apos;g&apos; and component_value or Light.Color.g,
&#9;&#9;&#9;&#9;component == &apos;b&apos; and component_value or Light.Color.b
&#9;&#9;&#9;);
&#9;&#9;end;

&#9;-- If all 3 components of the color are being changed
&#9;elseif #args == 3 then
&#9;&#9;local r, g, b = ...;

&#9;&#9;for _, Light in pairs( targets ) do
&#9;&#9;&#9;Light.Color = Color3.new( r, g, b );
&#9;&#9;end;
&#9;end;

&#9;self:finishHistoryRecord();
end;

Tools.Lighting.changeBrightness = function ( self, target, new_brightness )

&#9;local targets;

&#9;if target == &apos;spotlight&apos; then
&#9;&#9;targets = self:getSpotlights();
&#9;elseif target == &apos;pointlight&apos; then
&#9;&#9;targets = self:getPointLights();
&#9;end;

&#9;self:startHistoryRecord( targets );

&#9;for _, Light in pairs( targets ) do
&#9;&#9;Light.Brightness = new_brightness;
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Lighting.changeRange = function ( self, target, new_range )

&#9;local targets;

&#9;if target == &apos;spotlight&apos; then
&#9;&#9;targets = self:getSpotlights();
&#9;elseif target == &apos;pointlight&apos; then
&#9;&#9;targets = self:getPointLights();
&#9;end;

&#9;self:startHistoryRecord( targets );

&#9;for _, Light in pairs( targets ) do
&#9;&#9;Light.Range = new_range;
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Lighting.changeShadows = function ( self, target, new_shadows )

&#9;local targets;

&#9;if target == &apos;spotlight&apos; then
&#9;&#9;targets = self:getSpotlights();
&#9;elseif target == &apos;pointlight&apos; then
&#9;&#9;targets = self:getPointLights();
&#9;end;

&#9;self:startHistoryRecord( targets );

&#9;for _, Light in pairs( targets ) do
&#9;&#9;Light.Shadows = new_shadows;
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Lighting.addLight = function ( self, light_type )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Light in pairs( self.lights ) do
&#9;&#9;&#9;&#9;Light.Parent = self.light_parents[Light];
&#9;&#9;&#9;&#9;Selection:add( Light.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Light in pairs( self.lights ) do
&#9;&#9;&#9;&#9;Selection:add( Light.Parent );
&#9;&#9;&#9;&#9;Light.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Add lights to all the items from the selection that
&#9;-- don&apos;t already have one
&#9;local lights = {};
&#9;local light_parents = {};
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Light = _getChildOfClass( Item, light_type );
&#9;&#9;if not Light then
&#9;&#9;&#9;local Light = RbxUtility.Create( light_type ) {
&#9;&#9;&#9;&#9;Parent = Item;
&#9;&#9;&#9;};
&#9;&#9;&#9;table.insert( lights, Light );
&#9;&#9;&#9;light_parents[Light] = Item;
&#9;&#9;end;
&#9;end;

&#9;HistoryRecord.lights = lights;
&#9;HistoryRecord.light_parents = light_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Lighting.removeLight = function ( self, light_type )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Light in pairs( self.lights ) do
&#9;&#9;&#9;&#9;Selection:add( Light.Parent );
&#9;&#9;&#9;&#9;Light.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Light in pairs( self.lights ) do
&#9;&#9;&#9;&#9;Light.Parent = self.light_parents[Light];
&#9;&#9;&#9;&#9;Selection:add( Light.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;local lights = {};
&#9;local light_parents = {};

&#9;-- Remove lights from all the selected items
&#9;local lights;
&#9;if light_type == &apos;spotlight&apos; then
&#9;&#9;lights = self:getSpotlights();
&#9;elseif light_type == &apos;pointlight&apos; then
&#9;&#9;lights = self:getPointLights();
&#9;end;

&#9;for _, Light in pairs( lights ) do
&#9;&#9;light_parents[Light] = Light.Parent;
&#9;&#9;Light.Parent = nil;
&#9;end;

&#9;HistoryRecord.lights = lights;
&#9;HistoryRecord.light_parents = light_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Lighting.startHistoryRecord = function ( self, lights )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( lights );
&#9;&#9;initial_color = {};&#9;&#9;&#9;terminal_color = {};
&#9;&#9;initial_brightness = {};&#9;terminal_brightness = {};
&#9;&#9;initial_range = {};&#9;&#9;&#9;terminal_range = {};
&#9;&#9;initial_shadows = {};&#9;&#9;terminal_shadows = {};
&#9;&#9;-- Spotlights only
&#9;&#9;initial_side = {};&#9;&#9;&#9;terminal_side = {};
&#9;&#9;initial_angle = {};&#9;&#9;&#9;terminal_angle = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;Target.Color = self.initial_color[Target];
&#9;&#9;&#9;&#9;&#9;Target.Brightness = self.initial_brightness[Target];
&#9;&#9;&#9;&#9;&#9;Target.Range = self.initial_range[Target];
&#9;&#9;&#9;&#9;&#9;Target.Shadows = self.initial_shadows[Target];
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &apos;SpotLight&apos; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.Face = self.initial_side[Target];
&#9;&#9;&#9;&#9;&#9;&#9;Target.Angle = self.initial_angle[Target];
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;Target.Color = self.terminal_color[Target];
&#9;&#9;&#9;&#9;&#9;Target.Brightness = self.terminal_brightness[Target];
&#9;&#9;&#9;&#9;&#9;Target.Range = self.terminal_range[Target];
&#9;&#9;&#9;&#9;&#9;Target.Shadows = self.terminal_shadows[Target];
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &apos;SpotLight&apos; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.Face = self.terminal_side[Target];
&#9;&#9;&#9;&#9;&#9;&#9;Target.Angle = self.terminal_angle[Target];
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_color[Item] = Item.Color;
&#9;&#9;&#9;self.State.HistoryRecord.initial_brightness[Item] = Item.Brightness;
&#9;&#9;&#9;self.State.HistoryRecord.initial_range[Item] = Item.Range;
&#9;&#9;&#9;self.State.HistoryRecord.initial_shadows[Item] = Item.Shadows;
&#9;&#9;&#9;if Item:IsA( &apos;SpotLight&apos; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_side[Item] = Item.Face;
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_angle[Item] = Item.Angle;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

end;

Tools.Lighting.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_color[Item] = Item.Color;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_brightness[Item] = Item.Brightness;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_range[Item] = Item.Range;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_shadows[Item] = Item.Shadows;
&#9;&#9;&#9;if Item:IsA( &apos;SpotLight&apos; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_side[Item] = Item.Face;
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_angle[Item] = Item.Angle;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Lighting.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Lighting.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX15">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTDecorateTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Decorate tool
------------------------------------------

-- Create the tool
Tools.Decorate = {};

-- Define the tool&apos;s color
Tools.Decorate.Color = BrickColor.new( &quot;Really black&quot; );

-- Keep a container for state data
Tools.Decorate.State = {};

-- Keep a container for temporary connections
Tools.Decorate.Connections = {};

-- Keep a container for platform event connections
Tools.Decorate.Listeners = {};

-- Start adding functionality to the tool
Tools.Decorate.Listeners.Equipped = function ()

&#9;local self = Tools.Decorate;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Decorate.Listeners.Unequipped = function ()

&#9;local self = Tools.Decorate;

&#9;-- Stop the GUI updater
&#9;if self.Updater then
&#9;&#9;self.Updater();
&#9;&#9;self.Updater = nil;
&#9;end;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Decorate.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;-- If there are items, display the regular interface
&#9;if #Selection.Items &gt; 0 then
&#9;&#9;local smoke = self:getSmoke();
&#9;&#9;local fire = self:getFire();
&#9;&#9;local sparkles = self:getSparkles();

&#9;&#9;-- Get the properties of the decorations
&#9;&#9;local smoke_color_r, smoke_color_g, smoke_color_b, smoke_opacity, smoke_velocity, smoke_size;
&#9;&#9;local fire_color_r, fire_color_g, fire_color_b, fire_2nd_color_r, fire_2nd_color_g, fire_2nd_color_b, fire_heat, fire_size;
&#9;&#9;local sparkles_color_r, sparkles_color_g, sparkles_color_b;

&#9;&#9;for smoke_index, Smoke in pairs( smoke ) do
&#9;&#9;&#9;-- Set the initial values for later comparison
&#9;&#9;&#9;if smoke_index == 1 then
&#9;&#9;&#9;&#9;smoke_color_r, smoke_color_g, smoke_color_b = Smoke.Color.r, Smoke.Color.g, Smoke.Color.b;
&#9;&#9;&#9;&#9;smoke_opacity = Smoke.Opacity;
&#9;&#9;&#9;&#9;smoke_velocity = Smoke.RiseVelocity;
&#9;&#9;&#9;&#9;smoke_size = Smoke.Size;
&#9;&#9;&#9;-- Set the values to `nil` if they vary across the selection
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if smoke_color_r ~= Smoke.Color.r then
&#9;&#9;&#9;&#9;&#9;smoke_color_r = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if smoke_color_g ~= Smoke.Color.g then
&#9;&#9;&#9;&#9;&#9;smoke_color_g = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if smoke_color_b ~= Smoke.Color.b then
&#9;&#9;&#9;&#9;&#9;smoke_color_b = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if smoke_opacity ~= Smoke.Opacity then
&#9;&#9;&#9;&#9;&#9;smoke_opacity = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if smoke_velocity ~= Smoke.RiseVelocity then
&#9;&#9;&#9;&#9;&#9;smoke_velocity = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if smoke_size ~= Smoke.Size then
&#9;&#9;&#9;&#9;&#9;smoke_size = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;for fire_index, Fire in pairs( fire ) do
&#9;&#9;&#9;if fire_index == 1 then
&#9;&#9;&#9;&#9;fire_color_r, fire_color_g, fire_color_b = Fire.Color.r, Fire.Color.g, Fire.Color.b;
&#9;&#9;&#9;&#9;fire_2nd_color_r, fire_2nd_color_g, fire_2nd_color_b = Fire.SecondaryColor.r, Fire.SecondaryColor.g, Fire.SecondaryColor.b;
&#9;&#9;&#9;&#9;fire_heat = Fire.Heat;
&#9;&#9;&#9;&#9;fire_size = Fire.Size;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if fire_color_r ~= Fire.Color.r then
&#9;&#9;&#9;&#9;&#9;fire_color_r = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if fire_color_g ~= Fire.Color.g then
&#9;&#9;&#9;&#9;&#9;fire_color_g = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if fire_color_b ~= Fire.Color.b then
&#9;&#9;&#9;&#9;&#9;fire_color_b = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if fire_2nd_color_r ~= Fire.SecondaryColor.r then
&#9;&#9;&#9;&#9;&#9;fire_2nd_color_r = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if fire_2nd_color_g ~= Fire.SecondaryColor.g then
&#9;&#9;&#9;&#9;&#9;fire_2nd_color_g = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if fire_2nd_color_b ~= Fire.SecondaryColor.b then
&#9;&#9;&#9;&#9;&#9;fire_2nd_color_b = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if fire_heat ~= Fire.Heat then
&#9;&#9;&#9;&#9;&#9;fire_heat = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if fire_size ~= Fire.Size then
&#9;&#9;&#9;&#9;&#9;fire_size = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;for sparkles_index, Sparkles in pairs( sparkles ) do
&#9;&#9;&#9;if sparkles_index == 1 then
&#9;&#9;&#9;&#9;sparkles_color_r, sparkles_color_g, sparkles_color_b = Sparkles.SparkleColor.r, Sparkles.SparkleColor.g, Sparkles.SparkleColor.b;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if sparkles_color_r ~= Sparkles.SparkleColor.r then
&#9;&#9;&#9;&#9;&#9;sparkles_color_r = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sparkles_color_g ~= Sparkles.SparkleColor.g then
&#9;&#9;&#9;&#9;&#9;sparkles_color_g = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sparkles_color_b ~= Sparkles.SparkleColor.b then
&#9;&#9;&#9;&#9;&#9;sparkles_color_b = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;self.State.smoke_color = ( smoke_color_r and smoke_color_g and smoke_color_b ) and Color3.new( smoke_color_r, smoke_color_g, smoke_color_b ) or nil;
&#9;&#9;self.State.fire_color = ( fire_color_r and fire_color_g and fire_color_b ) and Color3.new( fire_color_r, fire_color_g, fire_color_b ) or nil;
&#9;&#9;self.State.fire_2nd_color = ( fire_2nd_color_r and fire_2nd_color_g and fire_2nd_color_b ) and Color3.new( fire_2nd_color_r, fire_2nd_color_g, fire_2nd_color_b ) or nil;
&#9;&#9;self.State.sparkles_color = ( sparkles_color_r and sparkles_color_g and sparkles_color_b ) and Color3.new( sparkles_color_r, sparkles_color_g, sparkles_color_b ) or nil;

&#9;&#9;-- Update the smoke GUI data
&#9;&#9;if not self.State.smoke_color_r_focused then
&#9;&#9;&#9;self.GUI.Smoke.Options.ColorOption.RInput.TextBox.Text = smoke_color_r and _round( smoke_color_r * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.smoke_color_g_focused then
&#9;&#9;&#9;self.GUI.Smoke.Options.ColorOption.GInput.TextBox.Text = smoke_color_g and _round( smoke_color_g * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.smoke_color_b_focused then
&#9;&#9;&#9;self.GUI.Smoke.Options.ColorOption.BInput.TextBox.Text = smoke_color_b and _round( smoke_color_b * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.smoke_opacity_focused then
&#9;&#9;&#9;self.GUI.Smoke.Options.OpacityOption.Input.TextBox.Text = smoke_opacity and _round( smoke_opacity, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.smoke_velocity_focused then
&#9;&#9;&#9;self.GUI.Smoke.Options.VelocityOption.Input.TextBox.Text = smoke_velocity and _round( smoke_velocity, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.smoke_size_focused then
&#9;&#9;&#9;self.GUI.Smoke.Options.SizeOption.Input.TextBox.Text = smoke_size and _round( smoke_size, 2 ) or &apos;*&apos;;
&#9;&#9;end;

&#9;&#9;-- Update the fire GUI data
&#9;&#9;if not self.State.fire_color_r_focused then
&#9;&#9;&#9;self.GUI.Fire.Options.ColorOption.RInput.TextBox.Text = fire_color_r and _round( fire_color_r * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.fire_color_g_focused then
&#9;&#9;&#9;self.GUI.Fire.Options.ColorOption.GInput.TextBox.Text = fire_color_g and _round( fire_color_g * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.fire_color_b_focused then
&#9;&#9;&#9;self.GUI.Fire.Options.ColorOption.BInput.TextBox.Text = fire_color_b and _round( fire_color_b * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.fire_2nd_color_r_focused then
&#9;&#9;&#9;self.GUI.Fire.Options.SecondColorOption.RInput.TextBox.Text = fire_2nd_color_r and _round( fire_2nd_color_r * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.fire_2nd_color_g_focused then
&#9;&#9;&#9;self.GUI.Fire.Options.SecondColorOption.GInput.TextBox.Text = fire_2nd_color_g and _round( fire_2nd_color_g * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.fire_2nd_color_b_focused then
&#9;&#9;&#9;self.GUI.Fire.Options.SecondColorOption.BInput.TextBox.Text = fire_2nd_color_b and _round( fire_2nd_color_b * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.fire_heat_focused then
&#9;&#9;&#9;self.GUI.Fire.Options.HeatOption.Input.TextBox.Text = fire_heat and _round( fire_heat, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.fire_size_focused then
&#9;&#9;&#9;self.GUI.Fire.Options.SizeOption.Input.TextBox.Text = fire_size and _round( fire_size, 2 ) or &apos;*&apos;;
&#9;&#9;end;

&#9;&#9;-- Update the sparkles GUI data
&#9;&#9;if not self.State.sparkles_color_r_focused then
&#9;&#9;&#9;self.GUI.Sparkles.Options.ColorOption.RInput.TextBox.Text = sparkles_color_r and _round( sparkles_color_r * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.sparkles_color_g_focused then
&#9;&#9;&#9;self.GUI.Sparkles.Options.ColorOption.GInput.TextBox.Text = sparkles_color_g and _round( sparkles_color_g * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.sparkles_color_b_focused then
&#9;&#9;&#9;self.GUI.Sparkles.Options.ColorOption.BInput.TextBox.Text = sparkles_color_b and _round( sparkles_color_b * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;

&#9;&#9;if self.GUI.SelectNote.Visible then
&#9;&#9;&#9;self:closeSmoke();
&#9;&#9;&#9;self:closeFire();
&#9;&#9;&#9;self:closeSparkles();
&#9;&#9;end;
&#9;&#9;self.GUI.Smoke.Visible = true;
&#9;&#9;self.GUI.Fire.Visible = true;
&#9;&#9;self.GUI.Sparkles.Visible = true;
&#9;&#9;self.GUI.SelectNote.Visible = false;

&#9;&#9;if not self.State.smoke_open and not self.State.fire_open and not self.State.sparkles_open then
&#9;&#9;&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 125 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;&#9;end;

&#9;&#9;-- If there is no smoke
&#9;&#9;if #smoke == 0 then
&#9;&#9;&#9;self.GUI.Smoke.Options.Size = UDim2.new( 1, -3, 0, 0 );
&#9;&#9;&#9;self.GUI.Smoke.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.Smoke.RemoveButton.Visible = false;
&#9;&#9;&#9;if self.State.smoke_open then
&#9;&#9;&#9;&#9;self:closeSmoke();
&#9;&#9;&#9;end;

&#9;&#9;-- If only some items have smoke
&#9;&#9;elseif #smoke ~= #Selection.Items then
&#9;&#9;&#9;self.GUI.Smoke.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.Smoke.RemoveButton.Position = UDim2.new( 0, 90, 0, 3 );
&#9;&#9;&#9;self.GUI.Smoke.RemoveButton.Visible = true;

&#9;&#9;-- If all items have smoke
&#9;&#9;elseif #smoke == #Selection.Items then
&#9;&#9;&#9;self.GUI.Smoke.AddButton.Visible = false;
&#9;&#9;&#9;self.GUI.Smoke.RemoveButton.Position = UDim2.new( 0, 127, 0, 3 );
&#9;&#9;&#9;self.GUI.Smoke.RemoveButton.Visible = true;
&#9;&#9;&#9;if self.GUI.Smoke.Size == UDim2.new( 0, 200, 0, 52 ) then
&#9;&#9;&#9;&#9;self.GUI.Smoke.Size = UDim2.new( 0, 200, 0, 125 );
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- If there is no fire
&#9;&#9;if #fire == 0 then
&#9;&#9;&#9;self.GUI.Fire.Options.Size = UDim2.new( 1, -3, 0, 0 );
&#9;&#9;&#9;self.GUI.Fire.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.Fire.RemoveButton.Visible = false;
&#9;&#9;&#9;if self.State.fire_open then
&#9;&#9;&#9;&#9;self:closeFire();
&#9;&#9;&#9;end;

&#9;&#9;-- If only some items have fire
&#9;&#9;elseif #fire ~= #Selection.Items then
&#9;&#9;&#9;self.GUI.Fire.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.Fire.RemoveButton.Position = UDim2.new( 0, 90, 0, 3 );
&#9;&#9;&#9;self.GUI.Fire.RemoveButton.Visible = true;

&#9;&#9;-- If all items have fire
&#9;&#9;elseif #fire == #Selection.Items then
&#9;&#9;&#9;self.GUI.Fire.AddButton.Visible = false;
&#9;&#9;&#9;self.GUI.Fire.RemoveButton.Position = UDim2.new( 0, 127, 0, 3 );
&#9;&#9;&#9;self.GUI.Fire.RemoveButton.Visible = true;
&#9;&#9;end;

&#9;&#9;-- If there are no sparkles
&#9;&#9;if #sparkles == 0 then
&#9;&#9;&#9;self.GUI.Sparkles.Options.Size = UDim2.new( 1, -3, 0, 0 );
&#9;&#9;&#9;self.GUI.Sparkles.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.Sparkles.RemoveButton.Visible = false;
&#9;&#9;&#9;if self.State.sparkles_open then
&#9;&#9;&#9;&#9;self:closeSparkles();
&#9;&#9;&#9;end;

&#9;&#9;-- If only some items have sparkles
&#9;&#9;elseif #sparkles ~= #Selection.Items then
&#9;&#9;&#9;self.GUI.Sparkles.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.Sparkles.RemoveButton.Position = UDim2.new( 0, 90, 0, 3 );
&#9;&#9;&#9;self.GUI.Sparkles.RemoveButton.Visible = true;

&#9;&#9;-- If all items have sparkles
&#9;&#9;elseif #sparkles == #Selection.Items then
&#9;&#9;&#9;self.GUI.Sparkles.AddButton.Visible = false;
&#9;&#9;&#9;self.GUI.Sparkles.RemoveButton.Position = UDim2.new( 0, 127, 0, 3 );
&#9;&#9;&#9;self.GUI.Sparkles.RemoveButton.Visible = true;
&#9;&#9;end;

&#9;-- If nothing is selected, show the select something note
&#9;else
&#9;&#9;self.GUI.Smoke.Visible = false;
&#9;&#9;self.GUI.Fire.Visible = false;
&#9;&#9;self.GUI.Sparkles.Visible = false;
&#9;&#9;self.GUI.SelectNote.Visible = true;
&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 52 );
&#9;end;

end;

Tools.Decorate.openSmoke = function ( self )
&#9;self.State.smoke_open = true;
&#9;self:closeFire();
&#9;self:closeSparkles();
&#9;self.GUI.Smoke.Options:TweenSize( UDim2.new( 1, -3, 0, 110 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI.Smoke:TweenPosition( UDim2.new( 0, 10, 0, 30 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 235 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
end;

Tools.Decorate.openFire = function ( self )
&#9;self.State.fire_open = true;
&#9;self:closeSmoke();
&#9;self:closeSparkles();
&#9;self.GUI.Fire.Options:TweenSize( UDim2.new( 1, -3, 0, 110 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI.Fire:TweenPosition( UDim2.new( 0, 10, 0, 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 235 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
end;

Tools.Decorate.openSparkles = function ( self )
&#9;self.State.sparkles_open = true;
&#9;self:closeSmoke();
&#9;self:closeFire();
&#9;self.GUI.Sparkles.Options:TweenSize( UDim2.new( 1, -3, 0, 40 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI.Sparkles:TweenPosition( UDim2.new( 0, 10, 0, 90 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 160 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
end;

Tools.Decorate.closeSmoke = function ( self )
&#9;self.State.smoke_open = false;
&#9;self.GUI.Smoke.Options:TweenSize( UDim2.new( 1, -3, 0, 0 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI.Fire:TweenPosition( UDim2.new( 0, 10, 0, 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;if not self.State.fire_open then
&#9;&#9;self.GUI.Sparkles:TweenPosition( UDim2.new( 0, 10, 0, 90 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;end;
&#9;if not self.State.fire_open and not self.State.sparkles_open then
&#9;&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 125 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;end;
end;

Tools.Decorate.closeFire = function ( self )
&#9;self.State.fire_open = false;
&#9;if self.State.smoke_open then
&#9;&#9;self.GUI.Fire:TweenPosition( UDim2.new( 0, 10, 0, 170 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;else
&#9;&#9;self.GUI.Fire:TweenPosition( UDim2.new( 0, 10, 0, 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;end;
&#9;self.GUI.Fire.Options:TweenSize( UDim2.new( 1, -3, 0, 0 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;if not self.State.smoke_open then
&#9;&#9;self.GUI.Sparkles:TweenPosition( UDim2.new( 0, 10, 0, 90 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;end;
&#9;if not self.State.smoke_open and not self.State.sparkles_open then
&#9;&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 125 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;end;
end;

Tools.Decorate.closeSparkles = function ( self )
&#9;self.State.sparkles_open = false;
&#9;if self.State.smoke_open or self.State.fire_open then
&#9;&#9;self.GUI.Sparkles:TweenPosition( UDim2.new( 0, 10, 0, 200 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;else
&#9;&#9;self.GUI.Sparkles:TweenPosition( UDim2.new( 0, 10, 0, 90 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;end;
&#9;self.GUI.Sparkles.Options:TweenSize( UDim2.new( 1, -3, 0, 0 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;if not self.State.smoke_open and not self.State.fire_open then
&#9;&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 125 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;end;
end;

Tools.Decorate.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then
&#9;&#9;local Container = Tool.Interfaces.BTDecorateToolGUI:Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;Container.Smoke.ArrowButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;if not self.State.smoke_open and #self:getSmoke() &gt; 0 then
&#9;&#9;&#9;&#9;self:openSmoke();
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:closeSmoke();
&#9;&#9;&#9;end;
&#9;&#9;end );
&#9;&#9;Container.Fire.ArrowButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;if not self.State.fire_open and #self:getFire() &gt; 0 then
&#9;&#9;&#9;&#9;self:openFire();
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:closeFire();
&#9;&#9;&#9;end;
&#9;&#9;end );
&#9;&#9;Container.Sparkles.ArrowButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;if not self.State.sparkles_open and #self:getSparkles() &gt; 0 then
&#9;&#9;&#9;&#9;self:openSparkles();
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:closeSparkles();
&#9;&#9;&#9;end;
&#9;&#9;end );

&#9;&#9;Container.Smoke.AddButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:addSmoke();
&#9;&#9;&#9;self:openSmoke();
&#9;&#9;end );
&#9;&#9;Container.Fire.AddButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:addFire();
&#9;&#9;&#9;self:openFire();
&#9;&#9;end );
&#9;&#9;Container.Sparkles.AddButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:addSparkles();
&#9;&#9;&#9;self:openSparkles();
&#9;&#9;end );
&#9;&#9;Container.Smoke.RemoveButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:removeSmoke()
&#9;&#9;&#9;self:closeSmoke();
&#9;&#9;end );
&#9;&#9;Container.Fire.RemoveButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:removeFire();
&#9;&#9;&#9;self:closeFire();
&#9;&#9;end );
&#9;&#9;Container.Sparkles.RemoveButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:removeSparkles();
&#9;&#9;&#9;self:closeSparkles();
&#9;&#9;end );

&#9;&#9;-- Add functionality to smoke inputs
&#9;&#9;local SmokeUI = Container.Smoke;

&#9;&#9;local SmokeColor = SmokeUI.Options.ColorOption;
&#9;&#9;SmokeColor.RInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.smoke_color_r_focused = true;
&#9;&#9;&#9;SmokeColor.RInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SmokeColor.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SmokeColor.RInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeSmokeColor( &apos;r&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.smoke_color_r_focused = false;
&#9;&#9;end );
&#9;&#9;SmokeColor.GInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.smoke_color_g_focused = true;
&#9;&#9;&#9;SmokeColor.GInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SmokeColor.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SmokeColor.GInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeSmokeColor( &apos;g&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.smoke_color_g_focused = false;
&#9;&#9;end );
&#9;&#9;SmokeColor.BInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.smoke_color_b_focused = true;
&#9;&#9;&#9;SmokeColor.BInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SmokeColor.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SmokeColor.BInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeSmokeColor( &apos;b&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.smoke_color_b_focused = false;
&#9;&#9;end );

&#9;&#9;SmokeColor.HSVPicker.MouseButton1Up:connect( function ()
&#9;&#9;&#9;ColorPicker:start( function ( ... )
&#9;&#9;&#9;&#9;local args = { ... };
&#9;&#9;&#9;&#9;-- If a color was picked, change the smoke&apos;s color
&#9;&#9;&#9;&#9;-- to the selected color
&#9;&#9;&#9;&#9;if #args == 3 then
&#9;&#9;&#9;&#9;&#9;self:changeSmokeColor( _HSVToRGB( ... ) );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end, self.State.smoke_color );
&#9;&#9;end );

&#9;&#9;local SmokeOpacity = SmokeUI.Options.OpacityOption.Input;
&#9;&#9;SmokeOpacity.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.smoke_opacity_focused = true;
&#9;&#9;&#9;SmokeOpacity.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SmokeOpacity.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SmokeOpacity.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 1 then
&#9;&#9;&#9;&#9;&#9;potential_new = 1;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeSmokeOpacity( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.smoke_opacity_focused = false;
&#9;&#9;end );

&#9;&#9;local SmokeVelocity = SmokeUI.Options.VelocityOption.Input;
&#9;&#9;SmokeVelocity.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.smoke_velocity_focused = true;
&#9;&#9;&#9;SmokeVelocity.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SmokeVelocity.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SmokeVelocity.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 25 then
&#9;&#9;&#9;&#9;&#9;potential_new = 25;
&#9;&#9;&#9;&#9;elseif potential_new &lt; -25 then
&#9;&#9;&#9;&#9;&#9;potential_new = -25;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeSmokeVelocity( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.smoke_velocity_focused = false;
&#9;&#9;end );

&#9;&#9;local SmokeSize = SmokeUI.Options.SizeOption.Input;
&#9;&#9;SmokeSize.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.smoke_size_focused = true;
&#9;&#9;&#9;SmokeSize.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SmokeSize.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SmokeSize.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 100 then
&#9;&#9;&#9;&#9;&#9;potential_new = 100;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0.1 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0.1;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeSmokeSize( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.smoke_size_focused = false;
&#9;&#9;end );

&#9;&#9;-- Add functionality to fire inputs
&#9;&#9;local FireUI = Container.Fire;

&#9;&#9;local FireColor = FireUI.Options.ColorOption;
&#9;&#9;FireColor.RInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.fire_color_r_focused = true;
&#9;&#9;&#9;FireColor.RInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;FireColor.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( FireColor.RInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeFireColor( &apos;r&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.fire_color_r_focused = false;
&#9;&#9;end );
&#9;&#9;FireColor.GInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.fire_color_g_focused = true;
&#9;&#9;&#9;FireColor.GInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;FireColor.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( FireColor.GInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeFireColor( &apos;g&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.fire_color_g_focused = false;
&#9;&#9;end );
&#9;&#9;FireColor.BInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.fire_color_b_focused = true;
&#9;&#9;&#9;FireColor.BInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;FireColor.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( FireColor.BInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeFireColor( &apos;b&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.fire_color_b_focused = false;
&#9;&#9;end );
&#9;&#9;FireColor.HSVPicker.MouseButton1Up:connect( function ()
&#9;&#9;&#9;ColorPicker:start( function ( ... )
&#9;&#9;&#9;&#9;local args = { ... };
&#9;&#9;&#9;&#9;-- If a color was picked, change the fire&apos;s color
&#9;&#9;&#9;&#9;-- to the selected color
&#9;&#9;&#9;&#9;if #args == 3 then
&#9;&#9;&#9;&#9;&#9;self:changeFireColor( _HSVToRGB( ... ) );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end, self.State.fire_color );
&#9;&#9;end );

&#9;&#9;local FireColor2 = FireUI.Options.SecondColorOption;
&#9;&#9;FireColor2.RInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.fire_2nd_color_r_focused = true;
&#9;&#9;&#9;FireColor2.RInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;FireColor2.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( FireColor2.RInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeFireColor2( &apos;r&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.fire_2nd_color_r_focused = false;
&#9;&#9;end );
&#9;&#9;FireColor2.GInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.fire_2nd_color_g_focused = true;
&#9;&#9;&#9;FireColor2.GInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;FireColor2.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( FireColor2.GInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeFireColor2( &apos;g&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.fire_2nd_color_g_focused = false;
&#9;&#9;end );
&#9;&#9;FireColor2.BInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.fire_2nd_color_b_focused = true;
&#9;&#9;&#9;FireColor2.BInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;FireColor2.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( FireColor2.BInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeFireColor2( &apos;b&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.fire_2nd_color_b_focused = false;
&#9;&#9;end );
&#9;&#9;FireColor2.HSVPicker.MouseButton1Up:connect( function ()
&#9;&#9;&#9;ColorPicker:start( function ( ... )
&#9;&#9;&#9;&#9;local args = { ... };
&#9;&#9;&#9;&#9;-- If a color was picked, change the fire&apos;s secondary color
&#9;&#9;&#9;&#9;-- to the selected color
&#9;&#9;&#9;&#9;if #args == 3 then
&#9;&#9;&#9;&#9;&#9;self:changeFireColor2( _HSVToRGB( ... ) );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end, self.State.fire_2nd_color );
&#9;&#9;end );

&#9;&#9;local FireHeat = FireUI.Options.HeatOption.Input;
&#9;&#9;FireHeat.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.fire_heat_focused = true;
&#9;&#9;&#9;FireHeat.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;FireHeat.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( FireHeat.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 25 then
&#9;&#9;&#9;&#9;&#9;potential_new = 25;
&#9;&#9;&#9;&#9;elseif potential_new &lt; -25 then
&#9;&#9;&#9;&#9;&#9;potential_new = -25;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeFireHeat( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.fire_heat_focused = false;
&#9;&#9;end );

&#9;&#9;local FireSize = FireUI.Options.SizeOption.Input;
&#9;&#9;FireSize.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.fire_size_focused = true;
&#9;&#9;&#9;FireSize.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;FireSize.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( FireSize.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 30 then
&#9;&#9;&#9;&#9;&#9;potential_new = 30;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 2 then
&#9;&#9;&#9;&#9;&#9;potential_new = 2;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeFireSize( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.fire_size_focused = false;
&#9;&#9;end );

&#9;&#9;-- Add functionality to sparkles inputs
&#9;&#9;local SparklesUI = Container.Sparkles;

&#9;&#9;local SparklesColor = SparklesUI.Options.ColorOption;
&#9;&#9;SparklesColor.RInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sparkles_color_r_focused = true;
&#9;&#9;&#9;SparklesColor.RInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SparklesColor.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SparklesColor.RInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeSparklesColor( &apos;r&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sparkles_color_r_focused = false;
&#9;&#9;end );
&#9;&#9;SparklesColor.GInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sparkles_color_g_focused = true;
&#9;&#9;&#9;SparklesColor.GInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SparklesColor.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SparklesColor.GInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeSparklesColor( &apos;g&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sparkles_color_g_focused = false;
&#9;&#9;end );
&#9;&#9;SparklesColor.BInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sparkles_color_b_focused = true;
&#9;&#9;&#9;SparklesColor.BInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SparklesColor.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SparklesColor.BInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeSparklesColor( &apos;b&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sparkles_color_b_focused = false;
&#9;&#9;end );
&#9;&#9;SparklesColor.HSVPicker.MouseButton1Up:connect( function ()
&#9;&#9;&#9;ColorPicker:start( function ( ... )
&#9;&#9;&#9;&#9;local args = { ... };
&#9;&#9;&#9;&#9;-- If a color was picked, change the sparkles&apos; color
&#9;&#9;&#9;&#9;-- to the selected color
&#9;&#9;&#9;&#9;if #args == 3 then
&#9;&#9;&#9;&#9;&#9;self:changeSparklesColor( _HSVToRGB( ... ) );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end, self.State.sparkles_color );
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Decorate.changeSmokeOpacity = function ( self, new_opacity )

&#9;local smoke = self:getSmoke();

&#9;self:startHistoryRecord( smoke );
&#9;for _, Smoke in pairs( smoke ) do
&#9;&#9;Smoke.Opacity = new_opacity;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Decorate.changeSmokeVelocity = function ( self, new_velocity )

&#9;local smoke = self:getSmoke();

&#9;self:startHistoryRecord( smoke );
&#9;for _, Smoke in pairs( smoke ) do
&#9;&#9;Smoke.RiseVelocity = new_velocity;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Decorate.changeSmokeSize = function ( self, new_size )

&#9;local smoke = self:getSmoke();

&#9;self:startHistoryRecord( smoke );
&#9;for _, Smoke in pairs( smoke ) do
&#9;&#9;Smoke.Size = new_size;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Decorate.changeFireHeat = function ( self, new_velocity )

&#9;local fire = self:getFire();

&#9;self:startHistoryRecord( fire );
&#9;for _, Fire in pairs( fire ) do
&#9;&#9;Fire.Heat = new_velocity;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Decorate.changeFireSize = function ( self, new_size )

&#9;local fire = self:getFire();

&#9;self:startHistoryRecord( fire );
&#9;for _, Fire in pairs( fire ) do
&#9;&#9;Fire.Size = new_size;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Decorate.getSmoke = function ( self )
&#9;-- Returns a list of all the relevant smoke in the selection items

&#9;local smoke = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Smoke = _getChildOfClass( Item, &apos;Smoke&apos; );
&#9;&#9;if Smoke then
&#9;&#9;&#9;table.insert( smoke, Smoke );
&#9;&#9;end;
&#9;end;

&#9;return smoke;

end;

Tools.Decorate.getFire = function ( self )
&#9;-- Returns a list of all the relevant fire in the selection items

&#9;local fire = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Fire = _getChildOfClass( Item, &apos;Fire&apos; );
&#9;&#9;if Fire then
&#9;&#9;&#9;table.insert( fire, Fire );
&#9;&#9;end;
&#9;end;

&#9;return fire;

end;

Tools.Decorate.getSparkles = function ( self )
&#9;-- Returns a list of all the relevant sparkles in the selection items

&#9;local sparkles = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Sparkles = _getChildOfClass( Item, &apos;Sparkles&apos; );
&#9;&#9;if Sparkles then
&#9;&#9;&#9;table.insert( sparkles, Sparkles );
&#9;&#9;end;
&#9;end;

&#9;return sparkles;

end;

Tools.Decorate.changeSmokeColor = function ( self, ... )

&#9;local args = { ... };
&#9;local targets = self:getSmoke();

&#9;self:startHistoryRecord( targets );

&#9;-- If only one component is being changed at a time
&#9;if #args == 2 then
&#9;&#9;local component = args[1];
&#9;&#9;local component_value = args[2];

&#9;&#9;for _, Smoke in pairs( targets ) do
&#9;&#9;&#9;Smoke.Color = Color3.new(
&#9;&#9;&#9;&#9;component == &apos;r&apos; and component_value or Smoke.Color.r,
&#9;&#9;&#9;&#9;component == &apos;g&apos; and component_value or Smoke.Color.g,
&#9;&#9;&#9;&#9;component == &apos;b&apos; and component_value or Smoke.Color.b
&#9;&#9;&#9;);
&#9;&#9;end;

&#9;-- If all 3 components of the color are being changed
&#9;elseif #args == 3 then
&#9;&#9;local r, g, b = ...;

&#9;&#9;for _, Smoke in pairs( targets ) do
&#9;&#9;&#9;Smoke.Color = Color3.new( r, g, b );
&#9;&#9;end;
&#9;end;

&#9;self:finishHistoryRecord();
end;

Tools.Decorate.changeFireColor = function ( self, ... )

&#9;local args = { ... };
&#9;local targets = self:getFire();

&#9;self:startHistoryRecord( targets );

&#9;-- If only one component is being changed at a time
&#9;if #args == 2 then
&#9;&#9;local component = args[1];
&#9;&#9;local component_value = args[2];

&#9;&#9;for _, Fire in pairs( targets ) do
&#9;&#9;&#9;Fire.Color = Color3.new(
&#9;&#9;&#9;&#9;component == &apos;r&apos; and component_value or Fire.Color.r,
&#9;&#9;&#9;&#9;component == &apos;g&apos; and component_value or Fire.Color.g,
&#9;&#9;&#9;&#9;component == &apos;b&apos; and component_value or Fire.Color.b
&#9;&#9;&#9;);
&#9;&#9;end;

&#9;-- If all 3 components of the color are being changed
&#9;elseif #args == 3 then
&#9;&#9;local r, g, b = ...;

&#9;&#9;for _, Fire in pairs( targets ) do
&#9;&#9;&#9;Fire.Color = Color3.new( r, g, b );
&#9;&#9;end;
&#9;end;

&#9;self:finishHistoryRecord();
end;

Tools.Decorate.changeFireColor2 = function ( self, ... )

&#9;local args = { ... };
&#9;local targets = self:getFire();

&#9;self:startHistoryRecord( targets );

&#9;-- If only one component is being changed at a time
&#9;if #args == 2 then
&#9;&#9;local component = args[1];
&#9;&#9;local component_value = args[2];

&#9;&#9;for _, Fire in pairs( targets ) do
&#9;&#9;&#9;Fire.SecondaryColor = Color3.new(
&#9;&#9;&#9;&#9;component == &apos;r&apos; and component_value or Fire.Color.r,
&#9;&#9;&#9;&#9;component == &apos;g&apos; and component_value or Fire.Color.g,
&#9;&#9;&#9;&#9;component == &apos;b&apos; and component_value or Fire.Color.b
&#9;&#9;&#9;);
&#9;&#9;end;

&#9;-- If all 3 components of the color are being changed
&#9;elseif #args == 3 then
&#9;&#9;local r, g, b = ...;

&#9;&#9;for _, Fire in pairs( targets ) do
&#9;&#9;&#9;Fire.SecondaryColor = Color3.new( r, g, b );
&#9;&#9;end;
&#9;end;

&#9;self:finishHistoryRecord();
end;

Tools.Decorate.changeSparklesColor = function ( self, ... )

&#9;local args = { ... };
&#9;local targets = self:getSparkles();

&#9;self:startHistoryRecord( targets );

&#9;-- If only one component is being changed at a time
&#9;if #args == 2 then
&#9;&#9;local component = args[1];
&#9;&#9;local component_value = args[2];

&#9;&#9;for _, Sparkles in pairs( targets ) do
&#9;&#9;&#9;Sparkles.SparkleColor = Color3.new(
&#9;&#9;&#9;&#9;component == &apos;r&apos; and component_value or Sparkles.SparkleColor.r,
&#9;&#9;&#9;&#9;component == &apos;g&apos; and component_value or Sparkles.SparkleColor.g,
&#9;&#9;&#9;&#9;component == &apos;b&apos; and component_value or Sparkles.SparkleColor.b
&#9;&#9;&#9;);
&#9;&#9;end;

&#9;-- If all 3 components of the color are being changed
&#9;elseif #args == 3 then
&#9;&#9;local r, g, b = ...;

&#9;&#9;for _, Sparkles in pairs( targets ) do
&#9;&#9;&#9;Sparkles.SparkleColor = Color3.new( r, g, b );
&#9;&#9;end;
&#9;end;

&#9;self:finishHistoryRecord();
end;

Tools.Decorate.addSmoke = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Smoke in pairs( self.smoke ) do
&#9;&#9;&#9;&#9;Smoke.Parent = self.smoke_parents[Smoke];
&#9;&#9;&#9;&#9;Selection:add( Smoke.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Smoke in pairs( self.smoke ) do
&#9;&#9;&#9;&#9;Selection:add( Smoke.Parent );
&#9;&#9;&#9;&#9;Smoke.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Add smoke to all the items from the selection that
&#9;-- don&apos;t already have smoke
&#9;local smoke = {};
&#9;local smoke_parents = {};
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Smoke = _getChildOfClass( Item, &apos;Smoke&apos; );
&#9;&#9;if not Smoke then
&#9;&#9;&#9;local Smoke = RbxUtility.Create( &apos;Smoke&apos; ) {
&#9;&#9;&#9;&#9;Parent = Item;
&#9;&#9;&#9;};
&#9;&#9;&#9;table.insert( smoke, Smoke );
&#9;&#9;&#9;smoke_parents[Smoke] = Item;
&#9;&#9;end;
&#9;end;

&#9;HistoryRecord.smoke = smoke;
&#9;HistoryRecord.smoke_parents = smoke_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Decorate.removeSmoke = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Smoke in pairs( self.smoke ) do
&#9;&#9;&#9;&#9;Selection:add( Smoke.Parent );
&#9;&#9;&#9;&#9;Smoke.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Smoke in pairs( self.smoke ) do
&#9;&#9;&#9;&#9;Smoke.Parent = self.smoke_parents[Smoke];
&#9;&#9;&#9;&#9;Selection:add( Smoke.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;local smoke = self:getSmoke();
&#9;local smoke_parents = {};

&#9;-- Remove smoke from all the selected items
&#9;for _, Smoke in pairs( smoke ) do
&#9;&#9;smoke_parents[Smoke] = Smoke.Parent;
&#9;&#9;Smoke.Parent = nil;
&#9;end;

&#9;HistoryRecord.smoke = smoke;
&#9;HistoryRecord.smoke_parents = smoke_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Decorate.addFire = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Fire in pairs( self.fire ) do
&#9;&#9;&#9;&#9;Fire.Parent = self.fire_parents[Fire];
&#9;&#9;&#9;&#9;Selection:add( Fire.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Fire in pairs( self.fire ) do
&#9;&#9;&#9;&#9;Selection:add( Fire.Parent );
&#9;&#9;&#9;&#9;Fire.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Add fire to all the items from the selection that
&#9;-- don&apos;t already have fire
&#9;local fire = {};
&#9;local fire_parents = {};
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Fire = _getChildOfClass( Item, &apos;Fire&apos; );
&#9;&#9;if not Fire then
&#9;&#9;&#9;local Fire = RbxUtility.Create( &apos;Fire&apos; ) {
&#9;&#9;&#9;&#9;Parent = Item;
&#9;&#9;&#9;};
&#9;&#9;&#9;table.insert( fire, Fire );
&#9;&#9;&#9;fire_parents[Fire] = Item;
&#9;&#9;end;
&#9;end;

&#9;HistoryRecord.fire = fire;
&#9;HistoryRecord.fire_parents = fire_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Decorate.removeFire = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Fire in pairs( self.fire ) do
&#9;&#9;&#9;&#9;Selection:add( Fire.Parent );
&#9;&#9;&#9;&#9;Fire.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Fire in pairs( self.fire ) do
&#9;&#9;&#9;&#9;Fire.Parent = self.fire_parents[Fire];
&#9;&#9;&#9;&#9;Selection:add( Fire.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;local fire = self:getFire();
&#9;local fire_parents = {};

&#9;-- Remove fire from all the selected items
&#9;for _, Fire in pairs( fire ) do
&#9;&#9;fire_parents[Fire] = Fire.Parent;
&#9;&#9;Fire.Parent = nil;
&#9;end;

&#9;HistoryRecord.fire = fire;
&#9;HistoryRecord.fire_parents = fire_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Decorate.addSparkles = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Sparkles in pairs( self.sparkles ) do
&#9;&#9;&#9;&#9;Sparkles.Parent = self.sparkles_parents[Sparkles];
&#9;&#9;&#9;&#9;Selection:add( Sparkles.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Sparkles in pairs( self.sparkles ) do
&#9;&#9;&#9;&#9;Selection:add( Sparkles.Parent );
&#9;&#9;&#9;&#9;Sparkles.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Add sparkles to all the items from the selection that
&#9;-- don&apos;t already have sparkles
&#9;local sparkles = {};
&#9;local sparkles_parents = {};
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Sparkles = _getChildOfClass( Item, &apos;Sparkles&apos; );
&#9;&#9;if not Sparkles then
&#9;&#9;&#9;local Sparkles = RbxUtility.Create( &apos;Sparkles&apos; ) {
&#9;&#9;&#9;&#9;Parent = Item;
&#9;&#9;&#9;&#9;SparkleColor = Color3.new( 1, 0, 0 );
&#9;&#9;&#9;};
&#9;&#9;&#9;table.insert( sparkles, Sparkles );
&#9;&#9;&#9;sparkles_parents[Sparkles] = Item;
&#9;&#9;end;
&#9;end;

&#9;HistoryRecord.sparkles = sparkles;
&#9;HistoryRecord.sparkles_parents = sparkles_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Decorate.removeSparkles = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Sparkles in pairs( self.sparkles ) do
&#9;&#9;&#9;&#9;Selection:add( Sparkles.Parent );
&#9;&#9;&#9;&#9;Sparkles.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Sparkles in pairs( self.sparkles ) do
&#9;&#9;&#9;&#9;Sparkles.Parent = self.sparkles_parents[Sparkles];
&#9;&#9;&#9;&#9;Selection:add( Sparkles.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;local sparkles = self:getSparkles();
&#9;local sparkles_parents = {};

&#9;-- Remove fire from all the selected items
&#9;for _, Sparkles in pairs( sparkles ) do
&#9;&#9;sparkles_parents[Sparkles] = Sparkles.Parent;
&#9;&#9;Sparkles.Parent = nil;
&#9;end;

&#9;HistoryRecord.sparkles = sparkles;
&#9;HistoryRecord.sparkles_parents = sparkles_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Decorate.startHistoryRecord = function ( self, decorations )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( decorations );
&#9;&#9;initial_color = {};&#9;&#9;&#9;terminal_color = {};
&#9;&#9;initial_2nd_color = {};&#9;&#9;terminal_2nd_color = {};
&#9;&#9;initial_opacity = {};&#9;&#9;terminal_opacity = {};
&#9;&#9;initial_velocity = {};&#9;&#9;terminal_velocity = {};
&#9;&#9;initial_size = {};&#9;&#9;&#9;terminal_size = {};
&#9;&#9;initial_heat = {};&#9;&#9;&#9;terminal_heat = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &apos;Sparkles&apos; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.SparkleColor = self.initial_color[Target];
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Target.Color = self.initial_color[Target];
&#9;&#9;&#9;&#9;&#9;&#9;Target.Size = self.initial_size[Target];
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &apos;Smoke&apos; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.Opacity = self.initial_opacity[Target];
&#9;&#9;&#9;&#9;&#9;&#9;Target.RiseVelocity = self.initial_velocity[Target];
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &apos;Fire&apos; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.SecondaryColor = self.initial_2nd_color[Target];
&#9;&#9;&#9;&#9;&#9;&#9;Target.Heat = self.initial_heat[Target];
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &apos;Sparkles&apos; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.SparkleColor = self.terminal_color[Target];
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Target.Color = self.terminal_color[Target];
&#9;&#9;&#9;&#9;&#9;&#9;Target.Size = self.terminal_size[Target];
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &apos;Smoke&apos; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.Opacity = self.terminal_opacity[Target];
&#9;&#9;&#9;&#9;&#9;&#9;Target.RiseVelocity = self.terminal_velocity[Target];
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &apos;Fire&apos; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.SecondaryColor = self.terminal_2nd_color[Target];
&#9;&#9;&#9;&#9;&#9;&#9;Target.Heat = self.terminal_heat[Target];
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;if Item:IsA( &apos;Sparkles&apos; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_color[Item] = Item.SparkleColor;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_color[Item] = Item.Color;
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_size[Item] = Item.Size;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if Item:IsA( &apos;Smoke&apos; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_opacity[Item] = Item.Opacity;
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_velocity[Item] = Item.RiseVelocity;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if Item:IsA( &apos;Fire&apos; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_2nd_color[Item] = Item.SecondaryColor;
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_heat[Item] = Item.Heat;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

end;

Tools.Decorate.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;if Item:IsA( &apos;Sparkles&apos; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_color[Item] = Item.SparkleColor;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_color[Item] = Item.Color;
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_size[Item] = Item.Size;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if Item:IsA( &apos;Smoke&apos; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_opacity[Item] = Item.Opacity;
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_velocity[Item] = Item.RiseVelocity;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if Item:IsA( &apos;Fire&apos; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_2nd_color[Item] = Item.SecondaryColor;
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_heat[Item] = Item.Heat;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Decorate.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Decorate.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="RemoteFunction" referent="RBX16">
			<Properties>
				<string name="Name">GetAsync</string>
			</Properties>
			<Item class="Script" referent="RBX17">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Script</string>
					<ProtectedString name="Source">local HttpService = Game:GetService( &apos;HttpService&apos; );

-- Provide an interface that allows the client
-- to use HttpService&apos;s GetAsync
script.Parent.OnServerInvoke = function ( Player, ... )
&#9;return HttpService:GetAsync( ... );
end;</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="RemoteFunction" referent="RBX18">
			<Properties>
				<string name="Name">PostAsync</string>
			</Properties>
			<Item class="Script" referent="RBX19">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Script</string>
					<ProtectedString name="Source">local HttpService = Game:GetService( &apos;HttpService&apos; );

-- Provide an interface that allows the client
-- to use HttpService&apos;s PostAsync
script.Parent.OnServerInvoke = function ( Player, ... )
&#9;return HttpService:PostAsync( ... );
end;</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX20">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">gloo by Anaminus</string>
				<ProtectedString name="Source">local PROJECT_NAME = &quot;gloo&quot;

if _G[PROJECT_NAME] then return end

---- SETTINGS
local ENTRY_SIZE&#9;= 17&#9;-- default size of rows, scrollbars, etc
local WEAK_TABLES&#9;= false&#9;-- whether weak tables are enabled (causes problems under certain circumstances)
----/SETTINGS

local lib = {}
local doc = {}
local version = &quot;0.11&quot;

doc[&quot;Version&quot;] = [==[
Version ( ) [function]
&#9;returns: string `version`

Returns the current version of the library (currently ]==]..version..[==[).
]==]

function lib.Version()
&#9;return version
end

doc[&quot;NULL&quot;] = [==[
NULL [const]

Represents a &quot;non-nil nil value&quot;. Used with tables that need a way to declare an entry as nil while still being defined in the table.
]==]

local NULL = {}
lib.NULL = NULL

local SORT = {
&#9;NONE = 0;
&#9;ASCENDING = 1;
&#9;DESCENDING = 2;
}
lib.SORT = SORT

local WEAK_MODE = {
&#9;K = {__mode=&quot;k&quot;};
&#9;V = {__mode=&quot;v&quot;};
&#9;KV = {__mode=&quot;kv&quot;};
}

local function GetIndex(table,value)
&#9;for i,v in pairs(table) do
&#9;&#9;if v == value then
&#9;&#9;&#9;return i
&#9;&#9;end
&#9;end
end

local function ClampIndex(table,index)
&#9;local max = #table
&#9;index = math.floor(index)
&#9;return index &lt; 1 and 1 or index &gt; max and max or index
end

local function Create(ty)
&#9;return function(data)
&#9;&#9;local obj = Instance.new(ty)
&#9;&#9;for k, v in pairs(data) do
&#9;&#9;&#9;if type(k) == &apos;number&apos; then
&#9;&#9;&#9;&#9;v.Parent = obj
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;obj[k] = v
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;return obj
&#9;end
end

local function Modify(obj)
&#9;return function(data)
&#9;&#9;for k, v in pairs(data) do
&#9;&#9;&#9;if type(k) == &apos;number&apos; then
&#9;&#9;&#9;&#9;v.Parent = obj
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;obj[k] = v
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;return obj
&#9;end
end

--[[
local ENUM_MT = {
&#9;__tostring = function(e)
&#9;&#9;return &quot;enum: &quot;..e.__type
&#9;end;
}

local function CastToEnum(value,enum)
&#9;if value ~= &apos;__type&apos; then
&#9;&#9;for k,e in pairs(enum) do
&#9;&#9;&#9;if k == value then
&#9;&#9;&#9;&#9;return e
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;error(&apos;cannot cast `&apos;..tostring(value)..&apos;` to enum &apos;..enum.__type,3)
end
--]]

--[[DEPEND:]]

doc[&quot;SetZIndex&quot;] = [==[
SetZIndex ( Instance `object`, number `zindex` ) [function]
&#9;returns: (nothing)

Sets the ZIndex of `object`, then calls SetZIndex on every child of `object`.

Arguments:
&#9;`object`
&#9;&#9;The instance to set the ZIndex of.
&#9;`zindex`
&#9;&#9;The ZIndex to set the object to.
]==]

doc[&quot;SetZIndexOnChanged&quot;] = [==[
SetZIndexOnChanged ( Instance `object` )
&#9;returns: RBXScriptConnection `connection`

Sets an object to call SetZIndex whenever its ZIndex changes.

Arguments:
&#9;`object`
&#9;&#9;The instance to set.

Returns:
&#9;`connection`
&#9;&#9;The resulting event connection.
]==]

local ZIndexLock = {}
local function SetZIndex(object,z)
&#9;if not ZIndexLock[object] then
&#9;&#9;ZIndexLock[object] = true
&#9;&#9;object.ZIndex = z
&#9;&#9;for _,child in pairs(object:GetChildren()) do
&#9;&#9;&#9;SetZIndex(child,z)
&#9;&#9;end
&#9;&#9;ZIndexLock[object] = nil
&#9;end
end

local function SetZIndexOnChanged(object)
&#9;return object.Changed:connect(function(p)
&#9;&#9;if p == &quot;ZIndex&quot; then
&#9;&#9;&#9;SetZIndex(object,object.ZIndex)
&#9;&#9;end
&#9;end)
end

lib.SetZIndex = SetZIndex
lib.SetZIndexOnChanged = SetZIndexOnChanged

--[[DEPEND:]]

doc[&quot;GetScreen&quot;] = [==[
GetScreen ( Instance `object` ) [function]
&#9;returns ScreenGui `screen`

Gets the nearest ascending ScreenGui of `object`.
Returns `object` if it is a ScreenGui.
Returns nil if `object` isn&apos;t the descendant of a ScreenGui.

Arguments:
&#9;`object`
&#9;&#9;The instance to get the ascending ScreenGui from.

Returns:
&#9;`screen`
&#9;&#9;The ascending screen.
&#9;&#9;Will be nil if `object` isn&apos;t the descendant of a ScreenGui.
]==]

local function GetScreen(object)
&#9;local screen = object
&#9;while not screen:IsA(&quot;ScreenGui&quot;) do
&#9;&#9;screen = screen.Parent
&#9;&#9;if screen == nil then return nil end
&#9;end
&#9;return screen
end

lib.GetScreen = GetScreen

--[[DEPEND:]]

doc[&quot;GetPadding&quot;] = [==[
GetPadding ( GuiObject `object` ) [function]
&#9;returns: number `padding`

Gets the padding amount for a Frame or GuiButton that has its Style property set.

Arguments:
&#9;`object`
&#9;&#9;The Frame or GuiButton to get he padding from.

Returns:
&#9;`padding`
&#9;&#9;The padding amount of `object`
]==]

local function GetPadding(object)
&#9;local base_size = 0
&#9;local base_pad = 0
&#9;if object:IsA&quot;Frame&quot; then
&#9;&#9;if object.Style == Enum.FrameStyle.ChatBlue
&#9;&#9;or object.Style == Enum.FrameStyle.ChatGreen
&#9;&#9;or object.Style == Enum.FrameStyle.ChatRed then
&#9;&#9;&#9;base_size = 60
&#9;&#9;&#9;base_pad = 17
&#9;&#9;elseif object.Style == Enum.FrameStyle.RobloxSquare
&#9;&#9;or object.Style == Enum.FrameStyle.RobloxRound then
&#9;&#9;&#9;base_size = 21
&#9;&#9;&#9;base_pad = 8
&#9;&#9;else
&#9;&#9;&#9;return 0
&#9;&#9;end
&#9;elseif object:IsA&quot;GuiButton&quot; then
&#9;&#9;if object.Style == Enum.ButtonStyle.RobloxButtonDefault
&#9;&#9;or object.Style == Enum.ButtonStyle.RobloxButton then
&#9;&#9;&#9;base_size = 36
&#9;&#9;&#9;base_pad = 12
&#9;&#9;else
&#9;&#9;&#9;return 0
&#9;&#9;end
&#9;else
&#9;&#9;return 0
&#9;end
&#9;local size = math.min(object.AbsoluteSize.x,object.AbsoluteSize.y)
&#9;if size &lt; base_size then
&#9;&#9;return size/base_size*base_pad
&#9;else
&#9;&#9;return base_pad
&#9;end
end

lib.GetPadding = GetPadding

--[[DEPEND:]]

doc[&quot;Sprite&quot;] = [==[
Sprite ( Content `sprite_map`, GuiObject `sprite_frame`, Vector2, `sprite_size`, Vector2 `sprite_map_size`, bool `fix_blur` ) [constructor]
&#9;returns: Sprite `object`, GuiObject `sprite_frame`

Creates a sprite from a sprite map (an image that holds smaller &quot;sub-images&quot;).

Arguments:
&#9;`sprite_map`
&#9;&#9;The image to use as the sprite map.

&#9;`frame`
&#9;&#9;The object that will contain the sprite image.
&#9;&#9;Optional; defaults to a new Frame

&#9;`sprite_size`
&#9;&#9;The dimensions of one sprite on the sprite map.
&#9;&#9;Optional; defaults to [32, 32]

&#9;`sprite_map_size`
&#9;&#9;The dimensions of the sprite map.
&#9;&#9;Optional; defaults to [256, 256]

&#9;`fix_blur`
&#9;&#9;Indicates whether image blurriness should be fixed.
&#9;&#9;Blurriness occurs because GUIs are offset by half a pixel, causing images to render &quot;in-between&quot; pixels.
&#9;&#9;This can be fixed by using Scaled position to offset the image by 0.5 pixels.
&#9;&#9;Optional; defaults to true

Returns:
&#9;`object`
&#9;&#9;The Sprite object.

&#9;`sprite_frame`
&#9;&#9;The sprite GUI.


Sprite Class:
&#9;This class contains the following members:
&#9;Readonly:
&#9;&#9;GUI
&#9;&#9;&#9;The sprite GUI.

&#9;Methods:
&#9;&#9;SetOffset ( number `row`, number `column` )
&#9;&#9;&#9;Sets the offset of the sprite on the sprite map.
&#9;&#9;&#9;`row` and `column` represent the row and column on the sprite map, starting from 0.
&#9;&#9;&#9;For example, an offset of [0, 2] would select the third sprite in the first row.

&#9;&#9;GetOffset ( )
&#9;&#9;&#9;Returns the current offset of the sprite.

&#9;&#9;Destroy ( )
&#9;&#9;&#9;Releases the resources used by this object.
&#9;&#9;&#9;Run this if you&apos;re no longer using this object.
]==]

local function CreateSprite(sprite_map,SpriteFrame,sprite_size,map_size,fix_blur)
&#9;sprite_size = sprite_size or Vector2.new(32,32)
&#9;map_size = map_size or Vector2.new(256,256)
&#9;if fix_blur == nil then fix_blur = true end

&#9;if not SpriteFrame then
&#9;&#9;SpriteFrame = Create&apos;Frame&apos;{
&#9;&#9;&#9;Name = &quot;Sprite&quot;;
&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;}
&#9;end
&#9;SpriteFrame.ClipsDescendants = true;
&#9;local MapFrame = Create&apos;ImageLabel&apos;{
&#9;&#9;Name = &quot;SpriteMap&quot;;
&#9;&#9;Active = false;
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;Image = sprite_map;
&#9;&#9;Size = UDim2.new(map_size.x/sprite_size.x,0,map_size.y/sprite_size.y,0);
&#9;&#9;Parent = SpriteFrame;
&#9;};

&#9;local off_row,off_col = 0,0

&#9;local SetOffset = fix_blur
&#9;and function(row,col)
&#9;&#9;local size = SpriteFrame.AbsoluteSize
&#9;&#9;MapFrame.Position = UDim2.new(-col - 0.5/size.x,0,-row - 0.5/size.y,0)
&#9;&#9;off_row,off_col = row,col
&#9;end
&#9;or function(row,col)
&#9;&#9;MapFrame.Position = UDim2.new(-col,0,-row,0)
&#9;&#9;off_row,off_col = row,col
&#9;end;

&#9;if fix_blur then
&#9;&#9;SpriteFrame.Changed:connect(function(p)
&#9;&#9;&#9;if p == &quot;AbsoluteSize&quot; then
&#9;&#9;&#9;&#9;SetOffset(off_row,off_col)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end

&#9;local Class = {
&#9;&#9;GUI = SpriteFrame;
&#9;&#9;SetOffset = SetOffset;
&#9;&#9;GetOffset = function()
&#9;&#9;&#9;return off_row,off_col
&#9;&#9;end;
&#9;}

&#9;function Class.Destroy()
&#9;&#9;for k in pairs(Class) do
&#9;&#9;&#9;Class[k] = nil
&#9;&#9;end
&#9;&#9;SpriteFrame:Destroy()
&#9;end

&#9;return Class,SpriteFrame
end

lib.Sprite = CreateSprite

--[[DEPEND:]]

doc[&quot;Stylist&quot;] = [==[
Stylist ( table `style` ) [constructor]
&#9;returns: Stylist `object`, table `style`

Creates a new stylist, which manages the properties of an entire group of objects.

More stylists can also be added, refered to as &quot;substylists&quot;.

When a property of a stylist is updated, the properties in the stylist&apos;s objects are updated to reflect it.
The properties of objects in each substylist are also updated, but only if that property isn&apos;t defined in the substylist&apos;s Style.

Arguments:
&#9;`style`
&#9;&#9;A table of property/value pairs.
&#9;&#9;The stylist&apos;s &quot;Style&quot;.
&#9;&#9;Optional; defaults to an empty table.

Returns:
&#9;`object`
&#9;&#9;The Stylist object.

&#9;`style`
&#9;&#9;The style table.


Stylist Class:
&#9;Contains the following members:

&#9;Readonly:
&#9;&#9;Style
&#9;&#9;&#9;The `style` table.

&#9;Methods:
&#9;&#9;AddObject ( Instance `object`, table `alias_map` )
&#9;&#9;&#9;Adds `object` to the stylist and updates its properties.
&#9;&#9;&#9;If `alias_map` is specified, then for this object, properties in the style will first be mapped though this table (see Alias Maps).
&#9;&#9;&#9;Returns `object`

&#9;&#9;AddObjects ( table `objects`, table `alias_map` )
&#9;&#9;&#9;Adds multiple objects to the stylist.
&#9;&#9;&#9;`objects` is a list of objects to be added to the stylist.
&#9;&#9;&#9;If `alias_map` is specified, it will be applied to all objects in the list.
&#9;&#9;&#9;Returns `objects`

&#9;&#9;RemoveObject ( Instance `object` )
&#9;&#9;&#9;Removes `object` from the stylist.
&#9;&#9;&#9;Returns `object`

&#9;&#9;RemoveObjects ( table `objects` )
&#9;&#9;&#9;Removes multiple objects from the stylist.
&#9;&#9;&#9;`objects` is a list of objects to be removed from the stylist.
&#9;&#9;&#9;Returns `objects`

&#9;&#9;GetObjects ( )
&#9;&#9;&#9;Returns a list of objects added to this stylist.
&#9;&#9;&#9;Items in the list have no defined order.

&#9;&#9;ObjectIn ( Instance `object` )
&#9;&#9;&#9;If `object` is in the stylist, returns true.
&#9;&#9;&#9;If `object` has an alias in the stylist, returns the alias.
&#9;&#9;&#9;Otherwise, returns false.

&#9;&#9;SetProperty ( string `property`, * `value` )
&#9;&#9;&#9;Sets `property` in each object to `value`.
&#9;&#9;&#9;Also sets the value in the `style` table.

&#9;&#9;SetProperties ( table `properties` )
&#9;&#9;&#9;Similar to SetProperty, but sets multiple properties at once.
&#9;&#9;&#9;`properties` is a table of property/value pairs.
&#9;&#9;&#9;To set a property to nil, use ]==]..PROJECT_NAME..[==[.NULL as the value.

&#9;&#9;ClearProperties ( )
&#9;&#9;&#9;Clears all set properties in the style table.

&#9;&#9;Update ( )
&#9;&#9;&#9;Updates each object&apos;s properties to reflect values in the `style` table.

&#9;&#9;SetInternal ( string `property`, * `value` )
&#9;&#9;&#9;Sets the properties of the stylist&apos;s objects and substylists without modifying the stylist&apos;s Style.

&#9;&#9;Destroy ( )
&#9;&#9;&#9;Releases the resources used by this object.
&#9;&#9;&#9;Run this if you&apos;re no longer using this object.

&#9;&#9;AddStylist ( Stylist `stylist`, table `alias_map` )
&#9;&#9;&#9;Adds `stylist` to this stylist and updates its properties.
&#9;&#9;&#9;If `alias_map` is specified, then for this stylist, properties in the style will first be mapped though this table (see Alias Maps).
&#9;&#9;&#9;Adding two stylists to each other is not recommended.

&#9;&#9;RemoveStylist ( Stylist `stylist` )
&#9;&#9;&#9;Removes `stylist` for this stylist.

&#9;&#9;GetStylists ( )
&#9;&#9;&#9;Returns a list of stylists added to this stylist.
&#9;&#9;&#9;Items in the list have no defined order.

&#9;&#9;StylistIn ( Stylist `stylist` )
&#9;&#9;&#9;If `stylist` is in the stylist, returns true.
&#9;&#9;&#9;If `stylist` has an alias in the stylist, returns the alias.
&#9;&#9;&#9;Otherwise, returns false.


Alias Maps:
&#9;These let you set the property of an object as if it were another.
&#9;For example, if an alias map contains [&quot;TextColor3&quot;] = &quot;BackgroundColor3&quot;, then
&#9;the object will have its BackgroundColor3 property set using the TextColor3 value in the Style.
&#9;This implies that both properties have the same type, or at least be convertible.
]==]

local function CreateStylist(StyleTable)
&#9;StyleTable = StyleTable or {}
&#9;local ParentStylists = {}
&#9;local Class = {
&#9;&#9;Style = StyleTable;
&#9;&#9;ParentStylists = ParentStylists;
&#9;}

&#9;local ObjectLookup = WEAK_TABLES and setmetatable({},WEAK_MODE.K) or {}
&#9;local AliasObjectLookup = WEAK_TABLES and setmetatable({},WEAK_MODE.K) or {}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- ISSUE: objects are getting dropped when they obviously haven&apos;t been collected 
&#9;local StylistLookup = WEAK_TABLES and setmetatable({},WEAK_MODE.K) or {}
&#9;local AliasStylistLookup = WEAK_TABLES and setmetatable({},WEAK_MODE.K) or {}
&#9;
&#9;local function pset(t,k,v)
&#9;&#9;t[k] = v
&#9;end

&#9;local function set_object(object,property,value)
&#9;&#9;pcall(pset,object,property,value)
&#9;end

&#9;local function set_stylist(stylist,property,value)
&#9;&#9;if stylist.Style[property] == nil then
&#9;&#9;&#9;stylist.SetInternal(property,value)
&#9;&#9;end
&#9;end

&#9;local function set_alias_object(object,alias_map,property,value)
&#9;&#9;local alias = alias_map[property]
&#9;&#9;if alias then
&#9;&#9;&#9;pcall(pset,object,alias,value)
&#9;&#9;else
&#9;&#9;&#9;pcall(pset,object,property,value)
&#9;&#9;end
&#9;end

&#9;local function set_alias_stylist(stylist,alias_map,property,value)
&#9;&#9;local alias = alias_map[property]
&#9;&#9;if alias then
&#9;&#9;&#9;if stylist.Style[alias] == nil then
&#9;&#9;&#9;&#9;stylist.SetInternal(alias,value)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;if stylist.Style[property] == nil then
&#9;&#9;&#9;&#9;stylist.SetInternal(property,value)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;local function AddObject(object,alias_map)
&#9;&#9;if type(alias_map) == &quot;table&quot; then
&#9;&#9;&#9;AliasObjectLookup[object] = alias_map
&#9;&#9;&#9;for property,value in pairs(StyleTable) do
&#9;&#9;&#9;&#9;set_alias_object(object,alias_map,property,value)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;ObjectLookup[object] = true
&#9;&#9;&#9;for property,value in pairs(StyleTable) do
&#9;&#9;&#9;&#9;set_object(object,property,value)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;for parent in pairs(ParentStylists) do
&#9;&#9;&#9;parent.Update(Class)
&#9;&#9;end
&#9;&#9;return object
&#9;end

&#9;local function AddObjects(objects,alias_map)
&#9;&#9;if type(alias_map) == &quot;table&quot; then
&#9;&#9;&#9;for i,object in pairs(objects) do
&#9;&#9;&#9;&#9;AliasObjectLookup[object] = alias_map
&#9;&#9;&#9;&#9;for property,value in pairs(StyleTable) do
&#9;&#9;&#9;&#9;&#9;set_alias_object(object,alias_map,property,value)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;for i,object in pairs(objects) do
&#9;&#9;&#9;&#9;ObjectLookup[object] = true
&#9;&#9;&#9;&#9;for property,value in pairs(StyleTable) do
&#9;&#9;&#9;&#9;&#9;set_object(object,property,value)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;for parent in pairs(ParentStylists) do
&#9;&#9;&#9;parent.Update(Class)
&#9;&#9;end
&#9;&#9;return objects
&#9;end
&#9;
&#9;local function RemoveObject(object)
&#9;&#9;ObjectLookup[object] = nil
&#9;&#9;AliasObjectLookup[object] = nil
&#9;&#9;return object
&#9;end

&#9;local function RemoveObjects(objects)
&#9;&#9;for i,object in pairs(objects) do
&#9;&#9;&#9;ObjectLookup[object] = nil
&#9;&#9;&#9;AliasObjectLookup[object] = nil
&#9;&#9;end
&#9;&#9;return objects
&#9;end

&#9;local function GetObjects()
&#9;&#9;local list = {}
&#9;&#9;for object in pairs(ObjectLookup) do
&#9;&#9;&#9;list[#list+1] = object
&#9;&#9;end
&#9;&#9;for object in pairs(AliasObjectLookup) do
&#9;&#9;&#9;list[#list+1] = object
&#9;&#9;end
&#9;&#9;return list
&#9;end

&#9;local function ObjectIn(object)
&#9;&#9;if ObjectLookup[object] then
&#9;&#9;&#9;return true
&#9;&#9;elseif AliasObjectLookup[object] then
&#9;&#9;&#9;return ObjectAliasLookup[object]
&#9;&#9;else
&#9;&#9;&#9;return false
&#9;&#9;end
&#9;end

&#9;local function AddStylist(stylist,alias_map)
&#9;&#9;stylist.ParentStylists[Class] = true
&#9;&#9;if alias_map and type(alias_map) == &quot;table&quot; then
&#9;&#9;&#9;AliasStylistLookup[stylist] = alias_map
&#9;&#9;&#9;for property,value in pairs(StyleTable) do
&#9;&#9;&#9;&#9;set_alias_stylist(stylist,alias_map,property,value)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;StylistLookup[stylist] = true
&#9;&#9;&#9;for property,value in pairs(StyleTable) do
&#9;&#9;&#9;&#9;set_stylist(stylist,property,value)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;for parent in pairs(ParentStylists) do
&#9;&#9;&#9;parent.Update(Class)
&#9;&#9;end
&#9;&#9;return stylist
&#9;end

&#9;local function RemoveStylist(stylist)
&#9;&#9;stylist.ParentStylists[Class] = nil
&#9;&#9;StylistLookup[stylist] = nil
&#9;&#9;AliasStylistLookup[stylist] = nil
&#9;&#9;return stylist
&#9;end

&#9;local function GetStylists()
&#9;&#9;local list = {}
&#9;&#9;for stylist in pairs(StylistLookup) do
&#9;&#9;&#9;list[#list+1] = stylist
&#9;&#9;end
&#9;&#9;for stylist in pairs(AliasStylistLookup) do
&#9;&#9;&#9;list[#list+1] = stylist
&#9;&#9;end
&#9;&#9;return list
&#9;end

&#9;local function StylistIn(stylist)
&#9;&#9;if StylistLookup[stylist] then
&#9;&#9;&#9;return true
&#9;&#9;elseif AliasStylistLookup[stylist] then
&#9;&#9;&#9;return StylistAliasLookup[stylist]
&#9;&#9;else
&#9;&#9;&#9;return false
&#9;&#9;end
&#9;end

&#9;local function SetInternal(property,value)
&#9;&#9;for object in pairs(ObjectLookup) do
&#9;&#9;&#9;set_object(object,property,value)
&#9;&#9;end
&#9;&#9;for stylist in pairs(StylistLookup) do
&#9;&#9;&#9;set_stylist(stylist,property,value)
&#9;&#9;end
&#9;&#9;for object,alias_map in pairs(AliasObjectLookup) do
&#9;&#9;&#9;set_alias_object(object,alias_map,property,value)
&#9;&#9;end
&#9;&#9;for stylist,alias_map in pairs(AliasStylistLookup) do
&#9;&#9;&#9;set_alias_stylist(stylist,alias_map,property,value)
&#9;&#9;end
&#9;end
&#9;
&#9;local function SetProperty(property,value)
&#9;&#9;if value == nil or value == NULL then
&#9;&#9;&#9;StyleTable[property] = nil
&#9;&#9;&#9;for parent in pairs(ParentStylists) do
&#9;&#9;&#9;&#9;parent.Update(Class)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;StyleTable[property] = value
&#9;&#9;&#9;SetInternal(property,value)
&#9;&#9;end
&#9;end
&#9;
&#9;local function SetProperties(new_style)
&#9;&#9;local continue = false
&#9;&#9;for property,value in pairs(new_style) do
&#9;&#9;&#9;if value == NULL then
&#9;&#9;&#9;&#9;StyleTable[property] = nil
&#9;&#9;&#9;&#9;continue = true
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;StyleTable[property] = value
&#9;&#9;&#9;&#9;SetInternal(property,value)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if continue then
&#9;&#9;&#9;for parent in pairs(ParentStylists) do
&#9;&#9;&#9;&#9;parent.Update(Class)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;local function ClearProperties()
&#9;&#9;for property,value in pairs(StyleTable) do
&#9;&#9;&#9;StyleTable[property] = nil
&#9;&#9;end
&#9;&#9;for parent in pairs(ParentStylists) do
&#9;&#9;&#9;parent.Update(Class)
&#9;&#9;end
&#9;end
&#9;
&#9;local function Update(object)
&#9;&#9;for parent in pairs(ParentStylists) do
&#9;&#9;&#9;parent.Update(Class)
&#9;&#9;end
&#9;&#9;if object then
&#9;&#9;&#9;if ObjectLookup[object] then
&#9;&#9;&#9;&#9;for property,value in pairs(StyleTable) do
&#9;&#9;&#9;&#9;&#9;set_object(object,property,value)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif StylistLookup[object] then
&#9;&#9;&#9;&#9;for property,value in pairs(StyleTable) do
&#9;&#9;&#9;&#9;&#9;set_stylist(object,property,value)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif AliasObjectLookup[object] then
&#9;&#9;&#9;&#9;local alias_map = AliasObjectLookup[object]
&#9;&#9;&#9;&#9;for property,value in pairs(StyleTable) do
&#9;&#9;&#9;&#9;&#9;set_alias_object(object,alias_map,property,value)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif AliasStylistLookup[object] then
&#9;&#9;&#9;&#9;for property,value in pairs(StyleTable) do
&#9;&#9;&#9;&#9;&#9;set_alias_stylist(object,alias_map,property,value)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;for property,value in pairs(StyleTable) do
&#9;&#9;&#9;&#9;SetInternal(property,value)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;Class.AddObject = AddObject;
&#9;Class.AddObjects = AddObjects;
&#9;Class.RemoveObject = RemoveObject;
&#9;Class.RemoveObjects = RemoveObjects;
&#9;Class.GetObjects = GetObjects;
&#9;Class.ObjectIn = ObjectIn;
&#9;Class.AddStylist = AddStylist;
&#9;Class.RemoveStylist = RemoveStylist;
&#9;Class.GetStylists = GetStylists;
&#9;Class.StylistIn = StylistIn;
&#9;Class.SetInternal = SetInternal;
&#9;Class.SetProperty = SetProperty;
&#9;Class.SetProperties = SetProperties;
&#9;Class.ClearProperties = ClearProperties;
&#9;Class.Update = Update;

&#9;function Class.Destroy()
&#9;&#9;for parent in pairs(ParentStylists) do
&#9;&#9;&#9;parent.RemoveStylist(Class)
&#9;&#9;&#9;ParentStylists[parent] = nil
&#9;&#9;end
&#9;&#9;for k in pairs(Class) do
&#9;&#9;&#9;Class[k] = nil
&#9;&#9;end
&#9;&#9;for k in pairs(ObjectLookup) do
&#9;&#9;&#9;ObjectLookup[k] = nil
&#9;&#9;end
&#9;&#9;for k in pairs(AliasObjectLookup) do
&#9;&#9;&#9;AliasObjectLookup[k] = nil
&#9;&#9;end
&#9;&#9;for k in pairs(StylistLookup) do
&#9;&#9;&#9;StylistLookup[k] = nil
&#9;&#9;end
&#9;&#9;for k in pairs(AliasStylistLookup) do
&#9;&#9;&#9;AliasStylistLookup[k] = nil
&#9;&#9;end
&#9;end
&#9;
&#9;return Class,StyleTable
end

lib.Stylist = CreateStylist

--[[DEPEND:]]

doc[&quot;AutoSizeLabel&quot;] = [==[
AutoSizeLabel ( GuiText `label` ) [constructor]
&#9;returns: AutoSizeLabel `object`, GuiText `label`

Creates a text GUI that automatically resizes to its text.
Note that this is dependant on the TextBounds property.

Arguments:
&#9;`label`
&#9;&#9;An object to turn into an auto-sizing label.
&#9;&#9;Optional; defaults to a new TextLabel

Returns:
&#9;`object`
&#9;&#9;The AutoSizingLabel object.
&#9;`label`
&#9;&#9;The auto-sizing label GUI.


AutoSizeLabel Class:
&#9;This class contains the following members:

&#9;Read-Only:
&#9;&#9;GUI
&#9;&#9;&#9;The auto-sizing label GUI.

&#9;Methods:
&#9;&#9;LockAxis ( number `x`, number `y` )
&#9;&#9;&#9;Locks the size of the label on an axis to a specific amount.
&#9;&#9;&#9;`x` sets the amount, in pixels, to lock to on the x axis.
&#9;&#9;&#9;`y` sets the amount, in pixels, to lock to on the y axis.
&#9;&#9;&#9;Passing either value as nil will unlock that respective axis.

&#9;&#9;SetPadding ( number `pt`, number `pr`, number `pb`, number `pl` )
&#9;&#9;&#9;Sets the padding for each side of the label.
&#9;&#9;&#9;
&#9;&#9;&#9;Passing four values specifies the top, right, bottom, and left, in that order.
&#9;&#9;&#9;Passing three values specifies the top (`pt`), right/left (`pr`), and bottom (`pb`).
&#9;&#9;&#9;Passing two values specifies the top/bottom (`pt`), and right/left (`pr`).
&#9;&#9;&#9;Passing one value specifies that all sides have that value.
&#9;&#9;&#9;Passing no values sets all sides to 0.
&#9;&#9;&#9;
&#9;&#9;&#9;If the text is aligned to a certain side, the padding on that side will be ignored.

&#9;&#9;Update ( )
&#9;&#9;&#9;Updates the label.

&#9;&#9;Destroy ( )
&#9;&#9;&#9;Releases the resources used by this object.
&#9;&#9;&#9;Run this if you&apos;re no longer using this object.
]==]

local function CreateAutoSizeLabel(Label)
&#9;local Class = {}
&#9;if not Label then
&#9;&#9;Label = Create&apos;TextLabel&apos;{
&#9;&#9;&#9;Name = &quot;AutoSizeLabel&quot;;
&#9;&#9;&#9;BackgroundColor3 = Color3.new(0,0,0);
&#9;&#9;&#9;BorderColor3 = Color3.new(1,1,1);
&#9;&#9;&#9;TextColor3 = Color3.new(1,1,1);
&#9;&#9;&#9;FontSize = &quot;Size14&quot;;
&#9;&#9;&#9;Font = &quot;ArialBold&quot;;
&#9;&#9;}
&#9;end
&#9;Class.GUI = Label
&#9;
&#9;local pt,pr,pb,pl = 0,0,0,0
&#9;local t,r,b,l = 0,0,0,0
&#9;local lx,ly
&#9;local function Update()
&#9;&#9;local bounds = Label.TextBounds
&#9;&#9;local x = lx or bounds.x+l+r
&#9;&#9;local y = ly or bounds.y+t+b
&#9;&#9;Label.Size = UDim2.new(0,x,0,y)
&#9;end
&#9;Class.Update = Update
&#9;
&#9;local function reflectPadding()
&#9;&#9;t,r,b,l = pt,pr,pb,pl
&#9;&#9;if Label.TextXAlignment == Enum.TextXAlignment.Left then
&#9;&#9;&#9;l = 0
&#9;&#9;elseif Label.TextXAlignment == Enum.TextXAlignment.Right then
&#9;&#9;&#9;r = 0
&#9;&#9;end
&#9;&#9;if Label.TextYAlignment == Enum.TextYAlignment.Top then
&#9;&#9;&#9;t = 0
&#9;&#9;elseif Label.TextYAlignment == Enum.TextYAlignment.Bottom then
&#9;&#9;&#9;b = 0
&#9;&#9;end
&#9;&#9;Update()
&#9;end

&#9;local function SetPadding(nt,nr,nb,nl)
&#9;&#9;if nl then
&#9;&#9;&#9;pt,pr,pb,pl = nt,nr,nb,nl
&#9;&#9;elseif nb then
&#9;&#9;&#9;pt,pr,pb,pl = nt,nr,nb,nr
&#9;&#9;elseif nr then
&#9;&#9;&#9;pt,pr,pb,pl = nt,nr,nt,nr
&#9;&#9;elseif nt then
&#9;&#9;&#9;pt,pr,pb,pl = nt,nt,nt,nt
&#9;&#9;else
&#9;&#9;&#9;pt,pr,pb,pl = 0,0,0,0
&#9;&#9;end
&#9;&#9;reflectPadding()
&#9;end
&#9;Class.SetPadding = SetPadding
&#9;
&#9;local function LockAxis(x,y)
&#9;&#9;lx,ly = x,y
&#9;&#9;Update()
&#9;end
&#9;Class.LockAxis = LockAxis
&#9;
&#9;local con = Label.Changed:connect(function(p)
&#9;&#9;if p == &quot;TextBounds&quot; then
&#9;&#9;&#9;Update()
&#9;&#9;elseif p == &quot;TextXAlignment&quot; or p == &quot;TextYAlignment&quot; then
&#9;&#9;&#9;reflectPadding()
&#9;&#9;end
&#9;end)
&#9;
&#9;local function Destroy()
&#9;&#9;for k in pairs(Class) do
&#9;&#9;&#9;Class[k] = nil
&#9;&#9;end
&#9;&#9;con:disconnect()
&#9;end
&#9;Class.Destroy = Destroy
&#9;
&#9;Update()
&#9;
&#9;return Class,Label
end

lib.AutoSizeLabel = CreateAutoSizeLabel

--[[DEPEND:]]

doc[&quot;TruncatingLabel&quot;] = [==[
TruncatingLabel ( GuiText `label` ) [constructor]
&#9;returns: GuiText `label`

Creates a label that displays truncated text.
When the label is hovered over, the full text is displayed.

Arguments:
&#9;`label`
&#9;&#9;An object that will be turned into a truncating label.
&#9;&#9;Optional; defaults to a new GuiText

Returns:
&#9;`label`
&#9;&#9;The label GUI.
]==]

local function CreateTruncatingLabel(Label)
&#9;if not Label then
&#9;&#9;Label = Create&apos;TextLabel&apos;{
&#9;&#9;&#9;BackgroundColor3 = Color3.new(0,0,0);
&#9;&#9;&#9;BorderColor3 = Color3.new(1,1,1);
&#9;&#9;&#9;TextColor3 = Color3.new(1,1,1);
&#9;&#9;&#9;FontSize = &quot;Size14&quot;;
&#9;&#9;&#9;Font = &quot;ArialBold&quot;;
&#9;&#9;&#9;Text = &quot;&quot;;
&#9;&#9;}
&#9;end
&#9;Label.ClipsDescendants = true;

&#9;local FullTextLabel = Create&apos;TextLabel&apos;{
&#9;&#9;Name = &quot;FullTextLabel&quot;;
&#9;&#9;BackgroundColor3 = Label.BackgroundColor3;
&#9;&#9;BorderColor3 = Label.BorderColor3;
&#9;&#9;TextColor3 = Label.TextColor3;
&#9;&#9;FontSize = Label.FontSize;
&#9;&#9;Font = Label.Font;
&#9;&#9;Text = Label.Text;
&#9;&#9;Visible = false;
&#9;&#9;ZIndex = 9;
&#9;&#9;Parent = Label;
&#9;}

&#9;local ex = {
&#9;&#9;Name = true;
&#9;&#9;Parent = true;
&#9;&#9;Position = true;
&#9;&#9;Size = true;
&#9;&#9;ClipsDescendants = true;
&#9;&#9;ZIndex = true;
&#9;&#9;Visible = true;
&#9;}

&#9;local function pset(t,k,v)
&#9;&#9;t[k] = v
&#9;end

&#9;Label.Changed:connect(function(p)
&#9;&#9;if not ex[p] then
&#9;&#9;&#9;pcall(pset,FullTextLabel,p,Label[p])
&#9;&#9;end
&#9;end)

&#9;Label.MouseEnter:connect(function()
&#9;&#9;local align = Label.TextXAlignment
&#9;&#9;local bound = math.max(Label.TextBounds.x+4,Label.AbsoluteSize.x)
&#9;&#9;if align == Enum.TextXAlignment.Center then
&#9;&#9;&#9;FullTextLabel.Size = UDim2.new(0,bound,1,0)
&#9;&#9;&#9;FullTextLabel.Position = UDim2.new(0.5,-bound/2,0,0)
&#9;&#9;elseif align == Enum.TextXAlignment.Right then
&#9;&#9;&#9;FullTextLabel.Size = UDim2.new(0,bound,1,0)
&#9;&#9;&#9;FullTextLabel.Position = UDim2.new(1,-bound,0,0)
&#9;&#9;else
&#9;&#9;&#9;FullTextLabel.Size = UDim2.new(0,bound,1,0)
&#9;&#9;&#9;FullTextLabel.Position = UDim2.new(0,0,0,0)
&#9;&#9;end
&#9;&#9;Label.ClipsDescendants = false
&#9;&#9;SetZIndex(FullTextLabel,9)
&#9;&#9;FullTextLabel.Visible = true
&#9;end)

&#9;FullTextLabel.MouseLeave:connect(function()
&#9;&#9;FullTextLabel.Visible = false
&#9;&#9;Label.ClipsDescendants = true
&#9;end)

&#9;return Label
end

lib.TruncatingLabel = CreateTruncatingLabel

--[[DEPEND:]]

doc[&quot;DockedSide&quot;] = [==[
DockedSide [enum]

Represents a side that a dockable was docked on.

Enumerators:
&#9;0:None
&#9;&#9;Represents no sides of a dockable
&#9;1:Left
&#9;&#9;Represents the left side of a dockable
&#9;2:Right
&#9;&#9;Represents the right side of a dockable
&#9;4:Top
&#9;&#9;Represents the top side of a dockable
&#9;8:Bottom
&#9;&#9;Represents the bottom side of a dockable
]==]

local DockedSide = {
&#9;None = 0;
&#9;Left = 1;
&#9;Top = 2;
&#9;Right = 4;
&#9;Bottom = 8;
&#9;[0] = &apos;None&apos;;
&#9;[1] = &apos;Left&apos;;
&#9;[2] = &apos;Top&apos;;
&#9;[4] = &apos;Right&apos;;
&#9;[8] = &apos;Bottom&apos;;
}
lib.DockedSide = DockedSide

--[===[
doc[&quot;DockedSide&quot;] = [==[
[enum] DockedSide

Represents a side that a dockable was docked on.

Enumerators:
&#9;Left
&#9;&#9;Represents the left side of a dockable
&#9;Right
&#9;&#9;Represents the right side of a dockable
&#9;Top
&#9;&#9;Represents the top side of a dockable
&#9;Bottom
&#9;&#9;Represents the bottom side of a dockable

&#9;XAxis
&#9;&#9;Represents docking on the XAxis
&#9;&#9;Equal to Left and Right
&#9;YAxis
&#9;&#9;Represents docking on the YAxis
&#9;&#9;Equal to Top and Bottom
&#9;Inner
&#9;&#9;Represents docking on the inner sides (towards 0,0)
&#9;&#9;Equal to Left and Top
&#9;Outer
&#9;&#9;Represents docking on the outer sides (away from 0,0)
&#9;&#9;Equal to Right and Bottom

&#9;None
&#9;&#9;Represents no sides, or neither the X nor Y axis
&#9;&#9;Equal to Center
&#9;Center
&#9;&#9;Represents no docking, or docked on neither the inner or outer sides
&#9;&#9;Equal to None

Value Casts:
&#9;-1, &quot;-1&quot;
&#9;&#9;-&gt; Inner
&#9;0, &quot;0&quot;
&#9;&#9;-&gt; Center
&#9;1, &quot;1&quot;
&#9;&#9;-&gt; Outer
&#9;&quot;x&quot;, &quot;X&quot;
&#9;&#9;-&gt; XAxis
&#9;&quot;y&quot;, &quot;Y&quot;
&#9;&#9;-&gt; YAxis
&#9;&quot;&quot; (empty string)
&#9;&#9;-&gt; None
]==]

local DockedSide do
&#9;local enum = setmetatable({__type = &quot;DockedSide&quot;},ENUM_MT)
&#9;local mt = {
&#9;&#9;__eq = function(a,b)
&#9;&#9;&#9;local n = b[1]
&#9;&#9;&#9;for i = 1,#a do
&#9;&#9;&#9;&#9;if a[i] == n then
&#9;&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;return false
&#9;&#9;end;
&#9;&#9;__tostring = function(e)
&#9;&#9;&#9;return e.__type..&apos;.&apos;..e[1]
&#9;&#9;end;
&#9;}

---- Enumerators
&#9;enum.Left&#9;= setmetatable({__type = enum.__type, &apos;Left&apos;,&apos;XAxis&apos;,&apos;Inner&apos;},mt)
&#9;enum.Right&#9;= setmetatable({__type = enum.__type, &apos;Right&apos;,&apos;XAxis&apos;,&apos;Outer&apos;},mt)
&#9;enum.Top&#9;= setmetatable({__type = enum.__type, &apos;Top&apos;,&apos;YAxis&apos;,&apos;Inner&apos;},mt)
&#9;enum.Bottom&#9;= setmetatable({__type = enum.__type, &apos;Bottom&apos;,&apos;YAxis&apos;,&apos;Outer&apos;},mt)

&#9;enum.XAxis&#9;= setmetatable({__type = enum.__type, &apos;XAxis&apos;,&apos;Left&apos;,&apos;Right&apos;},mt)
&#9;enum.YAxis&#9;= setmetatable({__type = enum.__type, &apos;YAxis&apos;,&apos;Top&apos;,&apos;Bottom&apos;},mt)
&#9;enum.Inner&#9;= setmetatable({__type = enum.__type, &apos;Inner&apos;,&apos;Left&apos;,&apos;Top&apos;},mt)
&#9;enum.Outer&#9;= setmetatable({__type = enum.__type, &apos;Outer&apos;,&apos;Right&apos;,&apos;Bottom&apos;},mt)

&#9;enum.None&#9;= setmetatable({__type = enum.__type, &apos;None&apos;,&apos;Center&apos;},mt)
&#9;enum.Center&#9;= setmetatable({__type = enum.__type, &apos;Center&apos;,&apos;None&apos;},mt)

---- Value Casts
&#9;enum[&apos;x&apos;] = enum.XAxis
&#9;enum[&apos;y&apos;] = enum.YAxis
&#9;enum[&apos;&apos;] = enum.None

&#9;enum[&apos;X&apos;] = enum.XAxis
&#9;enum[&apos;Y&apos;] = enum.YAxis

&#9;enum[-1] = enum.Inner
&#9;enum[0] = enum.Center
&#9;enum[1] = enum.Outer

&#9;enum[&apos;-1&apos;] = enum.Inner
&#9;enum[&apos;0&apos;] = enum.Center
&#9;enum[&apos;1&apos;] = enum.Outer

---- Finish
&#9;DockedSide = enum
&#9;lib.DockedSide = enum
end
]===]

doc[&quot;DockContainer&quot;] = [==[
DockContainer ( GuiBase `container` ) [constructor]
&#9;returns: DockContainer `object`, GuiBase `container`

Creates a container whose children can snap to each others&apos; edges when dragged (referred to as &quot;dockables&quot;).
Only children that are GuiButtons will be made draggable.
However, they will still dock to any sibling that is a GuiObject.

Arguments:
&#9;`container`
&#9;&#9;An object that becomes the dock container.
&#9;&#9;Optional; defaults to a new ScreenGui

Returns:
&#9;`object`
&#9;&#9;The DockContainer object.

&#9;`container`
&#9;&#9;The container GUI.

DockContainer Class:
&#9;This class contains the following members:

&#9;Readonly:
&#9;&#9;GUI
&#9;&#9;&#9;The container GUI.

&#9;Fields:
&#9;&#9;SnapWidth
&#9;&#9;&#9;A number indicating the space (in pixels) required between the edges of two dockables before one snaps to the other.
&#9;&#9;&#9;Initially, this value is 16.

&#9;&#9;ConstrainToContainer
&#9;&#9;&#9;A bool indicating whether dockables can&apos;t be dragged outside the container.
&#9;&#9;&#9;Initially, this value is false.

&#9;&#9;SnapToContainerEdge
&#9;&#9;&#9;A bool indicating whether dockables can snap to the edge of the container.
&#9;&#9;&#9;Only applies if ConstrainToContainer is false.
&#9;&#9;&#9;Initially, this value is true.

&#9;&#9;PositionScaled
&#9;&#9;&#9;A bool indicating whether the position of dockables are set as a Scale or an Offset.
&#9;&#9;&#9;Initially, this value is true.

&#9;&#9;DragZIndex
&#9;&#9;&#9;A number indicating the amount to increase the ZIndex of a dockable by when it is dragged.
&#9;&#9;&#9;Initially, this value is 1.

&#9;Methods:
&#9;&#9;InvokeDrag ( GuiObject `dragged`, Vector2 `mouse_offset` )
&#9;&#9;&#9;Starts dragging `dragged` as if it were clicked.
&#9;&#9;&#9;`mouse_offset` is the position of the mouse when it &quot;clicked&quot; the object, in relation to the object.

&#9;&#9;StopDrag ( )
&#9;&#9;&#9;Stops the dragging of an object, if there is an object being dragged.

&#9;Callbacks:
&#9;&#9;DragBeginCallback ( GuiObject `dragged`, Vector2 `mouse_offset` )
&#9;&#9;&#9;Called before an object starts being dragged.
&#9;&#9;&#9;`dragged` is the object being dragged.
&#9;&#9;&#9;`mouse_offset` is the position of the mouse, in relation to the object.
&#9;&#9;&#9;If the function returns false, then the drag will be canceled.

&#9;&#9;DragCallback ( GuiObject `dragged`, Vector2 `mouse_offset` )
&#9;&#9;&#9;Called when an object is dragged, before the object updates.
&#9;&#9;&#9;`dragged` is the object being dragged.
&#9;&#9;&#9;`mouse_offset` is the location of the mouse when it started dragging, in relation to the object.
&#9;&#9;&#9;If the function returns false, then the object&apos;s position will not be updated.

&#9;&#9;DockCallback ( GuiObject `dragged`, GuiObject `docked`, DockedSide `docked_side` )
&#9;&#9;&#9;Called before the currently dragged object snaps to another dockable.
&#9;&#9;&#9;`dragged` is the current object being dragged.
&#9;&#9;&#9;`docked` is the dockable that `dragged` snapped to.
&#9;&#9;&#9;`docked_side` is the side of `dragged` that was docked on.
&#9;&#9;&#9;Note that `docked` can be the container, if objects are allowed to snap to it.
&#9;&#9;&#9;If the function returns false, then the snap to the dockable will be canceled.

&#9;Events:
&#9;&#9;DragBegin ( GuiObject `dragged`, Vector2 `mouse_offset` )
&#9;&#9;&#9;Fired after an object start being dragged.
&#9;&#9;&#9;`dragged` is the object being dragged.
&#9;&#9;&#9;`mouse_offset` is the position of the mouse, in relation to the object.

&#9;&#9;DragStopped ( GuiObject `dragged`, Vector2 `mouse_pos` )
&#9;&#9;&#9;Called after an object stops being dragged.
&#9;&#9;&#9;`dragged` is the object that was dragged.
&#9;&#9;&#9;`mouse_offset` is the position of the mouse when it started dragging, in relation to the object.

&#9;&#9;ObjectDocked ( GuiObject `dragged`, GuiObject `docked`, DockedSide `docked_side` )
&#9;&#9;&#9;Fired after the currently dragged objects snaps to another dockable.
&#9;&#9;&#9;`dragged` is the current object being dragged.
&#9;&#9;&#9;`docked` is the dockable that `dragged` snapped to.
&#9;&#9;&#9;`docked_side` is the side of `dragged` that was docked on.
&#9;&#9;&#9;Note that `docked` can be the container, if objects are allowed to snap to it.
]==]

local function CreateDockContainer(Container)
&#9;if not Container then
&#9;&#9;Container = Instance.new(&quot;ScreenGui&quot;)
&#9;&#9;Container.Name = &quot;DockContainer&quot;
&#9;end

&#9;local Class = {
&#9;&#9;GUI = Container;
&#9;&#9;SnapWidth = 16;
&#9;&#9;SnapToEdge = true;
&#9;&#9;ConstrainToContainer = false;
&#9;&#9;PositionScaled = true;
&#9;&#9;DragZIndex = 1;
&#9;}

&#9;local DragEvent = {}
&#9;local MouseDrag = Create&apos;ImageButton&apos;{
&#9;&#9;Active = false;
&#9;&#9;Size = UDim2.new(1.5, 0, 1.5, 0);
&#9;&#9;AutoButtonColor = false;
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;Name = &quot;MouseDrag&quot;;
&#9;&#9;Position = UDim2.new(-0.25, 0, -0.25, 0);
&#9;&#9;ZIndex = 10;
&#9;}

&#9;local function stopDragDefault()
&#9;&#9;return false,&quot;no object is being dragged&quot;
&#9;end
&#9;Class.StopDrag = stopDragDefault

&#9;local eventDragBegin = Instance.new(&quot;BindableEvent&quot;)
&#9;Class.DragBegin = eventDragBegin.Event

&#9;local eventDragStopped = Instance.new(&quot;BindableEvent&quot;)
&#9;Class.DragStopped = eventDragStopped.Event

&#9;local eventObjectDocked = Instance.new(&quot;BindableEvent&quot;)
&#9;Class.ObjectDocked = eventObjectDocked.Event

&#9;local function InvokeDrag(dockable,mouse_offset)
&#9;&#9;if Class.DragBeginCallback then
&#9;&#9;&#9;if Class.DragBeginCallback(dockable,mouse_offset)
&#9;&#9;&#9;== false then return end
&#9;&#9;end

&#9;&#9;local drag_con
&#9;&#9;local up_con

&#9;&#9;drag_con = MouseDrag.MouseMoved:connect(function(x,y)
&#9;&#9;&#9;if Class.DragCallback then
&#9;&#9;&#9;&#9;if Class.DragCallback(dockable,mouse_offset)
&#9;&#9;&#9;&#9;== false then return end
&#9;&#9;&#9;end

&#9;&#9;&#9;local snapWidth = Class.SnapWidth

&#9;&#9;&#9;local cApos = Container.AbsolutePosition
&#9;&#9;&#9;local Apos = Vector2.new(x,y) - mouse_offset

&#9;&#9;&#9;local cAsize = Container.AbsoluteSize
&#9;&#9;&#9;local Asize = dockable.AbsoluteSize

&#9;&#9;&#9;local APX,APY = Apos.x,Apos.y
&#9;&#9;&#9;local ASX,ASY = Asize.x,Asize.y

&#9;&#9;&#9;x = Apos.x - cApos.x
&#9;&#9;&#9;y = Apos.y - cApos.y

&#9;&#9;&#9;local docked_x,docked_y
&#9;&#9;&#9;local side_x,side_y

&#9;&#9;&#9;if Class.DockCallback then
&#9;&#9;&#9;&#9;for i,sibling in pairs(Container:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;if sibling:IsA&quot;GuiObject&quot; and sibling ~= dockable and sibling.Visible then
&#9;&#9;&#9;&#9;&#9;&#9;local sApos = sibling.AbsolutePosition
&#9;&#9;&#9;&#9;&#9;&#9;local sAsize = sibling.AbsoluteSize

&#9;&#9;&#9;&#9;&#9;&#9;if Apos.x + Asize.x &gt;= sApos.x and Apos.x &lt;= sApos.x + sAsize.x then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if math.abs((Apos.y + Asize.y) - sApos.y) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if Class.DockCallback(dockable,sibling,DockedSide.Bottom) ~= false then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- docked on bottom side
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;y = sApos.y - cApos.y - Asize.y
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,sibling,DockedSide.Bottom)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif math.abs(Apos.y - (sApos.y + sAsize.y)) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if Class.DockCallback(dockable,sibling,DockedSide.Top) ~= false then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- docked on top side
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;y = sApos.y - cApos.y + sAsize.y
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,sibling,DockedSide.Top)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;if Apos.y + Asize.y &gt;= sApos.y and Apos.y &lt;= sApos.y + sAsize.y then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if math.abs((Apos.x + Asize.x) - sApos.x) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if Class.DockCallback(dockable,sibling,DockedSide.Right) ~= false then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- docked on right side
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;x = sApos.x - cApos.x - Asize.x
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,sibling,DockedSide.Right)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif math.abs(Apos.x - (sApos.x + sAsize.x)) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if Class.DockCallback(dockable,sibling,DockedSide.Left) ~= false then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- docked on left side
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;x = sApos.x - cApos.x + sAsize.x
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,sibling,DockedSide.Left)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if Class.ConstrainToContainer then
&#9;&#9;&#9;&#9;&#9;if APY &lt; cApos.y then
&#9;&#9;&#9;&#9;&#9;&#9;if Class.DockCallback(dockable,Container,DockedSide.Top) ~= false then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- docked on top side
&#9;&#9;&#9;&#9;&#9;&#9;&#9;y = 0
&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Top)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;elseif APY + ASY &gt; cApos.y + cAsize.y then
&#9;&#9;&#9;&#9;&#9;&#9;if Class.DockCallback(dockable,Container,DockedSide.Bottom) ~= false then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- docked on bottom side
&#9;&#9;&#9;&#9;&#9;&#9;&#9;y = cAsize.y - ASY
&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Bottom)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;if APX &lt; cApos.x then
&#9;&#9;&#9;&#9;&#9;&#9;if Class.DockCallback(dockable,Container,DockedSide.Left) ~= false then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- docked on left side
&#9;&#9;&#9;&#9;&#9;&#9;&#9;x = 0
&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Left)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;elseif APX + ASX &gt; cApos.x + cAsize.x then
&#9;&#9;&#9;&#9;&#9;&#9;if Class.DockCallback(dockable,Container,DockedSide.Right) ~= false then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- docked on right side
&#9;&#9;&#9;&#9;&#9;&#9;&#9;x = cAsize.x - ASX
&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Right)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;elseif Class.SnapToEdge then
&#9;&#9;&#9;&#9;&#9;if math.abs(APY - cApos.y) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;if Class.DockCallback(dockable,Container,DockedSide.Top) ~= false then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- docked on top side
&#9;&#9;&#9;&#9;&#9;&#9;&#9;y = 0
&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Top)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;elseif math.abs((APY+ASY) - (cApos.y+cAsize.y)) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;if Class.DockCallback(dockable,Container,DockedSide.Bottom) ~= false then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- docked on bottom side
&#9;&#9;&#9;&#9;&#9;&#9;&#9;y = cAsize.y - ASY
&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Bottom)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;if math.abs(APX - cApos.x) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;if Class.DockCallback(dockable,Container,DockedSide.Left) ~= false then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- docked on left side
&#9;&#9;&#9;&#9;&#9;&#9;&#9;x = 0
&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Left)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;elseif math.abs((APX+ASX) - (cApos.x+cAsize.x)) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;if Class.DockCallback(dockable,Container,DockedSide.Right) ~= false then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- docked on right side
&#9;&#9;&#9;&#9;&#9;&#9;&#9;x = cAsize.x - ASX
&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Right)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;for i,sibling in pairs(Container:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;if sibling:IsA&quot;GuiObject&quot; and sibling ~= dockable and sibling.Visible then
&#9;&#9;&#9;&#9;&#9;&#9;local sApos = sibling.AbsolutePosition
&#9;&#9;&#9;&#9;&#9;&#9;local sAsize = sibling.AbsoluteSize

&#9;&#9;&#9;&#9;&#9;&#9;if Apos.x + Asize.x &gt;= sApos.x and Apos.x &lt;= sApos.x + sAsize.x then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if math.abs((Apos.y + Asize.y) - sApos.y) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;y = sApos.y - cApos.y - Asize.y
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,sibling,DockedSide.Bottom)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif math.abs(Apos.y - (sApos.y + sAsize.y)) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;y = sApos.y - cApos.y + sAsize.y
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,sibling,DockedSide.Top)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;if Apos.y + Asize.y &gt;= sApos.y and Apos.y &lt;= sApos.y + sAsize.y then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if math.abs((Apos.x + Asize.x) - sApos.x) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;x = sApos.x - cApos.x - Asize.x
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,sibling,DockedSide.Right)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif math.abs(Apos.x - (sApos.x + sAsize.x)) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;x = sApos.x - cApos.x + sAsize.x
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,sibling,DockedSide.Left)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if Class.ConstrainToContainer then
&#9;&#9;&#9;&#9;&#9;if APY &lt; cApos.y then
&#9;&#9;&#9;&#9;&#9;&#9;y = 0
&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Top)
&#9;&#9;&#9;&#9;&#9;elseif APY + ASY &gt; cApos.y + cAsize.y then
&#9;&#9;&#9;&#9;&#9;&#9;y = cAsize.y - ASY
&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Bottom)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;if APX &lt; cApos.x then
&#9;&#9;&#9;&#9;&#9;&#9;x = 0
&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Left)
&#9;&#9;&#9;&#9;&#9;elseif APX + ASX &gt; cApos.x + cAsize.x then
&#9;&#9;&#9;&#9;&#9;&#9;x = cAsize.x - ASX
&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Right)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;elseif Class.SnapToEdge then
&#9;&#9;&#9;&#9;&#9;if math.abs(APY - cApos.y) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;y = 0
&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Top)
&#9;&#9;&#9;&#9;&#9;elseif math.abs((APY+ASY) - (cApos.y+cAsize.y)) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;y = cAsize.y - ASY
&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Bottom)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;if math.abs(APX - cApos.x) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;x = 0
&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Left)
&#9;&#9;&#9;&#9;&#9;elseif math.abs((APX+ASX) - (cApos.x+cAsize.x)) &lt;= snapWidth then
&#9;&#9;&#9;&#9;&#9;&#9;x = cAsize.x - ASX
&#9;&#9;&#9;&#9;&#9;&#9;eventObjectDocked:Fire(dockable,Container,DockedSide.Right)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;local sx,sy = 0,0
&#9;&#9;&#9;if Class.PositionScaled then
&#9;&#9;&#9;&#9;sx = x/cAsize.x
&#9;&#9;&#9;&#9;sy = y/cAsize.y
&#9;&#9;&#9;&#9;x = 0
&#9;&#9;&#9;&#9;y = 0
&#9;&#9;&#9;end
&#9;&#9;&#9;dockable.Position = UDim2.new(sx,x,sy,y)
&#9;&#9;end)
&#9;&#9;local zIndex = dockable.ZIndex
&#9;&#9;local function mouse_up()
&#9;&#9;&#9;Class.StopDrag = stopDragDefault
&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;drag_con:disconnect(); drag_con = nil
&#9;&#9;&#9;up_con:disconnect(); drag = nil
&#9;&#9;&#9;SetZIndex(dockable,zIndex)
&#9;&#9;&#9;eventDragStopped:Fire(dockable,mouse_offset)
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;&#9;up_con = MouseDrag.MouseButton1Up:connect(mouse_up)
&#9;&#9;SetZIndex(dockable,zIndex + Class.DragZIndex)
&#9;&#9;MouseDrag.Parent = GetScreen(dockable)
&#9;&#9;Class.StopDrag = mouse_up
&#9;&#9;eventDragBegin:Fire(dockable,mouse_offset)
&#9;end
&#9;Class.InvokeDrag = InvokeDrag

&#9;local function ChildAdded(child)
&#9;&#9;if child:IsA&quot;GuiButton&quot; then
&#9;&#9;&#9;DragEvent[child] = child.MouseButton1Down:connect(function(x,y)
&#9;&#9;&#9;&#9;InvokeDrag(child,Vector2.new(x,y) - child.AbsolutePosition)
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end

&#9;local function ChildRemoved(child)
&#9;&#9;if DragEvent[child] then
&#9;&#9;&#9;DragEvent[child]:disconnect()
&#9;&#9;&#9;DragEvent[child] = nil
&#9;&#9;end
&#9;end

&#9;Container.ChildAdded:connect(ChildAdded)
&#9;Container.ChildRemoved:connect(ChildRemoved)

&#9;for i,dockable in pairs(Container:GetChildren()) do
&#9;&#9;ChildAdded(dockable)
&#9;end

&#9;return Class,Container
end

lib.DockContainer = CreateDockContainer

--[[DEPEND:
Stylist.lua;
]]

doc[&quot;Graphic&quot;] = [==[
Graphic ( string `polygon`, Vector2 `size`, table `style`, table `config` ) [constructor]
&#9;returns Graphic `object`, Frame `graphic`

Creates a basic GUI graphic from a polygon or specified preset.

Arguments:
&#9;`polygon`
&#9;&#9;May be a string, referencing a preset (see Presets).
&#9;&#9;May also be a table that contains two tables, which represent the x and y coordinates (respectively) of each point in the polygon.
&#9;&#9;If coordinates are not between 0 and 1, a 3rd entry may be specified, which is the number to divide each coordinate by.

&#9;`size`
&#9;&#9;The size, in pixels, of the graphic.
&#9;&#9;May also be a table that contains the x and y size of the graphic.

&#9;`style`
&#9;&#9;A table that will be used with the graphic&apos;s Stylist, which controls the appearance of the graphic.
&#9;&#9;Optional; defaults to an empty table.
&#9;&#9;Note that the graphic essentially shares the same properties as a Frame object.
&#9;&#9;So, if [&quot;BackgroundColor3&quot;] = Color3.new(1,1,1) were in the table, the graphic&apos;s color would be set to white.

&#9;`config`
&#9;&#9;A table that alters how the graphic will be drawn.
&#9;&#9;It can contain the following possible values:
&#9;&#9;&#9;method
&#9;&#9;&#9;&#9;May be &quot;scaled&quot; or &quot;static&quot;.
&#9;&#9;&#9;&#9;Determines if pixels will be scaled to the parent or static.
&#9;&#9;&#9;round
&#9;&#9;&#9;&#9;May be &quot;half&quot;, &quot;ceil&quot;, or &quot;floor&quot;.
&#9;&#9;&#9;&#9;If static method is chosen, this determines how to round each pixel.
&#9;&#9;&#9;offset
&#9;&#9;&#9;&#9;A Vector2. This offsets the polygon on the final image.

Returns:
&#9;`object`
&#9;&#9;The Graphic object.

&#9;`graphic`
&#9;&#9;The Frame object which makes up the graphic.

Graphic Class:
&#9;This class contains the following members:

&#9;Readonly:
&#9;&#9;GUI
&#9;&#9;&#9;The Frame object which makes up the graphic.

&#9;&#9;Style
&#9;&#9;&#9;The Stylist object used to change the appearance of the graphic.
&#9;&#9;
&#9;Methods:
&#9;&#9;Destroy ( )
&#9;&#9;&#9;Releases the resources used by this object.
&#9;&#9;&#9;Run this if you&apos;re no longer using this object.


Presets:
&#9;arrow-up
&#9;arrow-down
&#9;arrow-left
&#9;arrow-right
&#9;check-mark
&#9;pin
&#9;wrench
&#9;cross
&#9;grip
&#9;vgrip
]==]

--[[
&#9;polygon:
&#9;&#9;string:&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;a reference to a predefined polygon
&#9;&#9;table: {Vector2, ...}&#9;&#9;&#9;&#9;&#9;a list of Vector2 points
&#9;&#9;table: {{number, ...},{number, ...}}&#9;two lists of x and y axes
&#9;size
&#9;&#9;table: {number, number}
&#9;&#9;Vector2
&#9;style
&#9;config
&#9;&#9;method&#9;= scaled|static&#9;&#9;&#9;Whether pixels will be scaled to the parent or static
&#9;&#9;round&#9;= ceil|floor|half&#9;&#9;If static method is chosen, this determines how to round each pixel
&#9;&#9;offset&#9;= Vector2&#9;&#9;&#9;&#9;Offsets the polygon on the final image. The polygon will be clipped so that it doesn&apos;t render outside the image region
]]

--[[
local polyX = {3,8,9,13,13,10,8,6,2}
local polyY = {2,6,2,9,13,10,15,2,10}
local polyCorners = 9
]]

local internal_polygon = {
&#9;[&quot;arrow-up&quot;] = {
&#9;&#9;{2,4,6};
&#9;&#9;{5,3,5};
&#9;&#9;8;
&#9;};
&#9;[&quot;arrow-down&quot;] = {
&#9;&#9;{2,4,6};
&#9;&#9;{3,5,3};
&#9;&#9;8;
&#9;};
&#9;[&quot;arrow-left&quot;] = {
&#9;&#9;{5,3,5};
&#9;&#9;{2,4,6};
&#9;&#9;8;
&#9;};
&#9;[&quot;arrow-right&quot;] = {
&#9;&#9;{3,5,3};
&#9;&#9;{2,4,6};
&#9;&#9;8;
&#9;};
&#9;[&quot;check-mark&quot;] = {
&#9;&#9;{1,3,7,7,3,1};
&#9;&#9;{3,5,1,3,7,5};
&#9;&#9;8;
&#9;};
&#9;[&quot;pin&quot;] = {
&#9;&#9;{4,11,11,12,12,8,8,7,7,3,3,4, 4,5,7,7,5,5};
&#9;&#9;{2,2,9,9,10,10,14,14,10,10,9,9, 2,3,3,9,9,3};
&#9;&#9;16;
&#9;};
&#9;[&quot;wrench&quot;] = {
&#9;&#9;{&#9;2;&#9;8;&#9;18;&#9;25;&#9;29;&#9;29;&#9;24;&#9;20;&#9;17;&#9;17;&#9;22;&#9;16;&#9;12;&#9;12};
&#9;&#9;{&#9;24;&#9;30;&#9;20;&#9;20;&#9;16;&#9;10;&#9;15;&#9;15;&#9;12;&#9;8;&#9;3;&#9;3;&#9;7;&#9;14};
&#9;&#9;32,
&#9;};
&#9;[&quot;cross&quot;] = {
&#9;&#9;{1;&#9;2;&#9;4;&#9;6;&#9;7;&#9;7;&#9;5;&#9;7;&#9;7;&#9;6;&#9;4;&#9;2;&#9;1;&#9;1;&#9;3;&#9;1};
&#9;&#9;{1;&#9;1;&#9;3;&#9;1;&#9;1;&#9;2;&#9;4;&#9;6;&#9;7;&#9;7;&#9;5;&#9;7;&#9;7;&#9;6;&#9;4;&#9;2};
&#9;&#9;8;
&#9;};
&#9;[&quot;grip&quot;] = function(size,class,config)
&#9;&#9;local GraphicFrame = class.GUI
&#9;&#9;GraphicFrame.Size = UDim2.new(0,size.x*(size.y == 0 and 2 or size.y),0,size.x*2)
&#9;&#9;for i=1,size.x do
&#9;&#9;&#9;local p = Instance.new(&quot;Frame&quot;,GraphicFrame)
&#9;&#9;&#9;p.BackgroundColor3 = Color3.new(0,0,0)
&#9;&#9;&#9;p.BorderSizePixel = 0
&#9;&#9;&#9;p.Size = UDim2.new(1,0,0,1)
&#9;&#9;&#9;p.Position = UDim2.new(0,0,0,(i-1)*(size.y == 0 and 2 or size.y))
&#9;&#9;&#9;class.Stylist.AddObject(p)
&#9;&#9;end
&#9;&#9;
&#9;&#9;return class,GraphicFrame
&#9;end;
&#9;[&quot;vgrip&quot;] = function(size,class,config)
&#9;&#9;local GraphicFrame = class.GUI
&#9;&#9;GraphicFrame.Size = UDim2.new(0,size.x*2,0,size.x*(size.y == 0 and 2 or size.y))
&#9;&#9;for i=1,size.x do
&#9;&#9;&#9;local p = Instance.new(&quot;Frame&quot;,GraphicFrame)
&#9;&#9;&#9;p.BackgroundColor3 = Color3.new(0,0,0)
&#9;&#9;&#9;p.BorderSizePixel = 0
&#9;&#9;&#9;p.Size = UDim2.new(0,1,1,0)
&#9;&#9;&#9;p.Position = UDim2.new(0,(i-1)*(size.y == 0 and 2 or size.y),0,0)
&#9;&#9;&#9;class.Stylist.AddObject(p)
&#9;&#9;end
&#9;&#9;
&#9;&#9;return class,GraphicFrame
&#9;end;
}

local function CreateGraphic(polygon,size,style,config)
--[[&#9;local function round(d)
&#9;&#9;local i = floor(d)
&#9;&#9;d = d - i
&#9;&#9;if d &lt; 0.5 then
&#9;&#9;&#9;return i
&#9;&#9;elseif d &gt; 0.5 then
&#9;&#9;&#9;return i + 1
&#9;&#9;elseif i%2==0 then
&#9;&#9;&#9;return i
&#9;&#9;else
&#9;&#9;&#9;return i + 1
&#9;&#9;end
&#9;end
]]
&#9;local function round(n)
&#9;&#9;if n &lt; 0 then
&#9;&#9;&#9;return ceil(n - 0.5)
&#9;&#9;else
&#9;&#9;&#9;return floor(n + 0.5)
&#9;&#9;end
&#9;end
&#9;
&#9;local GraphicFrame = Instance.new(&quot;Frame&quot;)
&#9;GraphicFrame.Name = &quot;Graphic&quot;
&#9;GraphicFrame.BackgroundTransparency = 1
&#9;
&#9;local GraphicStylist = CreateStylist(style)
&#9;
&#9;local Class = {
&#9;&#9;GUI = GraphicFrame;
&#9;&#9;Stylist = GraphicStylist;
&#9;}
&#9;
&#9;function Class.Destroy()
&#9;&#9;for k in pairs(Class) do
&#9;&#9;&#9;Class[k] = nil
&#9;&#9;end
&#9;&#9;GraphicStylist.Destroy()
&#9;&#9;GraphicFrame:Destroy()
&#9;end
&#9;
&#9;local polygonX,polygonY = {},{}
&#9;if type(polygon) == &quot;table&quot; then
&#9;&#9;polygonX = polygon[1]
&#9;&#9;polygonY = polygon[2]
&#9;&#9;local div = polygon[3]
&#9;&#9;if div then
&#9;&#9;&#9;for i=1,#polygonX do
&#9;&#9;&#9;&#9;polygonX[i] = (polygonX[i])/div
&#9;&#9;&#9;end
&#9;&#9;&#9;for i=1,#polygonY do
&#9;&#9;&#9;&#9;polygonY[i] = (polygonY[i])/div
&#9;&#9;&#9;end
&#9;&#9;end
&#9;elseif type(polygon) == &quot;string&quot; then
&#9;&#9;local in_poly = internal_polygon[polygon]
&#9;&#9;if type(in_poly) == &quot;table&quot; then
&#9;&#9;&#9;local div = in_poly[3] or 1
&#9;&#9;&#9;for i=1,#in_poly[1] do
&#9;&#9;&#9;&#9;polygonX[i] = (in_poly[1][i])/div
&#9;&#9;&#9;end
&#9;&#9;&#9;for i=1,#in_poly[2] do
&#9;&#9;&#9;&#9;polygonY[i] = (in_poly[2][i])/div
&#9;&#9;&#9;end
&#9;&#9;elseif type(in_poly) == &quot;function&quot; then
&#9;&#9;&#9;return in_poly(size,Class,config)
&#9;&#9;else
&#9;&#9;&#9;error(&quot;\&apos;&quot;..tostring(polygon)..&quot;\&apos; is not a valid internal polygon&quot;,2)
&#9;&#9;end
&#9;else
&#9;&#9;error(&quot;invalid polygon&quot;,2)
&#9;end
&#9;local posX,posY,sizeX,sizeY = 0,0,0,0
&#9;config = config or {}
&#9;local method = config.method or &quot;scaled&quot;
&#9;local round = round
&#9;if config.round == &quot;ceil&quot; then
&#9;&#9;round = math.ceil
&#9;elseif config.round == &quot;floor&quot; then
&#9;&#9;round = math.floor
&#9;elseif config.round == &quot;half&quot; then
&#9;&#9;round = round
&#9;end
&#9;if config.offset then
&#9;&#9;posX,posY = -config.offset.x,-config.offset.y
&#9;end
&#9;if type(size) == &quot;userdata&quot; then
&#9;&#9;sizeX = size.x
&#9;&#9;sizeY = size.y
&#9;elseif type(size) == &quot;table&quot; then
&#9;&#9;sizeX = size[1] or size.x
&#9;&#9;sizeY = size[2] or size.y
&#9;else
&#9;&#9;error(&quot;invalid size&quot;,2)
&#9;end
&#9;polygonN = #polygonX
&#9;for i=1,polygonN do
&#9;&#9;polygonX[i] = polygonX[i]*sizeX
&#9;end
&#9;for i=1,polygonN do
&#9;&#9;polygonY[i] = polygonY[i]*sizeY
&#9;end
&#9;
&#9;GraphicFrame.Size = UDim2.new(0,sizeX,0,sizeY)
&#9;
&#9;local p = Instance.new(&quot;Frame&quot;)
&#9;p.BorderSizePixel = 0
&#9;p.BackgroundColor3 = Color3.new()
&#9;p.Size = UDim2.new(0,1,0,1)
&#9;
&#9;local fillLine
&#9;if method == &quot;scaled&quot; then
&#9;&#9;fillLine = function(x1,x2,y)
&#9;&#9;&#9;x2 = x2-x1
&#9;&#9;&#9;if x2 ~= 0 then
&#9;&#9;&#9;&#9;local c = p:Clone()
&#9;&#9;&#9;&#9;GraphicStylist.AddObject(c)
&#9;&#9;&#9;&#9;c.Position = UDim2.new(x1/sizeX,0,y/sizeY,0)
&#9;&#9;&#9;&#9;c.Size = UDim2.new(x2/sizeX,0,1/sizeY,0)
&#9;&#9;&#9;&#9;c.Parent = GraphicFrame
&#9;&#9;&#9;end
&#9;&#9;end
&#9;elseif method == &quot;static&quot; then
&#9;&#9;fillLine = function(x1,x2,y)
&#9;&#9;&#9;x1 = round(x1,1)
&#9;&#9;&#9;x2 = round(x2,1)-x1
&#9;&#9;&#9;if x2 ~= 0 then
&#9;&#9;&#9;&#9;local c = p:Clone()
&#9;&#9;&#9;&#9;GraphicStylist.AddObject(c)
&#9;&#9;&#9;&#9;c.Position = UDim2.new(0,x1,0,y)
&#9;&#9;&#9;&#9;c.Size = UDim2.new(0,x2,0,1)
&#9;&#9;&#9;&#9;c.Parent = GraphicFrame
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;error(&quot;invalid method&quot;,2)
&#9;end
&#9;
&#9;for pixelY = posY,sizeY+posY-1 do
&#9;&#9;local nodes = 0
&#9;&#9;local nodeX = {}
&#9;&#9;local j = polygonN;
&#9;&#9;for i=1,polygonN do
&#9;&#9;&#9;if polygonY[i] &lt; pixelY and polygonY[j] &gt;= pixelY or polygonY[j] &lt; pixelY and polygonY[i] &gt;= pixelY then
&#9;&#9;&#9;&#9;nodeX[nodes] = (polygonX[i] + (pixelY - polygonY[i])/(polygonY[j] - polygonY[i])*(polygonX[j] - polygonX[i]))
&#9;&#9;&#9;&#9;nodes = nodes + 1
&#9;&#9;&#9;end
&#9;&#9;&#9;j = i
&#9;&#9;end
&#9;&#9;
&#9;&#9;local i = 0
&#9;&#9;while i &lt; nodes - 1 do
&#9;&#9;&#9;if nodeX[i] &gt; nodeX[i+1] then
&#9;&#9;&#9;&#9;nodeX[i],nodeX[i+1] = nodeX[i+1],nodeX[i]
&#9;&#9;&#9;&#9;if i ~= 0 then i = i - 1 end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;i = i + 1
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;&#9;local modX,modY = posX + sizeX, posY + sizeY
&#9;&#9;
&#9;&#9;local i = 0
&#9;&#9;while i &lt; nodes - 1 do
&#9;&#9;&#9;if nodeX[i] &gt;= modX then
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;&#9;if nodeX[i+1] &gt; posX then
&#9;&#9;&#9;&#9;if nodeX[i] &lt; posX then
&#9;&#9;&#9;&#9;&#9;nodeX[i] = posX
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if nodeX[i+1] &gt; modX then
&#9;&#9;&#9;&#9;&#9;nodeX[i+1] = modX
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;fillLine(nodeX[i]-posX,nodeX[i+1]-posX,pixelY-posY)
&#9;&#9;&#9;end
&#9;&#9;&#9;i = i + 2
&#9;&#9;end
&#9;end
&#9;
&#9;return Class,GraphicFrame
end

lib.Graphic = CreateGraphic

--[[DEPEND:
SetZIndex.lua;
GetScreen.lua;
Graphic.lua;
]]

doc[&quot;ScrollBar&quot;] = [==[
ScrollBar ( bool `horizontal`, number `size` ) [constructor]
&#9;returns: ScrollBar `object`, Frame `scroll_bar`

Creates a primative scroll bar.
This scroll bar features a draggable thumb, paging buttons at either end, and a clickable track.

Arguments:
&#9;`horizontal`
&#9;&#9;If true, the scroll bar will appear horizontally instead of vertically.
&#9;&#9;Optional; defaults to false.
&#9;`size`
&#9;&#9;Sets the width or height of the scroll bar.
&#9;&#9;Optional; defaults to ]==]..ENTRY_SIZE..[==[

Returns:
&#9;`object`
&#9;&#9;The ScrollBar object.
&#9;&#9;
&#9;`scroll_bar`
&#9;&#9;The scroll bar GUI.


ScrollBar Class:
&#9;This class contains the following members:

&#9;Readonly:
&#9;&#9;GUI
&#9;&#9;&#9;The scroll bar itself.

&#9;Fields:
&#9;&#9;ScrollIndex
&#9;&#9;&#9;A number indicating the current position of the scroll bar.

&#9;&#9;TotalSpace
&#9;&#9;&#9;A number indicating the total span of the scrollable space.

&#9;&#9;VisibleSpace
&#9;&#9;&#9;A number indicating the visible span of the scrollable space.

&#9;&#9;PageIncrement
&#9;&#9;&#9;The amount to increase or decrease the ScrollIndex when ScrollDown or ScrollUp is called.

&#9;Methods:
&#9;&#9;Update ( )
&#9;&#9;&#9;Updates the scroll bar to reflect any changes.

&#9;&#9;CanScrollDown ( )
&#9;&#9;&#9;Returns whether the scroll bar can scroll down (or right if `horizontal` is true).

&#9;&#9;CanScrollRight ( )
&#9;&#9;&#9;Alias of CanScrollDown.

&#9;&#9;CanScrollUp ( )
&#9;&#9;&#9;Returns whether the scroll bar can scroll up (or left if `horizontal` is true).

&#9;&#9;CanScrollLeft ( )
&#9;&#9;&#9;Alias of CanScrollUp.

&#9;&#9;ScrollDown ( )
&#9;&#9;&#9;Scrolls down (or right) by the current PageIncrement.

&#9;&#9;ScrollRight( )
&#9;&#9;&#9;Alias of ScrollDown.

&#9;&#9;ScrollUp ( )
&#9;&#9;&#9;Scrolls up (or left) by the current PageIncrement.

&#9;&#9;ScrollLeft ( )
&#9;&#9;&#9;Alias of ScrollUp.

&#9;&#9;ScrollTo ( number `index` )
&#9;&#9;&#9;Scrolls to a specific place, specified by `index`.
&#9;&#9;&#9;This may be any number; it will be clamped between 0 and TotalSpace.

&#9;&#9;GetScrollPercent ( )
&#9;&#9;&#9;Returns the scroll index as a percentage between 0 and 1.
&#9;&#9;&#9;
&#9;&#9;SetScrollPercent ( number `percent` )
&#9;&#9;&#9;Sets the ScrollIndex as a percentage between 0 and 1.

&#9;&#9;Destroy ( )
&#9;&#9;&#9;Releases the resources used by this object.
&#9;&#9;&#9;Run this if you&apos;re no longer using this object.

&#9;Callbacks:
&#9;&#9;UpdateCallback ( table `object` )
&#9;&#9;&#9;When Update is called, the function is called before updating.
&#9;&#9;&#9;If the function returns false, the update will be canceled.
]==]

local function CreateScrollBar(horizontal,size)
&#9;size = size or ENTRY_SIZE
&#9;
&#9;-- create row scroll bar
&#9;local ScrollFrame = Create&apos;Frame&apos;{
&#9;&#9;Size = horizontal and UDim2.new(1,0,0,size) or UDim2.new(0,size,1,0);
&#9;&#9;Position = horizontal and UDim2.new(0,0,1,-size) or UDim2.new(1,-size,0,0);
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;Name = &quot;ScrollFrame&quot;;
&#9;&#9;Create&apos;ImageButton&apos;{
&#9;&#9;&#9;BackgroundColor3 = Color3.new(1,1,1);
&#9;&#9;&#9;BackgroundTransparency = 0.7;
&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;Size = UDim2.new(0, size, 0, size);
&#9;&#9;&#9;Name = &quot;ScrollDown&quot;;
&#9;&#9;&#9;Position = horizontal and UDim2.new(1,-size,0,0) or UDim2.new(0,0,1,-size);
&#9;&#9;};
&#9;&#9;Create&apos;ImageButton&apos;{
&#9;&#9;&#9;BackgroundColor3 = Color3.new(1,1,1);
&#9;&#9;&#9;BackgroundTransparency = 0.7;
&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;Size = UDim2.new(0, size, 0, size);
&#9;&#9;&#9;Name = &quot;ScrollUp&quot;;
&#9;&#9;};
&#9;&#9;Create&apos;ImageButton&apos;{
&#9;&#9;&#9;AutoButtonColor = false;
&#9;&#9;&#9;Size = horizontal and UDim2.new(1,-size*2,1,0) or UDim2.new(1,0,1,-size*2);
&#9;&#9;&#9;BackgroundColor3 = Color3.new(0,0,0);
&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;BackgroundTransparency = 0.7;
&#9;&#9;&#9;Position = horizontal and UDim2.new(0,size,0,0) or UDim2.new(0,0,0,size);
&#9;&#9;&#9;Name = &quot;ScrollBar&quot;;
&#9;&#9;&#9;Create&apos;ImageButton&apos;{
&#9;&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;&#9;BackgroundColor3 = Color3.new(1,1,1);
&#9;&#9;&#9;&#9;Size = UDim2.new(0, size, 0, size);
&#9;&#9;&#9;&#9;BackgroundTransparency = 0.5;
&#9;&#9;&#9;&#9;Name = &quot;ScrollThumb&quot;;
&#9;&#9;&#9;};
&#9;&#9;};
&#9;}

&#9;local ScrollDownFrame = ScrollFrame.ScrollDown
&#9;&#9;local ScrollDownGraphic = CreateGraphic(horizontal and &quot;arrow-right&quot; or &quot;arrow-down&quot;,Vector2.new(size,size))
&#9;&#9;ScrollDownGraphic.GUI.Parent = ScrollDownFrame
&#9;local ScrollUpFrame = ScrollFrame.ScrollUp
&#9;&#9;local ScrollUpGraphic = CreateGraphic(horizontal and &quot;arrow-left&quot; or &quot;arrow-up&quot;,Vector2.new(size,size))
&#9;&#9;ScrollUpGraphic.GUI.Parent = ScrollUpFrame
&#9;local ScrollBarFrame = ScrollFrame.ScrollBar
&#9;local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
&#9;&#9;local Decal = CreateGraphic(horizontal and &quot;vgrip&quot; or &quot;grip&quot;,Vector2.new(4),{BackgroundColor3=Color3.new(0,0,0),BackgroundTransparency=0.5})
&#9;&#9;Decal.GUI.Position = UDim2.new(0.5,-4,0.5,-4)
&#9;&#9;Decal.GUI.Parent = ScrollThumbFrame

&#9;local MouseDrag = Create&apos;ImageButton&apos;{
&#9;&#9;Active = false;
&#9;&#9;Size = UDim2.new(1.5, 0, 1.5, 0);
&#9;&#9;AutoButtonColor = false;
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;Name = &quot;MouseDrag&quot;;
&#9;&#9;Position = UDim2.new(-0.25, 0, -0.25, 0);
&#9;&#9;ZIndex = 10;
&#9;}
&#9;
&#9;local Class = {
&#9;&#9;GUI = ScrollFrame;
&#9;&#9;ScrollIndex = 0;
&#9;&#9;VisibleSpace = 0;
&#9;&#9;TotalSpace = 0;
&#9;&#9;PageIncrement = 1;
&#9;}
&#9;
&#9;local function GetScrollPercent()
&#9;&#9;return Class.ScrollIndex/(Class.TotalSpace-Class.VisibleSpace)
&#9;end
&#9;Class.GetScrollPercent = GetScrollPercent
&#9;
&#9;local function CanScrollDown()
&#9;&#9;return Class.ScrollIndex + Class.VisibleSpace &lt; Class.TotalSpace
&#9;end
&#9;Class.CanScrollDown = CanScrollDown
&#9;Class.CanScrollRight = CanScrollDown
&#9;
&#9;local function CanScrollUp()
&#9;&#9;return Class.ScrollIndex &gt; 0
&#9;end
&#9;Class.CanScrollUp = CanScrollUp
&#9;Class.CanScrollLeft = CanScrollUp
&#9;
&#9;local ScrollStyle = {BackgroundColor3=Color3.new(0,0,0),BackgroundTransparency=0}
&#9;local ScrollStyle_ds = {BackgroundColor3=Color3.new(0,0,0),BackgroundTransparency=0.7}
&#9;
&#9;local last_down
&#9;local last_up
&#9;local UpdateScrollThumb = horizontal
&#9;and function()
&#9;&#9;ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,size)
&#9;&#9;if ScrollThumbFrame.AbsoluteSize.x &lt; size then
&#9;&#9;&#9;ScrollThumbFrame.Size = UDim2.new(0,size,0,size)
&#9;&#9;end
&#9;&#9;local bar_size = ScrollBarFrame.AbsoluteSize.x
&#9;&#9;ScrollThumbFrame.Position = UDim2.new(GetScrollPercent()*(bar_size - ScrollThumbFrame.AbsoluteSize.x)/bar_size,0,0,0)
&#9;end
&#9;or function()
&#9;&#9;ScrollThumbFrame.Size = UDim2.new(0,size,Class.VisibleSpace/Class.TotalSpace,0)
&#9;&#9;if ScrollThumbFrame.AbsoluteSize.y &lt; size then
&#9;&#9;&#9;ScrollThumbFrame.Size = UDim2.new(0,size,0,size)
&#9;&#9;end
&#9;&#9;local bar_size = ScrollBarFrame.AbsoluteSize.y
&#9;&#9;ScrollThumbFrame.Position = UDim2.new(0,0,GetScrollPercent()*(bar_size - ScrollThumbFrame.AbsoluteSize.y)/bar_size,0)
&#9;end
&#9;
&#9;local function Update()
&#9;&#9;local t = Class.TotalSpace
&#9;&#9;local v = Class.VisibleSpace
&#9;&#9;local s = Class.ScrollIndex
&#9;&#9;if v &lt;= t then
&#9;&#9;&#9;if s &gt; 0 then
&#9;&#9;&#9;&#9;if s + v &gt; t then
&#9;&#9;&#9;&#9;&#9;Class.ScrollIndex = t - v
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Class.ScrollIndex = 0
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;Class.ScrollIndex = 0
&#9;&#9;end
&#9;&#9;
&#9;&#9;if Class.UpdateCallback then
&#9;&#9;&#9;if Class.UpdateCallback(Class) == false then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;local down = CanScrollDown()
&#9;&#9;local up = CanScrollUp()
&#9;&#9;if down ~= last_down then
&#9;&#9;&#9;last_down = down
&#9;&#9;&#9;ScrollDownFrame.Active = down
&#9;&#9;&#9;ScrollDownFrame.AutoButtonColor = down
&#9;&#9;&#9;ScrollDownGraphic.Stylist.SetProperties(down and ScrollStyle or ScrollStyle_ds)
&#9;&#9;&#9;ScrollDownFrame.BackgroundTransparency = down and 0.5 or 0.7
&#9;&#9;end
&#9;&#9;if up ~= last_up then
&#9;&#9;&#9;last_up = up
&#9;&#9;&#9;ScrollUpFrame.Active = up
&#9;&#9;&#9;ScrollUpFrame.AutoButtonColor = up
&#9;&#9;&#9;ScrollUpGraphic.Stylist.SetProperties(up and ScrollStyle or ScrollStyle_ds)
&#9;&#9;&#9;ScrollUpFrame.BackgroundTransparency = up and 0.5 or 0.7
&#9;&#9;end
&#9;&#9;ScrollThumbFrame.Visible = down or up
&#9;&#9;UpdateScrollThumb()
&#9;end
&#9;Class.Update = Update
&#9;
&#9;local function ScrollDown()
&#9;&#9;Class.ScrollIndex = Class.ScrollIndex + Class.PageIncrement
&#9;&#9;Update()
&#9;end
&#9;Class.ScrollDown = ScrollDown
&#9;Class.ScrollRight = ScrollDown

&#9;local function ScrollUp()
&#9;&#9;Class.ScrollIndex = Class.ScrollIndex - Class.PageIncrement
&#9;&#9;Update()
&#9;end
&#9;Class.ScrollUp = ScrollUp
&#9;Class.ScrollLeft = ScrollUp

&#9;local function ScrollTo(index)
&#9;&#9;Class.ScrollIndex = index
&#9;&#9;Update()
&#9;end
&#9;Class.ScrollTo = ScrollTo
&#9;
&#9;local function SetScrollPercent(percent)
&#9;&#9;Class.ScrollIndex = math.floor((Class.TotalSpace - Class.VisibleSpace)*percent + 0.5)
&#9;&#9;Update()
&#9;end
&#9;Class.SetScrollPercent = SetScrollPercent
&#9;
&#9;-- fixes AutoButtonColor
&#9;local function ResetButtonColor(button)
&#9;&#9;local active = button.Active
&#9;&#9;button.Active = not active
&#9;&#9;button.Active = active
&#9;end
&#9;
&#9;SetZIndexOnChanged(ScrollFrame)
&#9;
&#9;local scroll_event_id = 0
&#9;ScrollDownFrame.MouseButton1Down:connect(function()
&#9;&#9;scroll_event_id = tick()
&#9;&#9;local current = scroll_event_id
&#9;&#9;local up_con
&#9;&#9;up_con = MouseDrag.MouseButton1Up:connect(function()
&#9;&#9;&#9;scroll_event_id = tick()
&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;ResetButtonColor(ScrollDownFrame)
&#9;&#9;&#9;up_con:disconnect(); drag = nil
&#9;&#9;end)
&#9;&#9;MouseDrag.Parent = GetScreen(ScrollFrame)
&#9;&#9;ScrollDown()
&#9;&#9;wait(0.2) -- delay before auto scroll
&#9;&#9;while scroll_event_id == current do
&#9;&#9;&#9;ScrollDown()
&#9;&#9;&#9;if not CanScrollDown() then break end
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;end)
&#9;
&#9;ScrollDownFrame.MouseButton1Up:connect(function()
&#9;&#9;scroll_event_id = tick()
&#9;end)

&#9;ScrollUpFrame.MouseButton1Down:connect(function()
&#9;&#9;scroll_event_id = tick()
&#9;&#9;local current = scroll_event_id
&#9;&#9;local up_con
&#9;&#9;up_con = MouseDrag.MouseButton1Up:connect(function()
&#9;&#9;&#9;scroll_event_id = tick()
&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;ResetButtonColor(ScrollUpFrame)
&#9;&#9;&#9;up_con:disconnect(); drag = nil
&#9;&#9;end)
&#9;&#9;MouseDrag.Parent = GetScreen(ScrollFrame)
&#9;&#9;ScrollUp()
&#9;&#9;wait(0.2)
&#9;&#9;while scroll_event_id == current do
&#9;&#9;&#9;ScrollUp()
&#9;&#9;&#9;if not CanScrollUp() then break end
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;end)

&#9;ScrollUpFrame.MouseButton1Up:connect(function()
&#9;&#9;scroll_event_id = tick()
&#9;end)
&#9;
&#9;ScrollBarFrame.MouseButton1Down:connect(horizontal
&#9;and function(x,y)
&#9;&#9;scroll_event_id = tick()
&#9;&#9;local current = scroll_event_id
&#9;&#9;local up_con
&#9;&#9;up_con = MouseDrag.MouseButton1Up:connect(function()
&#9;&#9;&#9;scroll_event_id = tick()
&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;ResetButtonColor(ScrollUpFrame)
&#9;&#9;&#9;up_con:disconnect(); drag = nil
&#9;&#9;end)
&#9;&#9;MouseDrag.Parent = GetScreen(ScrollFrame)
&#9;&#9;if x &gt; ScrollThumbFrame.AbsolutePosition.x then
&#9;&#9;&#9;ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
&#9;&#9;&#9;wait(0.2)
&#9;&#9;&#9;while scroll_event_id == current do
&#9;&#9;&#9;&#9;if x &lt; ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
&#9;&#9;&#9;&#9;ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
&#9;&#9;&#9;wait(0.2)
&#9;&#9;&#9;while scroll_event_id == current do
&#9;&#9;&#9;&#9;if x &gt; ScrollThumbFrame.AbsolutePosition.x then break end
&#9;&#9;&#9;&#9;ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;or function(x,y)
&#9;&#9;scroll_event_id = tick()
&#9;&#9;local current = scroll_event_id
&#9;&#9;local up_con
&#9;&#9;up_con = MouseDrag.MouseButton1Up:connect(function()
&#9;&#9;&#9;scroll_event_id = tick()
&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;ResetButtonColor(ScrollUpFrame)
&#9;&#9;&#9;up_con:disconnect(); drag = nil
&#9;&#9;end)
&#9;&#9;MouseDrag.Parent = GetScreen(ScrollFrame)
&#9;&#9;if y &gt; ScrollThumbFrame.AbsolutePosition.y then
&#9;&#9;&#9;ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
&#9;&#9;&#9;wait(0.2)
&#9;&#9;&#9;while scroll_event_id == current do
&#9;&#9;&#9;&#9;if y &lt; ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
&#9;&#9;&#9;&#9;ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
&#9;&#9;&#9;wait(0.2)
&#9;&#9;&#9;while scroll_event_id == current do
&#9;&#9;&#9;&#9;if y &gt; ScrollThumbFrame.AbsolutePosition.y then break end
&#9;&#9;&#9;&#9;ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)

&#9;ScrollThumbFrame.MouseButton1Down:connect(horizontal
&#9;and function(x,y)
&#9;&#9;scroll_event_id = tick()
&#9;&#9;local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
&#9;&#9;local drag_con
&#9;&#9;local up_con
&#9;&#9;drag_con = MouseDrag.MouseMoved:connect(function(x,y)
&#9;&#9;&#9;local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
&#9;&#9;&#9;local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
&#9;&#9;&#9;local bar_abs_one = bar_abs_pos + bar_drag
&#9;&#9;&#9;x = x - mouse_offset
&#9;&#9;&#9;x = x &lt; bar_abs_pos and bar_abs_pos or x &gt; bar_abs_one and bar_abs_one or x
&#9;&#9;&#9;x = x - bar_abs_pos
&#9;&#9;&#9;SetScrollPercent(x/(bar_drag))
&#9;&#9;end)
&#9;&#9;up_con = MouseDrag.MouseButton1Up:connect(function()
&#9;&#9;&#9;scroll_event_id = tick()
&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;ResetButtonColor(ScrollThumbFrame)
&#9;&#9;&#9;drag_con:disconnect(); drag_con = nil
&#9;&#9;&#9;up_con:disconnect(); drag = nil
&#9;&#9;end)
&#9;&#9;MouseDrag.Parent = GetScreen(ScrollFrame)
&#9;end
&#9;or function(x,y)
&#9;&#9;scroll_event_id = tick()
&#9;&#9;local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
&#9;&#9;local drag_con
&#9;&#9;local up_con
&#9;&#9;drag_con = MouseDrag.MouseMoved:connect(function(x,y)
&#9;&#9;&#9;local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
&#9;&#9;&#9;local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
&#9;&#9;&#9;local bar_abs_one = bar_abs_pos + bar_drag
&#9;&#9;&#9;y = y - mouse_offset
&#9;&#9;&#9;y = y &lt; bar_abs_pos and bar_abs_pos or y &gt; bar_abs_one and bar_abs_one or y
&#9;&#9;&#9;y = y - bar_abs_pos
&#9;&#9;&#9;SetScrollPercent(y/(bar_drag))
&#9;&#9;end)
&#9;&#9;up_con = MouseDrag.MouseButton1Up:connect(function()
&#9;&#9;&#9;scroll_event_id = tick()
&#9;&#9;&#9;MouseDrag.Parent = nil
&#9;&#9;&#9;ResetButtonColor(ScrollThumbFrame)
&#9;&#9;&#9;drag_con:disconnect(); drag_con = nil
&#9;&#9;&#9;up_con:disconnect(); drag = nil
&#9;&#9;end)
&#9;&#9;MouseDrag.Parent = GetScreen(ScrollFrame)
&#9;end)
&#9;
&#9;Update()

&#9;return Class,ScrollFrame
end

lib.ScrollBar = CreateScrollBar

--[[DEPEND:
GetPadding.lua;
]]

doc[&quot;StackingFrame&quot;] = [==[
StackingFrame ( GuiObject `frame`, bool `horizontal`, bool `alignment` ) [constructor]
&#9;returns: StackingFrame `object`, Frame `stacking_frame`

Creates a frame that automatically resizes based on the objects it contains.
These objects are automatically positioned to stack next to each other.
Objects that have their Visible property set to false become ignored.

Arguments:
&#9;`frame`
&#9;&#9;If specified, then it will be used as the StackingFrame.
&#9;&#9;Children that exist in this object beforehand will be added to the StackingFrame automatically. 
&#9;&#9;Use the AddObject function to add children afterwards.
&#9;&#9;Optional; defaults to a new Frame.

&#9;`horizontal`
&#9;&#9;If true, objects will be positioned horizontally instead of vertically.
&#9;&#9;Optional; defaults to false

&#9;`alignment`
&#9;&#9;If true, objects will be aligned to the right if vertical (else left), or the bottom if horizontal (else top).
&#9;&#9;Optional; defaults to false

Returns:
&#9;`object`
&#9;&#9;The StackingFrame object.

&#9;`stacking_frame`
&#9;&#9;The stacking frame GUI.


StackingFrame Class:
&#9;Contains the following members:

&#9;Readonly:
&#9;&#9;GUI
&#9;&#9;&#9;The stacking frame GUI.

&#9;&#9;List
&#9;&#9;&#9;The table containing the objects in the stacking frame.
&#9;&#9;&#9;Should only be used for ordering items! Use AddObject and RemoveObject accordingly!

&#9;Methods:
&#9;&#9;AddObject ( GuiObject `object`, number `index` )
&#9;&#9;&#9;Adds `object` to the list.
&#9;&#9;&#9;If `index` is specified, the object is added at that position in the list.
&#9;&#9;&#9;Otherwise, it is added to the end.

&#9;&#9;RemoveObject ( number `index` )
&#9;&#9;&#9;Removes the object at `index` in the list.
&#9;&#9;&#9;`index` can be an object in the list.
&#9;&#9;&#9;`index` can be nil, in which case the last item in the list is used.
&#9;&#9;&#9;`index` is clamped within the range of the list.

&#9;&#9;MoveObject ( number `index`, number `to` )
&#9;&#9;&#9;Moves the object at `index` to the new index `to`.
&#9;&#9;&#9;`index` and `to` can be objects in the list.
&#9;&#9;&#9;`index` and `to` can be nil, in which case the last item in the list is used.
&#9;&#9;&#9;`index` and `to` are clamped within the range of the list.

&#9;&#9;GetIndex ( Instance `object` )
&#9;&#9;&#9;Returns the index of `object` in the stacking frame, if it exists there.

&#9;&#9;SetPadding ( number `padding`, number `border` )
&#9;&#9;&#9;Sets the amount of space between and around children, in pixels.
&#9;&#9;&#9;`padding` is the amount of space between each child.
&#9;&#9;&#9;`border` is the amount of space around all children.
&#9;&#9;&#9;
&#9;&#9;Update ( )
&#9;&#9;&#9;Updates the object.

&#9;&#9;Destroy ( )
&#9;&#9;&#9;Releases the resources used by this object.
&#9;&#9;&#9;Run this if you&apos;re no longer using this object.
]==]

local function CreateStackingFrame(Frame,horizontal,alignment)
&#9;Frame = Frame or Instance.new(&quot;Frame&quot;)
&#9;local children = {}
&#9;local connections = {}
&#9;local border = 0
&#9;local padding = 0
&#9;local style_pad = 0
&#9;local event_id = 0
&#9;local Update

&#9;if horizontal then
&#9;&#9;if alignment then
&#9;&#9;&#9;Update = function()
&#9;&#9;&#9;&#9;event_id = event_id + 1; local eid = event_id
&#9;&#9;&#9;&#9;local height = 0
&#9;&#9;&#9;&#9;local length = 0
&#9;&#9;&#9;&#9;for i,child in pairs(children) do
&#9;&#9;&#9;&#9;&#9;if event_id ~= eid then return end
&#9;&#9;&#9;&#9;&#9;if child.Visible then
&#9;&#9;&#9;&#9;&#9;&#9;local abs = child.AbsoluteSize
&#9;&#9;&#9;&#9;&#9;&#9;child.Position = UDim2.new(0,length + border,1,-abs.y - border)
&#9;&#9;&#9;&#9;&#9;&#9;height = abs.y &gt; height and abs.y or height
&#9;&#9;&#9;&#9;&#9;&#9;length = length + abs.x + padding
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if event_id ~= eid then return end
&#9;&#9;&#9;&#9;if #children &gt; 0 then
&#9;&#9;&#9;&#9;&#9;Frame.Size = UDim2.new(0,length - padding + border*2 + style_pad,0,height + border*2 + style_pad)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Frame.Size = UDim2.new(0,border*2 + style_pad,0,border*2 + style_pad)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;Update = function()
&#9;&#9;&#9;&#9;event_id = event_id + 1; local eid = event_id
&#9;&#9;&#9;&#9;local height = 0
&#9;&#9;&#9;&#9;local length = 0
&#9;&#9;&#9;&#9;for i,child in pairs(children) do
&#9;&#9;&#9;&#9;&#9;if event_id ~= eid then return end
&#9;&#9;&#9;&#9;&#9;if child.Visible then
&#9;&#9;&#9;&#9;&#9;&#9;local abs = child.AbsoluteSize
&#9;&#9;&#9;&#9;&#9;&#9;child.Position = UDim2.new(0,length + border,0,border)
&#9;&#9;&#9;&#9;&#9;&#9;height = abs.y &gt; height and abs.y or height
&#9;&#9;&#9;&#9;&#9;&#9;length = length + abs.x + padding
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if event_id ~= eid then return end
&#9;&#9;&#9;&#9;if #children &gt; 0 then
&#9;&#9;&#9;&#9;&#9;Frame.Size = UDim2.new(0,length - padding + border*2 + style_pad,0,height + border*2 + style_pad)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Frame.Size = UDim2.new(0,border*2 + style_pad,0,border*2 + style_pad)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;if alignment then
&#9;&#9;&#9;Update = function()
&#9;&#9;&#9;&#9;event_id = event_id + 1; local eid = event_id
&#9;&#9;&#9;&#9;local width = 0
&#9;&#9;&#9;&#9;local length = 0
&#9;&#9;&#9;&#9;for i,child in pairs(children) do
&#9;&#9;&#9;&#9;&#9;if event_id ~= eid then return end
&#9;&#9;&#9;&#9;&#9;if child.Visible then
&#9;&#9;&#9;&#9;&#9;&#9;local abs = child.AbsoluteSize
&#9;&#9;&#9;&#9;&#9;&#9;child.Position = UDim2.new(1,-abs.x - border,0,length + border)
&#9;&#9;&#9;&#9;&#9;&#9;width = abs.x &gt; width and abs.x or width
&#9;&#9;&#9;&#9;&#9;&#9;length = length + abs.y + padding
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if event_id ~= eid then return end
&#9;&#9;&#9;&#9;if #children &gt; 0 then
&#9;&#9;&#9;&#9;&#9;Frame.Size = UDim2.new(0,width + border*2 + style_pad,0,length - padding + border*2 + style_pad)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Frame.Size = UDim2.new(0,border*2 + style_pad,0,border*2 + style_pad)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;Update = function()
&#9;&#9;&#9;&#9;event_id = event_id + 1; local eid = event_id
&#9;&#9;&#9;&#9;local width = 0
&#9;&#9;&#9;&#9;local length = 0
&#9;&#9;&#9;&#9;for i,child in pairs(children) do
&#9;&#9;&#9;&#9;&#9;if event_id ~= eid then return end
&#9;&#9;&#9;&#9;&#9;if child.Visible then
&#9;&#9;&#9;&#9;&#9;&#9;local abs = child.AbsoluteSize
&#9;&#9;&#9;&#9;&#9;&#9;child.Position = UDim2.new(0,border,0,length + border)
&#9;&#9;&#9;&#9;&#9;&#9;width = abs.x &gt; width and abs.x or width
&#9;&#9;&#9;&#9;&#9;&#9;length = length + abs.y + padding
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if event_id ~= eid then return end
&#9;&#9;&#9;&#9;if #children &gt; 0 then
&#9;&#9;&#9;&#9;&#9;Frame.Size = UDim2.new(0,width + border*2 + style_pad,0,length - padding + border*2 + style_pad)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Frame.Size = UDim2.new(0,border*2 + style_pad,0,border*2 + style_pad)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;local function SetPadding(pad,bor)
&#9;&#9;padding = pad or padding
&#9;&#9;border = bor or border
&#9;&#9;Update()
&#9;end

&#9;local function AddObject(object,index)
&#9;&#9;if object:IsA&quot;GuiObject&quot; then
&#9;&#9;&#9;if type(index) == &quot;number&quot; then
&#9;&#9;&#9;&#9;table.insert(children,index,object)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;table.insert(children,object)
&#9;&#9;&#9;end
&#9;&#9;&#9;connections[object] = object.Changed:connect(function(p)
&#9;&#9;&#9;&#9;if p == &quot;AbsoluteSize&quot; or p == &quot;Visible&quot; then
&#9;&#9;&#9;&#9;&#9;Update()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;object.Parent = Frame
&#9;&#9;&#9;Update()
&#9;&#9;end
&#9;end
&#9;
&#9;local function RemoveObject(index)
&#9;&#9;if index == nil then
&#9;&#9;&#9;index = #children
&#9;&#9;elseif type(index) ~= &quot;number&quot; then
&#9;&#9;&#9;index = GetIndex(children,index)
&#9;&#9;end
&#9;&#9;if index then
&#9;&#9;&#9;index = ClampIndex(children,index)
&#9;&#9;&#9;local object = table.remove(children,index)
&#9;&#9;&#9;if connections[object] then
&#9;&#9;&#9;&#9;connections[object]:disconnect()
&#9;&#9;&#9;&#9;connections[object] = nil
&#9;&#9;&#9;end
&#9;&#9;&#9;object.Parent = nil
&#9;&#9;&#9;Update()
&#9;&#9;&#9;return object
&#9;&#9;end
&#9;end
&#9;
&#9;local function MoveObject(index,to)
&#9;&#9;if index == nil then
&#9;&#9;&#9;index = #children
&#9;&#9;elseif type(index) ~= &quot;number&quot; then
&#9;&#9;&#9;index = GetIndex(children,index)
&#9;&#9;end
&#9;&#9;if to == nil then
&#9;&#9;&#9;to = #children
&#9;&#9;elseif type(to) ~= &quot;number&quot; then
&#9;&#9;&#9;to = GetIndex(children,to)
&#9;&#9;end
&#9;&#9;if index and to then
&#9;&#9;&#9;index = ClampIndex(children,index)
&#9;&#9;&#9;to = ClampIndex(children,to)
&#9;&#9;&#9;local child = table.remove(children,index)
&#9;&#9;&#9;table.insert(children,to,child)
&#9;&#9;&#9;Update()
&#9;&#9;end
&#9;end
&#9;
&#9;local Class = {
&#9;&#9;GUI = Frame;
&#9;&#9;List = children;
&#9;&#9;Update = Update;
&#9;&#9;SetPadding = SetPadding;
&#9;&#9;AddObject = AddObject;
&#9;&#9;RemoveObject = RemoveObject;
&#9;&#9;MoveObject = MoveObject;
&#9;&#9;GetIndex = function(object)
&#9;&#9;&#9;return GetIndex(children,object)
&#9;&#9;end;
&#9;}
&#9;
&#9;local function Destroy()
&#9;&#9;for i,v in pairs(children) do
&#9;&#9;&#9;if connections[v] then
&#9;&#9;&#9;&#9;connections[v]:disconnect()
&#9;&#9;&#9;&#9;connections[v] = nil
&#9;&#9;&#9;end
&#9;&#9;&#9;v.Parent = nil
&#9;&#9;&#9;children[i] = nil
&#9;&#9;end
&#9;&#9;for i,con in pairs(connections) do
&#9;&#9;&#9;con:disconnect()
&#9;&#9;&#9;connections[i] = nil
&#9;&#9;end
&#9;&#9;for k in pairs(Class) do
&#9;&#9;&#9;Class[k] = nil
&#9;&#9;end
&#9;&#9;Frame:Destroy()
&#9;end
&#9;Class.Destroy = Destroy

&#9;for i,child in pairs(Frame:GetChildren()) do
&#9;&#9;AddObject(child,i)
&#9;end
&#9;
&#9;Update()
&#9;
&#9;Frame.Changed:connect(function(p)
&#9;&#9;if p == &quot;AbsoluteSize&quot; or p == &quot;Style&quot; then
&#9;&#9;&#9;local old = style_pad
&#9;&#9;&#9;style_pad = GetPadding(Frame)*2
&#9;&#9;&#9;if style_pad ~= old then
&#9;&#9;&#9;&#9;Update()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;
&#9;return Class,Frame
end

lib.StackingFrame = CreateStackingFrame

--[[DEPEND:
ScrollBar.lua;
]]

doc[&quot;ScrollingList&quot;] = [==[
ScrollingList ( table `list`, number `entry_height` ) [constructor]
&#9;returns: ScrollingList `object`, Frame `scrolling_frame`

Creates a scrollable list designed to display a large number of items.

Arguments:
&#9;`list`
&#9;&#9;Contains the items to display in the list.
&#9;&#9;Items will be converted to a string before being displayed, so this may contain any type of value.
&#9;&#9;Optional; defaults to an empty table
&#9;&#9;
&#9;`entry_height`
&#9;&#9;Specifies the height, in pixels, of each displayed entry.
&#9;&#9;Optional; defaults to ]==]..ENTRY_SIZE..[==[

Returns:
&#9;`object`
&#9;&#9;The ScrollingList object.

&#9;`scrolling_frame`
&#9;&#9;The scrolling list GUI.


ScrollingList Class:
&#9;This class contains the folloing members.
&#9;Readonly:
&#9;&#9;List
&#9;&#9;&#9;The `list` table.
&#9;&#9;&#9;
&#9;&#9;GUI
&#9;&#9;&#9;The scrolling list GUI.

&#9;&#9;Scroll
&#9;&#9;&#9;A object for the list&apos;s scroll bar.

&#9;&#9;EntryStylist
&#9;&#9;&#9;A stylist containing every displayed entry.

&#9;Methods:
&#9;&#9;AddEntry ( * `item`, number `index` )
&#9;&#9;&#9;Add an entry to the list and updates automatically.
&#9;&#9;&#9;`item` is the value to add to the list.
&#9;&#9;&#9;If `index` is specified, `item` will be added to the list at `index`.
&#9;&#9;&#9;Otherwise, it will be added to the end.

&#9;&#9;AddEntries ( table `items`, number `index` )
&#9;&#9;&#9;Adds a group of entries to the list.
&#9;&#9;&#9;`items` is a table of values that will be added to the list.
&#9;&#9;&#9;If `index` is specified, the items will be inserted into the list starting at `index.
&#9;&#9;&#9;Otherwise, they will be added to the end.

&#9;&#9;RemoveEntry ( * `item` )
&#9;&#9;&#9;Removes the first occurance of `item` in the list.
&#9;&#9;&#9;If `item` is a number, the item at that index in the list will be removed.
&#9;&#9;&#9;If `item` is not specified, then the list item in the list will be removed.

&#9;&#9;Update ( )
&#9;&#9;&#9;Updates the display to reflect the list.

&#9;&#9;Destroy ( )
&#9;&#9;&#9;Releases the resources used by this object.
&#9;&#9;&#9;Run this if you&apos;re no longer using this object.
]==]

local function CreateScrollingList(List,entryHeight)
&#9;List = List or {}
&#9;entryHeight = entyHeight or ENTRY_SIZE
&#9;
&#9;local ScrollingListFrame = Instance.new(&quot;Frame&quot;)
&#9;ScrollingListFrame.Size = UDim2.new(0,300,0,200)
&#9;ScrollingListFrame.Style = Enum.FrameStyle.RobloxRound
&#9;ScrollingListFrame.Active = true
&#9;ScrollingListFrame.Name = &quot;ScrollingListFrame&quot;
&#9;
&#9;local ListViewFrame = Instance.new(&quot;Frame&quot;,ScrollingListFrame)
&#9;ListViewFrame.Name = &quot;ListViewFrame&quot;
&#9;ListViewFrame.BackgroundTransparency = 1
&#9;ListViewFrame.Size = UDim2.new(1,-entryHeight,1,0)

&#9;local EntryStylist = Stylist{
&#9;&#9;Name = &quot;ListEntry&quot;;
&#9;&#9;Font = &quot;ArialBold&quot;;
&#9;&#9;FontSize = &quot;Size14&quot;;
&#9;&#9;TextColor3 = Color3.new(1,1,1);
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;TextXAlignment = &quot;Left&quot;;
&#9;}
&#9;local EntryTemplate = Instance.new(&quot;TextLabel&quot;)
&#9;
&#9;local EntryFrames = {}

&#9;local Scroll,ScrollBarFrame = CreateScrollBar(false,entryHeight)
&#9;ScrollBarFrame.Size = UDim2.new(0,entryHeight,1,0)
&#9;ScrollBarFrame.Position = UDim2.new(1,-entryHeight,0,0)
&#9;ScrollBarFrame.Parent = ScrollingListFrame

&#9;local Update = Scroll.Update
&#9;
&#9;local Class = {
&#9;&#9;List = List;
&#9;&#9;GUI = ScrollingListFrame;
&#9;&#9;Scroll = Scroll;
&#9;&#9;Update = Update;
&#9;&#9;EntryStylist = EntryStylist;
&#9;}
&#9;
&#9;Scroll.UpdateCallback = function()
&#9;&#9;local visible_space = Scroll.VisibleSpace
&#9;&#9;-- update current entries
&#9;&#9;for i = 1,visible_space do
&#9;&#9;&#9;local item = List[i + Scroll.ScrollIndex]
&#9;&#9;&#9;if item then
&#9;&#9;&#9;&#9;local entry = EntryFrames[i]
&#9;&#9;&#9;&#9;if not entry then
&#9;&#9;&#9;&#9;&#9;entry = EntryTemplate:Clone()
&#9;&#9;&#9;&#9;&#9;EntryStylist.AddObject(entry)
&#9;&#9;&#9;&#9;&#9;EntryFrames[i] = entry
&#9;&#9;&#9;&#9;&#9;entry.Parent = ListViewFrame
&#9;&#9;&#9;&#9;&#9;entry.ZIndex = ScrollingListFrame.ZIndex
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;entry.Text = tostring(item)
&#9;&#9;&#9;&#9;entry.Position = UDim2.new(0,0,0,(i-1)*entryHeight)
&#9;&#9;&#9;&#9;entry.Size = UDim2.new(1,0,0,entryHeight)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;local entry = EntryFrames[i]
&#9;&#9;&#9;&#9;if entry then
&#9;&#9;&#9;&#9;&#9;EntryStylist.RemoveObject(entry)
&#9;&#9;&#9;&#9;&#9;entry:Destroy()
&#9;&#9;&#9;&#9;&#9;EntryFrames[i] = nil
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;-- remove extra entries (occurs only when #EntryFrames &gt; VisibleSpace)
&#9;&#9;for i = Scroll.VisibleSpace+1,#EntryFrames do
&#9;&#9;&#9;local entry = EntryFrames[i]
&#9;&#9;&#9;if entry then
&#9;&#9;&#9;&#9;EntryStylist.RemoveObject(entry)
&#9;&#9;&#9;&#9;entry:Destroy()
&#9;&#9;&#9;end
&#9;&#9;&#9;EntryFrames[i] = nil
&#9;&#9;end
&#9;end

&#9;-- add an item to the list; optional list index
&#9;local function AddEntry(item,index)
&#9;&#9;if index then
&#9;&#9;&#9;table.insert(List,index,item)
&#9;&#9;else
&#9;&#9;&#9;table.insert(List,item)
&#9;&#9;end
&#9;&#9;Scroll.TotalSpace = #List
&#9;&#9;Update()
&#9;end
&#9;Class.AddEntry = AddEntry
&#9;
&#9;-- add multiple items to list
&#9;local function AddEntries(items,index)
&#9;&#9;if index then
&#9;&#9;&#9;for i = 1,#items do
&#9;&#9;&#9;&#9;table.insert(List,index+i-1,items[i])
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;for i = 1,#items do
&#9;&#9;&#9;&#9;table.insert(List,items[i])
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;Scroll.TotalSpace = #List
&#9;&#9;Update()
&#9;end
&#9;Class.AddEntries = AddEntries

&#9;-- remove entry from list; may be a list index or an item in the list
&#9;local function RemoveEntry(item)
&#9;&#9;if type(item) == &quot;number&quot; or type(item) == &quot;nil&quot; then
&#9;&#9;&#9;table.remove(List,item)
&#9;&#9;else
&#9;&#9;&#9;for i,v in pairs(List) do
&#9;&#9;&#9;&#9;if v == item then
&#9;&#9;&#9;&#9;&#9;table.remove(List,i)
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;Scroll.TotalSpace = #List
&#9;&#9;Update()
&#9;end
&#9;Class.RemoveEntry = RemoveEntry

&#9;SetZIndexOnChanged(ScrollingListFrame)

&#9;ListViewFrame.Changed:connect(function(p)
&#9;&#9;if p == &quot;AbsoluteSize&quot; then
&#9;&#9;&#9;Scroll.VisibleSpace = math.floor(ListViewFrame.AbsoluteSize.y/entryHeight)
&#9;&#9;&#9;Update()
&#9;&#9;end
&#9;end)
&#9;
&#9;function Class.Destroy()
&#9;&#9;for i in pairs(Class) do
&#9;&#9;&#9;Class[i] = nil
&#9;&#9;end
&#9;&#9;for i,v in pairs(EntryFrames) do
&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;EntryFrames[i] = nil
&#9;&#9;end
&#9;&#9;EntryStylist.Destroy()
&#9;&#9;Scroll.Destroy()
&#9;&#9;ScrollingListFrame:Destroy()
&#9;end

&#9;return Class,ScrollingListFrame
end

lib.ScrollingList = CreateScrollingList

--[[DEPEND:
ScrollBar.lua;
]]

doc[&quot;ScrollingContainer&quot;] = [==[
ScrollingContainer ( bool `v_scroll_bar`, bool `h_scroll_bar`, number `scroll_width` ) [constructor]
&#9;returns: ScrollingContainer `object`, Frame `scrolling_container`

Creates a container that can be scrolled with one or more scroll bars.
The scroll bars update dynamically based on the size of the boundary and container.
Objects in the container are automatically clipped to display only within the boundary.

Arguments:
&#9;`v_scroll_bar`
&#9;&#9;Indicates whether the container should have a vertical scroll bar.
&#9;&#9;Optional; defaults to true

&#9;`h_scroll_bar`
&#9;&#9;Indicates whether the container should have a horizontal scroll bar.
&#9;&#9;Optional; defaults to false
&#9;&#9;
&#9;`scroll_width`
&#9;&#9;Indicates the width the scrollbar(s).
&#9;&#9;Optional; defaults to ]==]..ENTRY_SIZE..[==[

Returns:
&#9;`object`
&#9;&#9;The ScrollingContainer object.

&#9;`scrolling_container`
&#9;&#9;The scrolling container GUI.


ScrollingContainer Class:
&#9;This class contains the following members:

&#9;Readonly:
&#9;&#9;Boundary
&#9;&#9;&#9;A Frame that represents the visible area, clipping off any overflowing content.

&#9;&#9;Container
&#9;&#9;&#9;A Frame that will contain other items to be displayed in the scrolling container.

&#9;&#9;GUI
&#9;&#9;&#9;The scrolling container GUI.

&#9;&#9;HScroll
&#9;&#9;&#9;The horizontal scroll bar object (if available).

&#9;&#9;VScroll
&#9;&#9;&#9;The vertical scroll bar object (if available).
&#9;&#9;
&#9;Methods:
&#9;&#9;Update ( )
&#9;&#9;&#9;Updates the scroll bar (or both, if present).
]==]

local function CreateScrollingContainer(v_scroll,h_scroll,scroll_width)
&#9;if v_scroll == nil then v_scroll = true end
&#9;scroll_width = scroll_width or ENTRY_SIZE

&#9;local ParentFrame = Create&apos;Frame&apos;{
&#9;&#9;Name = &quot;ScrollingContainer&quot;;
&#9;&#9;Size = UDim2.new(0,300,0,200);
&#9;&#9;BackgroundTransparency = 1;
&#9;}

&#9;local Boundary = Create&apos;Frame&apos;{
&#9;&#9;Name = &quot;Boundary&quot;;
&#9;&#9;BackgroundColor3 = Color3.new(0,0,0);
&#9;&#9;BorderColor3 = Color3.new(1,1,1);
&#9;&#9;ClipsDescendants = true;
&#9;&#9;Parent = ParentFrame;
&#9;}

&#9;local Container = Create&apos;Frame&apos;{
&#9;&#9;Name = &quot;Container&quot;;
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;Parent = Boundary;
&#9;}
&#9;
&#9;local Class = {
&#9;&#9;GUI = ParentFrame;
&#9;&#9;Boundary = Boundary;
&#9;&#9;Container = Container;
&#9;}
&#9;
&#9;if v_scroll and h_scroll then
&#9;&#9;local VScroll = CreateScrollBar(false,scroll_width)
&#9;&#9;VScroll.PageIncrement = scroll_width
&#9;&#9;VScroll.GUI.Position = UDim2.new(1,-scroll_width,0,0)
&#9;&#9;VScroll.GUI.Size = UDim2.new(0,scroll_width,1,-scroll_width)
&#9;&#9;VScroll.GUI.Parent = ParentFrame
&#9;&#9;local VUpdate = VScroll.Update
&#9;&#9;VScroll.UpdateCallback = function()
&#9;&#9;&#9;Container.Position = UDim2.new(0,Container.Position.X.Offset,0,-VScroll.ScrollIndex)
&#9;&#9;end
&#9;&#9;
&#9;&#9;local HScroll = CreateScrollBar(true,scroll_width)
&#9;&#9;HScroll.PageIncrement = scroll_width
&#9;&#9;HScroll.GUI.Position = UDim2.new(0,0,1,-scroll_width)
&#9;&#9;HScroll.GUI.Size = UDim2.new(1,-scroll_width,0,scroll_width)
&#9;&#9;HScroll.GUI.Parent = ParentFrame
&#9;&#9;local HUpdate = HScroll.Update
&#9;&#9;HScroll.UpdateCallback = function()
&#9;&#9;&#9;Container.Position = UDim2.new(0,-HScroll.ScrollIndex,0,Container.Position.Y.Offset)
&#9;&#9;end

&#9;&#9;Boundary.Size = UDim2.new(1,-scroll_width,1,-scroll_width)
&#9;&#9;
&#9;&#9;local function Update()
&#9;&#9;&#9;VUpdate()
&#9;&#9;&#9;HUpdate()
&#9;&#9;end
&#9;&#9;
&#9;&#9;local function SizeChanged(p)
&#9;&#9;&#9;if p == &quot;AbsoluteSize&quot; then
&#9;&#9;&#9;&#9;VScroll.TotalSpace = Container.AbsoluteSize.y
&#9;&#9;&#9;&#9;VScroll.VisibleSpace = Boundary.AbsoluteSize.y
&#9;&#9;&#9;&#9;HScroll.TotalSpace = Container.AbsoluteSize.x
&#9;&#9;&#9;&#9;HScroll.VisibleSpace = Boundary.AbsoluteSize.x
&#9;&#9;&#9;&#9;Update()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;Boundary.Changed:connect(SizeChanged)
&#9;&#9;Container.Changed:connect(SizeChanged)
&#9;&#9;Class.VScroll = VScroll
&#9;&#9;Class.HScroll = HScroll
&#9;&#9;Class.Update = Update
&#9;&#9;SizeChanged(&quot;AbsoluteSize&quot;)
&#9;&#9;Update()
&#9;elseif v_scroll then
&#9;&#9;local Scroll = CreateScrollBar(false,scroll_width)
&#9;&#9;Scroll.PageIncrement = scroll_width
&#9;&#9;Scroll.GUI.Position = UDim2.new(1,-scroll_width,0,0)
&#9;&#9;Scroll.GUI.Size = UDim2.new(0,scroll_width,1,0)
&#9;&#9;Scroll.GUI.Parent = ParentFrame
&#9;&#9;local Update = Scroll.Update
&#9;&#9;Scroll.UpdateCallback = function()
&#9;&#9;&#9;Container.Position = UDim2.new(0,Container.Position.X.Offset,0,-Scroll.ScrollIndex)
&#9;&#9;end
&#9;&#9;local function SizeChanged(p)
&#9;&#9;&#9;if p == &quot;AbsoluteSize&quot; then
&#9;&#9;&#9;&#9;Scroll.TotalSpace = Container.AbsoluteSize.y
&#9;&#9;&#9;&#9;Scroll.VisibleSpace = Boundary.AbsoluteSize.y
&#9;&#9;&#9;&#9;Update()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;Boundary.Changed:connect(SizeChanged)
&#9;&#9;Container.Changed:connect(SizeChanged)
&#9;&#9;Class.VScroll = Scroll
&#9;&#9;Class.Update = Update
&#9;&#9;SizeChanged(&quot;AbsoluteSize&quot;)
&#9;&#9;Update()
&#9;elseif h_scroll then
&#9;&#9;local Scroll = CreateScrollBar(true,scroll_width)
&#9;&#9;Scroll.PageIncrement = scroll_width
&#9;&#9;Scroll.GUI.Position = UDim2.new(0,0,1,-scroll_width)
&#9;&#9;Scroll.GUI.Size = UDim2.new(1,0,0,scroll_width)
&#9;&#9;Scroll.GUI.Parent = ParentFrame
&#9;&#9;local Update = Scroll.Update
&#9;&#9;Scroll.UpdateCallback = function()
&#9;&#9;&#9;Container.Position = UDim2.new(0,-Scroll.ScrollIndex,0,Container.Position.Y.Offset)
&#9;&#9;end
&#9;&#9;local function SizeChanged(p)
&#9;&#9;&#9;if p == &quot;AbsoluteSize&quot; then
&#9;&#9;&#9;&#9;Scroll.TotalSpace = Container.AbsoluteSize.x
&#9;&#9;&#9;&#9;Scroll.VisibleSpace = Boundary.AbsoluteSize.x
&#9;&#9;&#9;&#9;Update()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;Boundary.Changed:connect(SizeChanged)
&#9;&#9;Container.Changed:connect(SizeChanged)
&#9;&#9;Class.HScroll = Scroll
&#9;&#9;Class.Update = Update
&#9;&#9;SizeChanged(&quot;AbsoluteSize&quot;)
&#9;&#9;Update()
&#9;end
&#9;
&#9;return Class,ParentFrame
end

lib.ScrollingContainer = CreateScrollingContainer

--[[DEPEND:
SetZIndex.lua;
Stylist.lua;
Graphic.lua;
ScrollBar.lua;
]]

doc[&quot;DetailedList&quot;] = [==[
DetailedList ( table `row_data_list`, table `column_scheme`, number `row_height` ) [constructor]
&#9;returns: DetailedList `object`, Frame `list_frame`

Creates a customizable list for displaying data.

Arguments:
&#9;`row_data_list`
&#9;&#9;Holds all the data to be displayed.
&#9;&#9;It contains tables that hold data for each row in the list (see Row Data).
&#9;&#9;Optional; defaults to an empty table.

&#9;`column_scheme`
&#9;&#9;Contains information for how each column will be displayed (see Column Scheme).
&#9;&#9;
&#9;`row_height`
&#9;&#9;Sets the height of each row, in pixels.
&#9;&#9;Optional; defaults to ]==]..ENTRY_SIZE..[==[

Returns:
&#9;`object`
&#9;&#9;The DetailedList object.
&#9;&#9;
&#9;`list_frame`
&#9;&#9;The DetailedList GUI.


DetailedList Class:
&#9;This class contains the following members:
&#9;
&#9;Readonly:
&#9;&#9;GUI
&#9;&#9;&#9;The DetailedList GUI.

&#9;&#9;Data
&#9;&#9;&#9;The `row_data_list` table.

&#9;&#9;Scroll
&#9;&#9;&#9;A class for the list&apos;s scroll bar.

&#9;&#9;Stylist
&#9;&#9;&#9;A table that contains Stylist classes for controlling the appearance of the DetailedList.
&#9;&#9;&#9;It contains the following values:
&#9;&#9;&#9;&#9;Global: Every object in the DetailedList
&#9;&#9;&#9;&#9;Cell: Every cell in list
&#9;&#9;&#9;&#9;Header: Each cell the top (header) row of the list.
&#9;&#9;&#9;&#9;RowSpan: Each cell container of each row.
&#9;&#9;&#9;&#9;Rows: A table that contains Stylists for each row in the list, referenced by the row&apos;s data table.
&#9;&#9;&#9;&#9;Columns: A table that contains Stylists for each column in the list.

&#9;Methods:
&#9;&#9;AddRow ( table `row_data`, number `index`, table `style` )
&#9;&#9;&#9;Adds a new row to the list.
&#9;&#9;&#9;`row_data` is the data to display in the row.
&#9;&#9;&#9;If `index` is specified, then the row will be added to that place in the list, instead of the end.
&#9;&#9;&#9;If `style` is specified, then the row&apos;s Stylist will be created with it.
&#9;&#9;&#9;Returns the row&apos;s data table.

&#9;&#9;RemoveRow ( number `index` )
&#9;&#9;&#9;Removes a row from the list.
&#9;&#9;&#9;`index` may be a numerical index in the list, or a row data table in the list.
&#9;&#9;&#9;Returns the removed row&apos;s data table.

&#9;&#9;UpdateRow ( number `index` )
&#9;&#9;&#9;Updates the specified row to reflect the data in `row_data_list`
&#9;&#9;&#9;`index` may be a numerical index in the list, or a row data table in the list.

&#9;&#9;Update ( )
&#9;&#9;&#9;Updates the display.

&#9;&#9;Destroy ( )
&#9;&#9;&#9;Releases the resources used by this object.
&#9;&#9;&#9;Run this if you&apos;re no longer using this object.


Column Scheme:
&#9;The column scheme is a list of tables, each representing a column that will appear in the DetailedList.
&#9;Each of these tables contain the following entries:
&#9;&#9;[&quot;type&quot;] = (string)
&#9;&#9;&#9;Indicates the data type of the column.
&#9;&#9;&#9;More entries may be required depending on the type (see Column Scheme Types).
&#9;&#9;[&quot;name&quot;] = (string)
&#9;&#9;&#9;The name of the column. This will appear in the header at the top.
&#9;&#9;[&quot;width&quot;] = (UDim)
&#9;&#9;&#9;The width of the column.
&#9;&#9;[&quot;style&quot;] = (table)
&#9;&#9;&#9;Optional. Defines a custom style for the column.
&#9;&#9;&#9;If defined, then it will become the corresponding stylist in `object`.Stylist.Columns.


Row Data:
&#9;A row data table holds the data for each cell of a row.
&#9;Each entry corresponds to each cell in the row.
&#9;Their types should match up with the column scheme (see Column Scheme Types).

&#9;Example (for scheme {&quot;check-box&quot;, &quot;image&quot;, &quot;text&quot;}):
&#9;&#9;row_data_list = {
&#9;&#9;&#9;{true, &quot;flower.png&quot;, &quot;Flowers&quot;};
&#9;&#9;&#9;{false, &quot;beehive.png&quot;, &quot;Bees&quot;};
&#9;&#9;}


Column Scheme Types:
&#9;Here are the possible data types, and their extra entries:
&#9;&#9;text
&#9;&#9;&#9;Row Data: string
&#9;&#9;&#9;&#9;The text to display in the cell.
&#9;&#9;&#9;Entries: none
&#9;&#9;image
&#9;&#9;&#9;Row Data: string
&#9;&#9;&#9;&#9;The Content string of the image to display in the cell.
&#9;&#9;&#9;Entries: none
&#9;&#9;text-button
&#9;&#9;&#9;Row Data: string
&#9;&#9;&#9;&#9;The text to display in the cell.
&#9;&#9;&#9;Entries:
&#9;&#9;&#9;&#9;[&quot;callback&quot;] = function (table `row_data`, table `object`)
&#9;&#9;&#9;&#9;&#9;Called when the button is clicked.
&#9;&#9;&#9;&#9;&#9;`row_data` is the button&apos;s row data.
&#9;&#9;&#9;&#9;&#9;`object` is the DetailedList object.
&#9;&#9;image-button
&#9;&#9;&#9;Row Data: string
&#9;&#9;&#9;&#9;The Content string of the image to display in the cell.
&#9;&#9;&#9;Entries:
&#9;&#9;&#9;&#9;[&quot;callback&quot;] = function (table `row_data`, table `object`)
&#9;&#9;&#9;&#9;&#9;Called when the button is clicked.
&#9;&#9;&#9;&#9;&#9;`row_data` is the button&apos;s row data.
&#9;&#9;&#9;&#9;&#9;`object` is the DetailedList object.
&#9;&#9;text-field
&#9;&#9;&#9;Row Data: string
&#9;&#9;&#9;&#9;The value displayed in the text field.
&#9;&#9;&#9;Entries:
&#9;&#9;&#9;&#9;[&quot;callback&quot;] = function (string `text`, table `row_data`, table `object`, bool `entered`)
&#9;&#9;&#9;&#9;&#9;Called when the field loses focus.
&#9;&#9;&#9;&#9;&#9;`text` is the field&apos;s current text.
&#9;&#9;&#9;&#9;&#9;`row_data` is the field&apos;s row data.
&#9;&#9;&#9;&#9;&#9;`object` is the DetailedList object.
&#9;&#9;&#9;&#9;&#9;`entered` is whether the user pressed enter to lose focus.
&#9;&#9;&#9;&#9;&#9;This function should return a string (usually same as `text`).
&#9;&#9;&#9;&#9;&#9;If nil or false is returned, then the field will be reverted to the text before the change.
&#9;&#9;check-box
&#9;&#9;&#9;Row Data: bool
&#9;&#9;&#9;&#9;The state of the check box.
&#9;&#9;&#9;Entries:
&#9;&#9;&#9;&#9;[&quot;checked&quot;] = string, table
&#9;&#9;&#9;&#9;&#9;The image (Content string) to display when the box is checked.
&#9;&#9;&#9;&#9;&#9;If a table, its entries are the arguments to make a new Graphic.
&#9;&#9;&#9;&#9;[&quot;unchecked&quot;] = string, table
&#9;&#9;&#9;&#9;&#9;The image (Content string) to display when the box is unchecked.
&#9;&#9;&#9;&#9;&#9;If a table, its entries are the arguments to make a new Graphic.
&#9;&#9;&#9;&#9;[&quot;callback&quot;] = function (table `row_data`, table `object`)
&#9;&#9;&#9;&#9;&#9;Called when the check box is clicked.
&#9;&#9;&#9;&#9;&#9;`row_data` is the button&apos;s row data.
&#9;&#9;&#9;&#9;&#9;`object` is the DetailedList object.
&#9;&#9;&#9;&#9;&#9;This function should return a bool, indicating if the check box should toggle its state.
&#9;&#9;drop-list (NOT IMPLEMENTED)
&#9;&#9;&#9;Row Data: string
&#9;&#9;&#9;&#9;The value displayed in the drop list.
&#9;&#9;&#9;Entries:
&#9;&#9;&#9;&#9;[&quot;items&quot;] = table
&#9;&#9;&#9;&#9;&#9;A list of items to appear in the drop list.
]==]

--[==[EXCLUDE:
detailed list notes

&#9;updating will take much more processing, due to amount of info per row
&#9;there aren&apos;t going to be millions of rows
&#9;so, go back to having frames for each row
&#9;but, still use row indexing
&#9;on update, stop displaying displayed rows, query new rows, display them

&#9;row frames in the RowFramesList table are referenced by data rows in the RowDataList table

&#9;PANIC: columns have a fixed width
&#9;when updating, resize each cell width using one of the following options:
&#9;-&gt;&#9;basic: columns have fixed, perminent width, defined by column scheme, calculated once on row addition
&#9;&#9;detailed view-like: columns have fixed width regardless of row content, recalculated when column tab is resized
&#9;&#9;table-like: each column width is recalculated based on its content, when a row is added/removed (expensive)

&#9;entry scheme:
&#9;&#9;a table that describes an entry to the list
&#9;&#9;keys are sequential, describing a part of the entry

&#9;&#9;Entry Data:
&#9;&#9;&#9;For a cell type, the acceptable entry data type is defined below.
&#9;&#9;&#9;If the entry is a table instead, the first value in that table is the original data,
&#9;&#9;&#9;while other keys defined will set the corresponding property of the cell.
&#9;&#9;&#9;Example:
&#9;&#9;&#9;&#9;As Data Type:&#9;&quot;A string&quot;
&#9;&#9;&#9;&#9;As Table:&#9;&#9;{&quot;A string&quot;, TextColor3 = Color3.new(1,0,0)}
&#9;&#9;Types:
&#9;&#9;Column Scheme Definition:&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Entry Data:
&#9;&#9;{&quot;text&quot;};&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;string
&#9;&#9;{&quot;image&quot;};&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;string
&#9;&#9;{&quot;text-button&quot;, callback = function};&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;string
&#9;&#9;{&quot;image-button&quot;, callback = function};&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;string
&#9;&#9;{&quot;text-field&quot;, callback = function};&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;string
&#9;&#9;{&quot;check-box&quot;, checked = string, unchecked = string, callback};&#9;&#9;bool
&#9;&#9;{&quot;drop-list&quot;, items = table};&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;string

&#9;&#9;Each scheme has a &apos;name&apos; key (string) and a &apos;width&apos; key (UDim), which define he name and width of the column
&#9;&#9;Each scheme can also have a &apos;style&apos; key, who&apos;s value is a table that defines properties for each cell as columns
]==]

local function CreateDetailedList(RowDataList,ColumnScheme,rowHeight)
&#9;RowDataList = RowDataList or {}
&#9;rowHeight = rowHeight or ENTRY_SIZE
&#9;local viewHeight = 0
&#9;local numRows = math.floor(viewHeight/rowHeight)
&#9;local scrollIndex = 0

&#9;local RowFramesList = {}&#9;-- holds a list of frames associated with RowDataList entries. This list is independent of RowDataList, and may be resorted
&#9;local RowFrameLookup = {}&#9;-- [data]=frame references
&#9;local RowDataLookup = {}&#9;-- [frame]=data references; it would be nice if this didn&apos;t have to exist
&#9;local DisplayedRows = {}&#9;-- a list of currently displayed row frames
&#9;local CellMetadata = {}&#9;&#9;-- extra data associated with a cell

&#9;local DetailedListFrame = Create&apos;Frame&apos;{
&#9;&#9;Size = UDim2.new(0,300,0,200);
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;Create&apos;Frame&apos;{
&#9;&#9;&#9;Name = &quot;ListViewFrame&quot;;
&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;Size = UDim2.new(1,-rowHeight,1,-rowHeight);
&#9;&#9;&#9;Position = UDim2.new(0,0,0,rowHeight);
&#9;&#9;};
&#9;&#9;Create&apos;Frame&apos;{
&#9;&#9;&#9;Name = &quot;ColumnHeaderFrame&quot;;
&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;Size = UDim2.new(1,-rowHeight,0,rowHeight);
&#9;&#9;&#9;Position = UDim2.new(0,0,0,0);
&#9;&#9;};
&#9;}
&#9;
&#9;local ListViewFrame = DetailedListFrame.ListViewFrame
&#9;local ColumnHeaderFrame = DetailedListFrame.ColumnHeaderFrame

---- Stylists
&#9;local GlobalStylist = CreateStylist{&#9;&#9;-- for all objects
&#9;&#9;TextColor3&#9;&#9;&#9;= Color3.new(1,1,1);
&#9;--&#9;TextXAlignment&#9;&#9;= Enum.TextXAlignment.Center;
&#9;--&#9;TextYAlignment&#9;&#9;= Enum.TextYAlignment.Center;
&#9;&#9;TextTransparency&#9;= 0;
&#9;&#9;Font&#9;&#9;&#9;&#9;= Enum.Font.ArialBold;
&#9;&#9;FontSize&#9;&#9;&#9;= Enum.FontSize.Size14;
&#9;}
&#9;local CellStylist = CreateStylist{&#9;&#9;-- for all cells
&#9;&#9;BackgroundColor3&#9;&#9;= Color3.new(0,0,0);
&#9;&#9;BorderColor3&#9;&#9;&#9;= Color3.new(1,1,1);
&#9;&#9;BorderSizePixel&#9;&#9;&#9;= 1;
&#9;&#9;BackgroundTransparency&#9;= 0.7;
&#9;}
&#9;GlobalStylist.AddStylist(CellStylist)
&#9;local HeaderStylist = CreateStylist{&#9;&#9;-- for all column headers
&#9;&#9;BackgroundColor3&#9;&#9;= Color3.new(1,1,1);
&#9;&#9;BorderColor3&#9;&#9;&#9;= Color3.new(1,1,1);
&#9;&#9;BorderSizePixel&#9;&#9;&#9;= 1;
&#9;&#9;BackgroundTransparency&#9;= 0.8;
&#9;}
&#9;GlobalStylist.AddStylist(HeaderStylist)
&#9;local RowSpanStylist = CreateStylist{&#9;&#9;-- for cell container of each row
&#9;&#9;BackgroundTransparency&#9;= 1;
&#9;}
&#9;GlobalStylist.AddStylist(RowSpanStylist)
&#9;local RowStylists = {}&#9;&#9;&#9;&#9;-- list of stylists for each row
&#9;local ColumnStylists = {}&#9;&#9;&#9;-- list of stylists for each column

&#9;local Scroll,ScrollBarFrame = CreateScrollBar(false,rowHeight)
&#9;Modify(ScrollBarFrame){
&#9;&#9;Size = UDim2.new(0,rowHeight,1,-rowHeight);
&#9;&#9;Position = UDim2.new(1,-rowHeight,0,rowHeight);
&#9;&#9;Parent = DetailedListFrame;
&#9;}

&#9;local Update = Scroll.Update

---- DetailedList Class
&#9;local Class = {
&#9;&#9;Data = RowDataList;
&#9;&#9;GUI = DetailedListFrame;
&#9;&#9;Stylist = {
&#9;&#9;&#9;Global = GlobalStylist;
&#9;&#9;&#9;Cell = CellStylist;
&#9;&#9;&#9;Header = HeaderStylist;
&#9;&#9;&#9;RowSpan = RowSpanStylist;
&#9;&#9;&#9;Rows = RowStylists;
&#9;&#9;&#9;Columns = ColumnStylists;
&#9;&#9;};
&#9;&#9;Update = Update;
&#9;}
&#9;
&#9;-- update row display
&#9;local event_id = 0
&#9;Scroll.UpdateCallback = function()
&#9;&#9;event_id = event_id + 1
&#9;&#9;local current_id = event_id
&#9;&#9;-- stop displaying previous rows
&#9;&#9;for i,row in pairs(DisplayedRows) do
&#9;&#9;&#9;if event_id ~= current_id then return end
&#9;&#9;&#9;row.Visible = false
&#9;&#9;&#9;DisplayedRows[i] = nil
&#9;&#9;end
&#9;&#9;-- query and display current rows
&#9;&#9;for i = 1,Scroll.VisibleSpace do
&#9;&#9;&#9;if event_id ~= current_id then return end
&#9;&#9;&#9;local row = RowFramesList[i + Scroll.ScrollIndex]
&#9;&#9;&#9;if row then
&#9;&#9;&#9;&#9;DisplayedRows[#DisplayedRows+1] = row
&#9;&#9;&#9;&#9;row.Position = UDim2.new(0,0,0,(i-1)*rowHeight)
&#9;&#9;&#9;&#9;row.Size = UDim2.new(1,0,0,rowHeight)
&#9;&#9;&#9;&#9;row.Visible = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;ListViewFrame.Changed:connect(function(p)
&#9;&#9;if p == &quot;AbsoluteSize&quot; then
&#9;&#9;&#9;Scroll.VisibleSpace = math.floor(ListViewFrame.AbsoluteSize.y/rowHeight)
&#9;&#9;&#9;Update()
&#9;&#9;end
&#9;end)

---- Row Sorting
&#9;local SortGraphic = Create&apos;Frame&apos;{
&#9;&#9;Name = &quot;SortGraphic&quot;;
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;Size = UDim2.new(0,rowHeight,0,rowHeight);
&#9;&#9;Position = UDim2.new(1,-rowHeight*0.75,0.5,-rowHeight/8);
&#9;}
&#9;local GraphicTextAlias = {[&quot;TextColor3&quot;]=&quot;BackgroundColor3&quot;;[&quot;TextTransparency&quot;]=&quot;BackgroundTransparency&quot;;[&quot;BorderSizePixel&quot;]=&quot;&quot;}
&#9;
&#9;local SortUpG,SortUp = CreateGraphic(&quot;arrow-up&quot;,Vector2.new(rowHeight,rowHeight))
&#9;GlobalStylist.AddStylist(SortUpG.Stylist,GraphicTextAlias)
&#9;SortUp.Visible = false
&#9;SortUp.Parent = SortGraphic
&#9;
&#9;local SortDownG,SortDown = CreateGraphic(&quot;arrow-down&quot;,Vector2.new(rowHeight,rowHeight))
&#9;GlobalStylist.AddStylist(SortDownG.Stylist,GraphicTextAlias)
&#9;SortDown.Visible = false
&#9;SortDown.Parent = SortGraphic
&#9;
&#9;-- sets the direction (up or down) and parent (column header)
&#9;local function SetSortGraphic(direction,parent)
&#9;&#9;if parent then
&#9;&#9;&#9;if parent.TextXAlignment == Enum.TextXAlignment.Right then
&#9;&#9;&#9;&#9;SortGraphic.Position = UDim2.new(0,0,0,0)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;SortGraphic.Position = UDim2.new(1,-rowHeight,0,0)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if direction &gt; 0 then
&#9;&#9;&#9;SortUp.Visible = true
&#9;&#9;&#9;SortDown.Visible = false
&#9;&#9;&#9;if SortGraphic.ZIndex ~= parent.ZIndex then
&#9;&#9;&#9;&#9;SetZIndex(SortGraphic,parent.ZIndex)
&#9;&#9;&#9;end
&#9;&#9;&#9;SortGraphic.Parent = parent
&#9;&#9;elseif direction &lt; 0 then
&#9;&#9;&#9;SortUp.Visible = false
&#9;&#9;&#9;SortDown.Visible = true
&#9;&#9;&#9;if SortGraphic.ZIndex ~= parent.ZIndex then
&#9;&#9;&#9;&#9;SetZIndex(SortGraphic,parent.ZIndex)
&#9;&#9;&#9;end
&#9;&#9;&#9;SortGraphic.Parent = parent
&#9;&#9;else
&#9;&#9;&#9;SortUp.Visible = false
&#9;&#9;&#9;SortDown.Visible = false
&#9;&#9;&#9;SortGraphic.Parent = nil
&#9;&#9;end
&#9;end
&#9;
&#9;-- sorts a column (at index) by a sort type (ascending/descending/none)
&#9;-- will eventually be added to class
&#9;local function SortColumn(index,sort_type)
&#9;&#9;-- re-sort to original sorting
&#9;&#9;for i,data in pairs(RowDataList) do
&#9;&#9;&#9;RowFramesList[i] = RowFrameLookup[data]
&#9;&#9;end
&#9;&#9;local header = ColumnHeaderFrame:GetChildren()[index] -- eww
&#9;&#9;SetSortGraphic(0)
&#9;&#9;-- sort depending on type, if provided
&#9;&#9;if sort_type == SORT.ASCENDING then
&#9;&#9;&#9;table.sort(RowFramesList,function(a,b)
&#9;&#9;&#9;&#9;local adata,bdata = RowDataLookup[a][index],RowDataLookup[b][index]
&#9;&#9;&#9;&#9;-- a and b should always have the same type
&#9;&#9;&#9;&#9;local t = type(adata)
&#9;&#9;&#9;&#9;if t == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;adata,bdata = adata[1],bdata[1]
&#9;&#9;&#9;&#9;&#9;t = type(adata)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if t == &quot;boolean&quot; then
&#9;&#9;&#9;&#9;&#9;return tostring(adata) &gt; tostring(bdata)
&#9;&#9;&#9;&#9;elseif t == &quot;number&quot; or t == &quot;string&quot; then
&#9;&#9;&#9;&#9;&#9;return adata &lt; bdata
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;return tostring(adata) &lt; tostring(bdata)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;SetSortGraphic(1,header)
&#9;&#9;elseif sort_type == SORT.DESCENDING then
&#9;&#9;&#9;table.sort(RowFramesList,function(a,b)
&#9;&#9;&#9;&#9;local adata,bdata = RowDataLookup[a][index],RowDataLookup[b][index]
&#9;&#9;&#9;&#9;-- a and b should always have the same type
&#9;&#9;&#9;&#9;local t = type(adata)
&#9;&#9;&#9;&#9;if t == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;adata,bdata = adata[1],bdata[1]
&#9;&#9;&#9;&#9;&#9;t = type(adata)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if t == &quot;boolean&quot; then
&#9;&#9;&#9;&#9;&#9;return tostring(adata) &lt; tostring(bdata)
&#9;&#9;&#9;&#9;elseif t == &quot;number&quot; or t == &quot;string&quot; then
&#9;&#9;&#9;&#9;&#9;return adata &gt; bdata
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;return tostring(adata) &gt; tostring(bdata)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;local header = ColumnHeaderFrame:GetChildren()[index]
&#9;&#9;&#9;SetSortGraphic(-1,header)
&#9;&#9;end
&#9;&#9;Update()
&#9;end

---- Initialize column scheme
&#9;local RowTemplate = Create&apos;Frame&apos;{
&#9;&#9;Name = &quot;Row&quot;;
&#9;&#9;Visible = false;
&#9;}

&#9;-- appends a space character to aligned text as cheap padding
&#9;local function SetText(frame,text)
&#9;&#9;if text == nil then
&#9;&#9;&#9;frame.Text = &quot;&quot;;
&#9;&#9;else
&#9;&#9;&#9;text = tostring(text)
&#9;&#9;&#9;if #text &gt; 0 and frame.TextXAlignment ~= Enum.TextXAlignment.Center then
&#9;&#9;&#9;&#9;if frame.TextXAlignment == Enum.TextXAlignment.Left then
&#9;&#9;&#9;&#9;&#9;frame.Text = &quot; &quot; .. text
&#9;&#9;&#9;&#9;elseif frame.TextXAlignment == Enum.TextXAlignment.Right then
&#9;&#9;&#9;&#9;&#9;frame.Text = text .. &quot; &quot;
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;frame.Text = text
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;-- used by check-box, which uses either an image or a Graphic.
&#9;local function SetImageOrGraphic(cell,active)
&#9;&#9;local md = CellMetadata[cell]
&#9;&#9;local checked,unchecked = md.Checked,md.Unchecked
&#9;&#9;if type(unchecked) == &quot;string&quot; then
&#9;&#9;&#9;cell.Image = active and &quot;&quot; or unchecked
&#9;&#9;elseif type(unchecked) == &quot;table&quot; then
&#9;&#9;&#9;if active then
&#9;&#9;&#9;&#9;unchecked.GUI.Parent = nil
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if unchecked.GUI.ZIndex ~= cell.ZIndex then
&#9;&#9;&#9;&#9;&#9;SetZIndex(unchecked.GUI,cell.ZIndex)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;unchecked.GUI.Parent = cell
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if type(checked) == &quot;string&quot; then
&#9;&#9;&#9;cell.Image = active and checked or &quot;&quot;
&#9;&#9;elseif type(checked) == &quot;table&quot; then
&#9;&#9;&#9;if active then
&#9;&#9;&#9;&#9;if checked.GUI.ZIndex ~= cell.ZIndex then
&#9;&#9;&#9;&#9;&#9;SetZIndex(checked.GUI,cell.ZIndex)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;checked.GUI.Parent = cell
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;checked.GUI.Parent = nil
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;local current_sort_header = nil
&#9;local current_sort_type = SORT.NONE

&#9;-- generate a template for rows
&#9;local ColumnHeaderPos = UDim.new()
&#9;for i,cell_scheme in pairs(ColumnScheme) do
&#9;&#9;local columnStylist = CreateStylist(cell_scheme.style)
&#9;&#9;ColumnStylists[i] = columnStylist
&#9;--&#9;CellStylist.AddStylist(columnStylist)
&#9;--&#9;columnStylist.AddStylist(HeaderStylist)
&#9;&#9;local cell_type = cell_scheme.type
&#9;&#9;local template
&#9;&#9;if cell_type == &quot;text&quot; then
&#9;&#9;&#9;template = Instance.new(&quot;TextLabel&quot;,RowTemplate)
&#9;&#9;&#9;template.Name = &quot;Text&quot;
&#9;&#9;elseif cell_type == &quot;image&quot; then
&#9;&#9;&#9;template = Instance.new(&quot;ImageLabel&quot;,RowTemplate)
&#9;&#9;&#9;template.Name = &quot;Image&quot;
&#9;&#9;elseif cell_type == &quot;text-button&quot; then
&#9;&#9;&#9;template = Instance.new(&quot;TextButton&quot;,RowTemplate)
&#9;&#9;&#9;template.Name = &quot;TextButton&quot;
&#9;&#9;elseif cell_type == &quot;image-button&quot; then
&#9;&#9;&#9;template = Instance.new(&quot;ImageButton&quot;,RowTemplate)
&#9;&#9;&#9;template.Name = &quot;ImageButton&quot;
&#9;&#9;elseif cell_type == &quot;text-field&quot; then
&#9;&#9;&#9;template = Instance.new(&quot;TextBox&quot;,RowTemplate)
&#9;&#9;&#9;template.Name = &quot;TextField&quot;
&#9;&#9;&#9;template.ClearTextOnFocus = false
&#9;&#9;elseif cell_type == &quot;check-box&quot; then
&#9;&#9;&#9;template = Instance.new(&quot;ImageButton&quot;,RowTemplate)
&#9;&#9;&#9;template.Name = &quot;CheckBox&quot;
&#9;&#9;end
&#9;&#9;
&#9;&#9;-- create the header row
&#9;&#9;local ColumnHeader = Create&apos;TextButton&apos;{
&#9;&#9;&#9;Name = &quot;ColumnHeader&quot;;
&#9;&#9;&#9;Parent = ColumnHeaderFrame;
&#9;&#9;}
&#9;&#9;HeaderStylist.AddObject(ColumnHeader)
&#9;&#9;columnStylist.AddObject(ColumnHeader)
&#9;&#9;SetText(ColumnHeader,cell_scheme.name)
&#9;&#9;-- sort on click
&#9;&#9;ColumnHeader.MouseButton1Click:connect(function()
&#9;&#9;&#9;if current_sort_header == ColumnHeader then
&#9;&#9;&#9;&#9;-- cycle between ascending, descending, and none
&#9;&#9;&#9;&#9;if current_sort_type == SORT.ASCENDING then
&#9;&#9;&#9;&#9;&#9;current_sort_type = SORT.DESCENDING
&#9;&#9;&#9;&#9;elseif current_sort_type == SORT.DESCENDING then
&#9;&#9;&#9;&#9;&#9;current_sort_type = SORT.NONE
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;current_sort_type = SORT.ASCENDING
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;current_sort_type = SORT.ASCENDING
&#9;&#9;&#9;end
&#9;&#9;&#9;current_sort_header = ColumnHeader
&#9;&#9;&#9;SortColumn(i,current_sort_type)
&#9;&#9;end)
&#9;&#9;local Width = cell_scheme.width
&#9;&#9;ColumnHeader.Size = UDim2.new(Width.Scale,Width.Offset,1,0)
&#9;&#9;ColumnHeader.Position = UDim2.new(ColumnHeaderPos.Scale,ColumnHeaderPos.Offset,0,0)
&#9;&#9;ColumnHeaderPos = ColumnHeaderPos + Width
&#9;end
&#9;ColumnHeaderPos = nil

---- Class functions

&#9;-- update the row frame to reflect the row data
&#9;function Class.UpdateRow(index)
&#9;&#9;local RowData
&#9;&#9;if type(index) == &quot;number&quot; then
&#9;&#9;&#9;RowData = RowDataList[index]
&#9;&#9;else
&#9;&#9;&#9;RowData = index
&#9;&#9;end

&#9;&#9;local Row = RowFrameLookup[RowData]
&#9;&#9;local Cells = Row:GetChildren() -- eww
&#9;&#9;local CellColPos = UDim.new()
&#9;&#9;for i,cell_scheme in pairs(ColumnScheme) do
&#9;&#9;&#9;local cell_type = cell_scheme.type
&#9;&#9;&#9;local Cell = Cells[i]
&#9;&#9;&#9;local CellData = RowData[i]
&#9;&#9;&#9;local Width = cell_scheme.width
&#9;&#9;&#9;if cell_type == &quot;text&quot; then
&#9;&#9;&#9;&#9;SetText(Cell,CellData)
&#9;&#9;&#9;elseif cell_type == &quot;image&quot; then
&#9;&#9;&#9;&#9;Cell.Image = CellData
&#9;&#9;&#9;elseif cell_type == &quot;text-button&quot; then
&#9;&#9;&#9;&#9;SetText(Cell,CellData)
&#9;&#9;&#9;elseif cell_type == &quot;image-button&quot; then
&#9;&#9;&#9;&#9;Cell.Image = CellData
&#9;&#9;&#9;elseif cell_type == &quot;text-field&quot; then
&#9;&#9;&#9;&#9;SetText(Cell,CellData)
&#9;&#9;&#9;elseif cell_type == &quot;check-box&quot; then
&#9;&#9;&#9;&#9;SetImageOrGraphic(Cell,CellData)
&#9;&#9;&#9;end
&#9;&#9;&#9;Cell.Size = UDim2.new(Width.Scale,Width.Offset,1,0) -- this would be a lot easier if UDim2.new accepts UDims
&#9;&#9;&#9;Cell.Position = UDim2.new(CellColPos.Scale,CellColPos.Offset,0,0)
&#9;&#9;&#9;CellColPos = CellColPos + Width
&#9;&#9;end
&#9;end

&#9;-- add a new row to the list; optional list index
&#9;function Class.AddRow(RowData,index,style)
&#9;&#9;-- TODO: verify that data matches column scheme
&#9;&#9;local NewRow = RowTemplate:Clone()
&#9;&#9;if index then
&#9;&#9;&#9;index = index &gt; #RowDataList+1 and #RowDataList+1 or index &lt; 1 and 1 or index
&#9;&#9;&#9;table.insert(RowDataList,index,RowData)
&#9;&#9;&#9;table.insert(RowFramesList,index,NewRow)
&#9;&#9;else
&#9;&#9;&#9;table.insert(RowDataList,RowData)
&#9;&#9;&#9;table.insert(RowFramesList,NewRow)
&#9;&#9;end
&#9;&#9;Scroll.TotalSpace = #RowDataList
&#9;&#9;RowSpanStylist.AddObject(NewRow)
&#9;&#9;NewRow.Size = UDim2.new(1,0,0,rowHeight)
&#9;&#9;NewRow.ZIndex = DetailedListFrame.ZIndex
&#9;&#9;NewRow.Parent = ListViewFrame
&#9;&#9;local Cells = NewRow:GetChildren()
&#9;&#9;local CellColPos = UDim.new()
&#9;&#9;local rowStylist = CreateStylist(style)
&#9;&#9;RowStylists[RowData] = rowStylist
&#9;--&#9;CellStylist.AddStylist(rowStylist)
&#9;&#9;for i,cell_scheme in pairs(ColumnScheme) do
&#9;&#9;&#9;local cell_type = cell_scheme.type
&#9;&#9;&#9;local Cell = Cells[i]
&#9;&#9;&#9;Cell.ZIndex = DetailedListFrame.ZIndex
&#9;&#9;&#9;CellStylist.AddObject(Cell)
&#9;&#9;&#9;ColumnStylists[i].AddObject(Cell)
&#9;&#9;&#9;rowStylist.AddObject(Cell)
&#9;&#9;&#9;local CellData = RowData[i]
&#9;&#9;&#9;local Width = cell_scheme.width
&#9;&#9;&#9;if cell_type == &quot;text&quot; then
&#9;&#9;&#9;&#9;SetText(Cell,CellData)
&#9;&#9;&#9;elseif cell_type == &quot;image&quot; then
&#9;&#9;&#9;&#9;Cell.Image = CellData
&#9;&#9;&#9;elseif cell_type == &quot;text-button&quot; then
&#9;&#9;&#9;&#9;SetText(Cell,CellData)
&#9;&#9;&#9;&#9;Cell.MouseButton1Click:connect(function()
&#9;&#9;&#9;&#9;&#9;cell_scheme.callback(RowData,Class)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;elseif cell_type == &quot;image-button&quot; then
&#9;&#9;&#9;&#9;Cell.Image = CellData
&#9;&#9;&#9;&#9;Cell.MouseButton1Click:connect(function()
&#9;&#9;&#9;&#9;&#9;cell_scheme.callback(RowData,Class)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;elseif cell_type == &quot;text-field&quot; then
&#9;&#9;&#9;&#9;SetText(Cell,CellData)
&#9;&#9;&#9;&#9;local last_text = CellData
&#9;&#9;&#9;&#9;Cell.FocusLost:connect(function(enter)
&#9;&#9;&#9;&#9;&#9;local text = cell_scheme.callback(Cell.Text,RowData,Class,enter)
&#9;&#9;&#9;&#9;&#9;if text then
&#9;&#9;&#9;&#9;&#9;&#9;RowData[i] = text
&#9;&#9;&#9;&#9;&#9;&#9;SetText(Cell,text)
&#9;&#9;&#9;&#9;&#9;&#9;last_text = text
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;SetText(Cell,last_text)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;elseif cell_type == &quot;check-box&quot; then
&#9;&#9;&#9;&#9;CellMetadata[Cell] = {}
&#9;&#9;&#9;&#9;if type(cell_scheme.checked) == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;local graphic = CreateGraphic(cell_scheme.checked[1],cell_scheme.checked[2])
&#9;&#9;&#9;&#9;&#9;SetZIndex(graphic.GUI,DetailedListFrame.ZIndex)
&#9;&#9;&#9;&#9;&#9;GlobalStylist.AddStylist(graphic.Stylist,GraphicTextAlias)
&#9;&#9;&#9;&#9;&#9;CellMetadata[Cell].Checked = graphic
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;CellMetadata[Cell].Checked = cell_scheme.checked
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if type(cell_scheme.unchecked) == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;local graphic = CreateGraphic(cell_scheme.unchecked[1],cell_scheme.unchecked[2])
&#9;&#9;&#9;&#9;&#9;SetZIndex(graphic.GUI,DetailedListFrame.ZIndex)
&#9;&#9;&#9;&#9;&#9;GlobalStylist.AddStylist(graphic.Stylist,GraphicTextAlias)
&#9;&#9;&#9;&#9;&#9;CellMetadata[Cell].Unchecked = graphic
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;CellMetadata[Cell].Unchecked = cell_scheme.unchecked
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;SetImageOrGraphic(Cell,CellData)
&#9;&#9;&#9;&#9;Cell.MouseButton1Click:connect(function()
&#9;&#9;&#9;&#9;&#9;local continue = true
&#9;&#9;&#9;&#9;&#9;if cell_scheme.callback then
&#9;&#9;&#9;&#9;&#9;&#9;continue = cell_scheme.callback(RowData,Class)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;if continue then
&#9;&#9;&#9;&#9;&#9;&#9;RowData[i] = not RowData[i]
&#9;&#9;&#9;&#9;&#9;&#9;SetImageOrGraphic(Cell,RowData[i])
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;&#9;Cell.Size = UDim2.new(Width.Scale,Width.Offset,1,0) -- this would be a lot easier if UDim2.new accepts UDims
&#9;&#9;&#9;Cell.Position = UDim2.new(CellColPos.Scale,CellColPos.Offset,0,0)
&#9;&#9;&#9;CellColPos = CellColPos + Width
&#9;&#9;end
&#9;&#9;RowFrameLookup[RowData] = NewRow
&#9;&#9;RowDataLookup[NewRow] = RowData
&#9;&#9;Update()
&#9;&#9;return RowData
&#9;end

&#9;-- remove entry from the list; may be a list index or an item in the list
&#9;function Class.RemoveRow(index)
&#9;&#9;local RowData
&#9;&#9;if type(index) == &quot;number&quot; or type(index) == &quot;nil&quot; then
&#9;&#9;&#9;RowData = table.remove(RowDataList,index)
&#9;&#9;else
&#9;&#9;&#9;for i,v in pairs(RowDataList) do
&#9;&#9;&#9;&#9;if v == index then
&#9;&#9;&#9;&#9;&#9;RowData = table.remove(RowDataList,i)
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if RowData then
&#9;&#9;&#9;local stylist = RowStylists[RowData]
&#9;&#9;&#9;stylist.Destroy()
&#9;&#9;&#9;RowStylists[RowData] = nil

&#9;&#9;&#9;local frame = RowFrameLookup[RowData]
&#9;&#9;&#9;RowDataLookup[frame] = nil
&#9;&#9;&#9;RowFrameLookup[RowData] = nil
&#9;&#9;&#9;for i,rowframe in pairs(RowFramesList) do
&#9;&#9;&#9;&#9;if rowframe == frame then
&#9;&#9;&#9;&#9;&#9;for i,cell in pairs(rowframe:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;GlobalStylist.RemoveObject(cell)
&#9;&#9;&#9;&#9;&#9;&#9;ColumnStylists[i].RemoveObject(cell)
&#9;&#9;&#9;&#9;&#9;&#9;CellStylist.RemoveObject(cell)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;table.remove(RowFramesList,i)
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;Scroll.TotalSpace = #RowDataList
&#9;&#9;&#9;for i,rowframe in pairs(DisplayedRows) do
&#9;&#9;&#9;&#9;if rowframe == frame then
&#9;&#9;&#9;&#9;&#9;table.remove(DisplayedRows,i)
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;frame:Destroy()
&#9;&#9;end
&#9;&#9;Update()
&#9;&#9;return RowData
&#9;end

&#9;do
&#9;&#9;local tmp = {}
&#9;&#9;for k,v in pairs(RowDataList) do
&#9;&#9;&#9;tmp[k] = v
&#9;&#9;&#9;RowDataList[k] = nil
&#9;&#9;end
&#9;&#9;for i=1,#tmp do
&#9;&#9;&#9;Class.AddRow(tmp[i])
&#9;&#9;end
&#9;end

---- Finish

&#9;-- when the list&apos;s Zindex changes, update the ZIndex of everything
&#9;SetZIndexOnChanged(DetailedListFrame)

&#9;-- attempts to free resources
&#9;function Class.Destroy()
&#9;&#9;local function empty_table(t)
&#9;&#9;&#9;for k in pairs(t) do t[k] = nil end
&#9;&#9;end
&#9;&#9;empty_table(Class.Stylist)
&#9;&#9;empty_table(Class)
&#9;&#9;empty_table(RowFramesList)
&#9;&#9;empty_table(RowFrameLookup)
&#9;&#9;empty_table(RowDataLookup)
&#9;&#9;empty_table(DisplayedRows)
&#9;&#9;empty_table(CellMetadata)
&#9;&#9;GlobalStylist.Destroy()
&#9;&#9;CellStylist.Destroy()
&#9;&#9;HeaderStylist.Destroy()
&#9;&#9;RowSpanStylist.Destroy()
&#9;&#9;for k,v in pairs(RowStylists) do
&#9;&#9;&#9;v.Destroy()
&#9;&#9;&#9;RowStylists[k] = nil
&#9;&#9;end
&#9;&#9;for k,v in pairs(ColumnStylists) do
&#9;&#9;&#9;v.Destroy()
&#9;&#9;&#9;ColumnStylists[k] = nil
&#9;&#9;end
&#9;&#9;Scroll.Destroy()
&#9;&#9;RowTemplate:Destroy()
&#9;&#9;DetailedListFrame:Destroy()
&#9;end

&#9;Class.Update()
&#9;
&#9;return Class,DetailedListFrame
end

lib.DetailedList = CreateDetailedList

--[[DEPEND:
SetZIndex.lua;
Stylist.lua;
AutoSizeLabel.lua;
StackingFrame.lua;
]]

doc[&quot;TabContainer&quot;] = [==[
TabContainer ( table `content_list`, number `selected_height`, number `tab_height` ) [constructor]
&#9;returns: TabContainer `object`, Frame `tab_container`

Creates a container that can hold multiple GuiObjects in a single space by using tabs.
A GuiObject added to the container gets its own tab, which shows the GuiObject&apos;s Name, and displays the GuiObject when clicked.

Arguments:
&#9;`content_list`
&#9;&#9;A list of GuiObjects to be initially added to the container.
&#9;&#9;Optional; defaults to an empty table

&#9;`selected_height`
&#9;&#9;The height of a selected tab.
&#9;&#9;Optional; defaults to 24

&#9;`tab_height`
&#9;&#9;The height, in pixels, of a tab that is not selected.
&#9;&#9;Optional; defaults to 20

Returns:
&#9;`object`
&#9;&#9;The TabContainer object.
&#9;`tab_container`
&#9;&#9;The container GUI.


TabContainer Class:
&#9;This class contains the following members:

&#9;Readonly:
&#9;&#9;GUI
&#9;&#9;&#9;The container GUI.

&#9;&#9;TabStylist
&#9;&#9;&#9;A Stylist object that controls the appearance of unselected tabs.
&#9;&#9;&#9;Also controls the appearance of the content border.

&#9;&#9;SelectedTabStylist
&#9;&#9;&#9;A Stylist object that controls the appearance of the selected tab.

&#9;Methods:
&#9;&#9;AddTab ( GuiObject `content`, number `index` )
&#9;&#9;&#9;Adds `content` to the container at `index`.
&#9;&#9;&#9;if `index` is not specified, then it will be added to the end.

&#9;&#9;RemoveTab ( number `index` )
&#9;&#9;&#9;Removes the tab at `index`, and returns the content of that tab.
&#9;&#9;&#9;`index` can also be a GUI in the container.

&#9;&#9;MoveTab ( number `index`, number `to` )
&#9;&#9;&#9;Moves the object at `index` to the index of `to`.
&#9;&#9;&#9;`index` and `to` can also be GUIs in the container.

&#9;&#9;SelectTab ( number `index` )
&#9;&#9;&#9;Selects the tab at `index`.
&#9;&#9;&#9;`index` can also be a GUI in the container.

&#9;&#9;GetIndex ( GuiObject `content` )
&#9;&#9;&#9;Returns the index of `content`.
&#9;&#9;&#9;If `content` isn&apos;t in the container, this returns nil.

&#9;&#9;GetSelectedIndex ( )
&#9;&#9;&#9;Returns the index of the selected tab, and its GUI.

&#9;&#9;Destroy ( )
&#9;&#9;&#9;Releases the resources used by this object.
&#9;&#9;&#9;Run this if you&apos;re no longer using this object.

]==]

local function CreateTabContainer(ContentList,SelectedTabHeight,TabHeight)
&#9;SelectedTabHeight = SelectedTabHeight or 24
&#9;TabHeight = TabHeight or 20
&#9;
&#9;local selected_index = 0
&#9;local content_list = {}
&#9;local tab_lookup = {}
&#9;local con = {}
&#9;
&#9;local TabContainerFrame = Create&apos;Frame&apos;{
&#9;&#9;Name = &quot;TabContainer&quot;;
&#9;&#9;Size = UDim2.new(0,300,0,200);
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;Create&apos;Frame&apos;{
&#9;&#9;&#9;Name = &quot;Content&quot;;
&#9;&#9;&#9;Size = UDim2.new(1,0,1,-SelectedTabHeight);
&#9;&#9;&#9;Position = UDim2.new(0,0,0,SelectedTabHeight);
&#9;&#9;&#9;BackgroundColor3 = Color3.new();
&#9;&#9;&#9;BorderColor3 = Color3.new(1,1,1);
&#9;&#9;};
&#9;&#9;Create&apos;Frame&apos;{
&#9;&#9;&#9;Parent = TabContainerFrame;
&#9;&#9;&#9;Name = &quot;Tabs&quot;;
&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;};
&#9;}

&#9;local TabContentFrame = TabContainerFrame.Content
&#9;local TabHeaderFrame = TabContainerFrame.Tabs
&#9;local TabHeaderClass = CreateStackingFrame(TabHeaderFrame,true,true)
&#9;
&#9;local TabStylist = CreateStylist({
&#9;&#9;BackgroundColor3 = Color3.new();
&#9;&#9;BackgroundTransparency = 0.5;
&#9;&#9;BorderColor3 = Color3.new(1,1,1);
&#9;&#9;TextColor3 = Color3.new(1,1,1);
&#9;&#9;Font = &quot;ArialBold&quot;;
&#9;&#9;FontSize = &quot;Size14&quot;;
&#9;})
&#9;TabStylist.AddObject(TabContentFrame)
&#9;
&#9;local SelectedTabStylist = CreateStylist({
&#9;&#9;BackgroundColor3 = Color3.new();
&#9;&#9;BackgroundTransparency = 0.5;
&#9;&#9;BorderColor3 = Color3.new(1,1,1);
&#9;&#9;TextColor3 = Color3.new(1,1,1);
&#9;&#9;Font = &quot;ArialBold&quot;;
&#9;&#9;FontSize = &quot;Size14&quot;;
&#9;})
&#9;
&#9;local function GetIndex(content)
&#9;&#9;for index,c in pairs(content_list) do
&#9;&#9;&#9;if c == content then
&#9;&#9;&#9;&#9;return index
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;local function GetSelectedIndex()
&#9;&#9;return selected_index,content_list[selected_index]
&#9;end
&#9;
&#9;local function ClampIndex(index,i)
&#9;&#9;local max = #content_list + (i or 0)
&#9;&#9;index = math.floor(index)
&#9;&#9;return index &lt; 1 and 1 or index &gt; max and max or index
&#9;end

&#9;local function SelectTab(index)
&#9;&#9;if #content_list &gt; 0 then
&#9;&#9;&#9;if type(index) ~= &quot;number&quot; then
&#9;&#9;&#9;&#9;index = GetIndex(index)
&#9;&#9;&#9;end
&#9;&#9;&#9;if index then
&#9;&#9;&#9;&#9;index = ClampIndex(index)
&#9;&#9;&#9;&#9;if selected_index &gt; 0 then
&#9;&#9;&#9;&#9;&#9;local content = content_list[selected_index]
&#9;&#9;&#9;&#9;&#9;content.Visible = false
&#9;&#9;&#9;&#9;&#9;local Tab = tab_lookup[content]
&#9;&#9;&#9;&#9;&#9;Tab.LockAxis(nil,TabHeight)
&#9;&#9;&#9;&#9;&#9;SelectedTabStylist.RemoveObject(Tab,GUI)
&#9;&#9;&#9;&#9;&#9;TabStylist.AddObject(Tab.GUI)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local content = content_list[index]
&#9;&#9;&#9;&#9;content.Visible = true
&#9;&#9;&#9;&#9;local Tab = tab_lookup[content]
&#9;&#9;&#9;&#9;Tab.LockAxis(nil,SelectedTabHeight)
&#9;&#9;&#9;&#9;TabStylist.RemoveObject(Tab.GUI)
&#9;&#9;&#9;&#9;SelectedTabStylist.AddObject(Tab.GUI)
&#9;&#9;&#9;&#9;selected_index = index
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;selected_index = 0
&#9;&#9;end
&#9;end
&#9;
&#9;local function AddTab(content,index)
&#9;&#9;if index then
&#9;&#9;&#9;index = ClampIndex(index,1)
&#9;&#9;&#9;table.insert(content_list,index,content)
&#9;&#9;else
&#9;&#9;&#9;table.insert(content_list,content)
&#9;&#9;&#9;index = #content_list
&#9;&#9;end
&#9;&#9;content.Visible = false
&#9;&#9;content.Parent = TabContentFrame
&#9;&#9;
&#9;&#9;local TabFrame = Create&apos;TextButton&apos;{
&#9;&#9;&#9;Name = &quot;Tab&quot;;
&#9;&#9;&#9;Text = content.Name;
&#9;&#9;}
&#9;&#9;local Tab = CreateAutoSizeLabel(TabFrame)
&#9;&#9;tab_lookup[content] = Tab
&#9;&#9;Tab.SetPadding(0,4)
&#9;&#9;Tab.LockAxis(nil,TabHeight)
&#9;&#9;TabStylist.AddObject(TabFrame)
&#9;&#9;TabHeaderClass.AddObject(TabFrame,index)
&#9;&#9;TabFrame.MouseButton1Click:connect(function()
&#9;&#9;&#9;SelectTab(content)
&#9;&#9;end)
&#9;&#9;con[content] = content.Changed:connect(function(p)
&#9;&#9;&#9;if p == &quot;Name&quot; then
&#9;&#9;&#9;&#9;TabFrame.Text = content.Name
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;&#9;if selected_index == 0 then
&#9;&#9;&#9;SelectTab(index)
&#9;&#9;elseif index &lt;= selected_index then
&#9;&#9;&#9;selected_index = selected_index + 1
&#9;&#9;end
&#9;end
&#9;
&#9;local function RemoveTab(index)
&#9;&#9;if #content_list &gt; 0 then
&#9;&#9;&#9;if type(index) ~= &quot;number&quot; then
&#9;&#9;&#9;&#9;if index == nil then
&#9;&#9;&#9;&#9;&#9;index = #content_list
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;index = GetIndex(index)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if index then
&#9;&#9;&#9;&#9;index = ClampIndex(index)
&#9;&#9;&#9;&#9;local content = table.remove(content_list,index)
&#9;&#9;&#9;&#9;content.Parent = nil
&#9;&#9;&#9;&#9;con[content]:disconnect()
&#9;&#9;&#9;&#9;con[content] = nil
&#9;&#9;&#9;&#9;local tab = tab_lookup[content]
&#9;&#9;&#9;&#9;TabHeaderClass.RemoveObject(index)
&#9;&#9;&#9;&#9;tab_lookup[content] = nil
&#9;&#9;&#9;&#9;tab.Destroy()
&#9;&#9;&#9;&#9;if index == selected_index then
&#9;&#9;&#9;&#9;&#9;SelectTab(index)
&#9;&#9;&#9;&#9;elseif index &lt; selected_index then
&#9;&#9;&#9;&#9;&#9;selected_index = selected_index - 1
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;return content
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;local function MoveTab(index,to)
&#9;&#9;if #content_list &gt; 0 then
&#9;&#9;&#9;if type(index) ~= &quot;number&quot; then
&#9;&#9;&#9;&#9;index = GetIndex(index)
&#9;&#9;&#9;end
&#9;&#9;&#9;if type(to) ~= &quot;number&quot; then
&#9;&#9;&#9;&#9;to = GetIndex(to)
&#9;&#9;&#9;end
&#9;&#9;&#9;if index and to then
&#9;&#9;&#9;&#9;index = ClampIndex(index)
&#9;&#9;&#9;&#9;to = ClampIndex(to)
&#9;&#9;&#9;&#9;local content = table.remove(content_list,index)
&#9;&#9;&#9;&#9;table.insert(content_list,to,content)
&#9;&#9;&#9;&#9;TabHeaderClass.MoveObject(index,to)
&#9;&#9;&#9;&#9;if index == selected_index then
&#9;&#9;&#9;&#9;&#9;selected_index = to
&#9;&#9;&#9;&#9;elseif index &gt; selected_index and to &lt;= selected_index then
&#9;&#9;&#9;&#9;&#9;selected_index = selected_index + 1
&#9;&#9;&#9;&#9;elseif index &lt; selected_index and to &gt;= selected_index then
&#9;&#9;&#9;&#9;&#9;selected_index = selected_index - 1
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;local Class = {
&#9;&#9;GUI = TabContainerFrame;
&#9;&#9;GetIndex = GetIndex;
&#9;&#9;GetSelectedIndex = GetSelectedIndex;
&#9;&#9;SelectTab = SelectTab;
&#9;&#9;AddTab = AddTab;
&#9;&#9;RemoveTab = RemoveTab;
&#9;&#9;MoveTab = MoveTab;
&#9;&#9;TabStylist = TabStylist;
&#9;&#9;SelectedTabStylist = SelectedTabStylist;
&#9;}
&#9;
&#9;SetZIndexOnChanged(TabContainerFrame)
&#9;
&#9;local function Destroy()
&#9;&#9;for k in pairs(Class) do
&#9;&#9;&#9;Class[k] = nil
&#9;&#9;end
&#9;&#9;SelectedTabStylist.Destroy()
&#9;&#9;TabStylist.Destroy()
&#9;&#9;TabHeaderClass.Destroy()
&#9;&#9;for k,v in pairs(con) do
&#9;&#9;&#9;v:disconnect()
&#9;&#9;&#9;con[k] = nil
&#9;&#9;end
&#9;&#9;for i,content in pairs(content_list) do
&#9;&#9;&#9;content.Parent = nil
&#9;&#9;&#9;content_list[i] = nil
&#9;&#9;end
&#9;&#9;for k,tab in pairs(tab_lookup) do
&#9;&#9;&#9;tab_lookup[k] = nil
&#9;&#9;&#9;tab.Destroy()
&#9;&#9;end
&#9;&#9;TabContainerFrame:Destroy()
&#9;end
&#9;Class.Destroy = Destroy
&#9;
&#9;if ContentList then
&#9;&#9;for i,content in pairs(ContentList) do
&#9;&#9;&#9;AddTab(content,i)
&#9;&#9;end
&#9;end
&#9;
&#9;return Class,TabContainerFrame
end

lib.TabContainer = CreateTabContainer

local dialog = {}
doc[&quot;dialog&quot;] = [==[
&#9;A library of various user-input dialogs.
]==]

--[[DEPEND:
Stylist.lua;
]]

doc[&quot;dialog.Confirm&quot;] = [==[
dialog.Confirm ( GuiBase `parent`, string `message`, Stylist `style`, Stylist `button_style` ) [function]
&#9;returns bool `result`

Displays a confirmation message and waits for the user to click Yes, No, or Cancel.

Arguments:
&#9;`parent`
&#9;&#9;The object to display the dialog in.

&#9;`message`
&#9;&#9;The message to display to the user.
&#9;&#9;Optional; defaults to &quot;Are you sure?&quot;

&#9;`stylist`
&#9;&#9;A stylist to apply to the dialog.
&#9;&#9;Optional; defaults to a premade stylist
&#9;&#9;
&#9;`button_style`
&#9;&#9;A stylist to apply to buttons.
&#9;&#9;Automatically inherits from `stylist`.
&#9;&#9;Optional; defaults to a premade stylist

Returns:
&#9;`result`
&#9;&#9;The result of the dialog.
&#9;&#9;If the user clicked Yes, returns true.
&#9;&#9;If the user clicked No, returns false.
&#9;&#9;If the user clicked Cancel, returns nil.
]==]

function dialog.Confirm(parent,message,global,buttons)
&#9;GlobalStylist = global or Stylist{
&#9;&#9;BackgroundColor3 = Color3.new(0,0,0);
&#9;&#9;BorderColor3 = Color3.new(1,1,1);
&#9;&#9;TextColor3 = Color3.new(1,1,1);
&#9;&#9;Font = &quot;ArialBold&quot;;
&#9;&#9;FontSize = &quot;Size14&quot;;
&#9;}
&#9;ButtonStylist = buttons or Stylist{
&#9;&#9;Style = &quot;RobloxButton&quot;;
&#9;}

&#9;local GlobalStylist = CreateStylist(style)
&#9;local ButtonStylist = CreateStylist(button_style)
&#9;local style_in = GlobalStylist.StylistIn(ButtonStylist)
&#9;GlobalStylist.AddStylist(ButtonStylist)

&#9;local Dialog = Create&apos;Frame&apos;{
&#9;&#9;Name = &quot;ConfirmDialog&quot;;
&#9;&#9;Size = UDim2.new(1.5,0,1.5,0);
&#9;&#9;Position = UDim2.new(-0.25,0,-0.25,0);
&#9;&#9;BorderSizePixel = 0;
&#9;&#9;BackgroundTransparency = 0.5;
&#9;&#9;BackgroundColor3 = Color3.new(0,0,0);
&#9;&#9;Active = true;
&#9;&#9;GlobalStylist.AddObject(Create&apos;Frame&apos;{
&#9;&#9;&#9;Name = &quot;DialogBox&quot;;
&#9;&#9;&#9;Size = UDim2.new(0,250,0,150);
&#9;&#9;&#9;Position = UDim2.new(0.5,-125,0.5,-75);
&#9;&#9;&#9;Create&apos;Frame&apos;{
&#9;&#9;&#9;&#9;Name = &quot;MarginBox&quot;;
&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;Size = UDim2.new(1,-16,1,-16);
&#9;&#9;&#9;&#9;Position = UDim2.new(0,8,0,8);
&#9;&#9;&#9;&#9;GlobalStylist.AddObject(Create&apos;TextLabel&apos;{
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;&#9;TextScaled = true;
&#9;&#9;&#9;&#9;&#9;Text = message or &quot;&quot;;
&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1,-16,0.8,-24);
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(0,8,0,8);
&#9;&#9;&#9;&#9;});
&#9;&#9;&#9;&#9;Create&apos;Frame&apos;{
&#9;&#9;&#9;&#9;&#9;Name = &quot;Buttons&quot;;
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1,0,0.2,0);
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(0,0,0.8,0);
---- Buttons
&#9;&#9;&#9;&#9;&#9;ButtonStylist.AddObject(Create&apos;TextButton&apos;{
&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;YesButton&quot;;
&#9;&#9;&#9;&#9;&#9;&#9;Text = &quot;Yes&quot;;
&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1/3,0,1,0);
&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(0/3,0,0,0);
&#9;&#9;&#9;&#9;&#9;});
&#9;&#9;&#9;&#9;&#9;ButtonStylist.AddObject(Create&apos;TextButton&apos;{
&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;NoButton&quot;;
&#9;&#9;&#9;&#9;&#9;&#9;Text = &quot;No&quot;;
&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1/3,0,1,0);
&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(1/3,0,0,0);
&#9;&#9;&#9;&#9;&#9;});
&#9;&#9;&#9;&#9;&#9;ButtonStylist.AddObject(Create&apos;TextButton&apos;{
&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;CancelButton&quot;;
&#9;&#9;&#9;&#9;&#9;&#9;Text = &quot;Cancel&quot;;
&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1/3,0,1,0);
&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(2/3,0,0,0);
&#9;&#9;&#9;&#9;&#9;});
----/Buttons
&#9;&#9;&#9;&#9;};
&#9;&#9;&#9;};
&#9;&#9;});
&#9;}
&#9;local Buttons = Dialog.DialogBox.MarginBox.Buttons
&#9;
&#9;local Result = nil
&#9;local Event = Instance.new(&quot;BindableEvent&quot;)

&#9;Buttons.YesButton.MouseButton1Click:connect(function()
&#9;&#9;Result = true
&#9;&#9;Event:Fire()
&#9;end)
&#9;Buttons.NoButton.MouseButton1Click:connect(function()
&#9;&#9;Result = false
&#9;&#9;Event:Fire()
&#9;end)
&#9;Buttons.CancelButton.MouseButton1Click:connect(function()
&#9;&#9;Result = nil
&#9;&#9;Event:Fire()
&#9;end)

&#9;SetZIndex(Dialog,10)

&#9;Dialog.Parent = parent
&#9;Event.Event:wait()
&#9;Dialog:Destroy()
&#9;Event:Destroy()

&#9;if global == nil then
&#9;&#9;GlobalStylist.Destroy()
&#9;else
&#9;&#9;if not style_in then
&#9;&#9;&#9;GlobalStylist.RemoveStylist(ButtonStylist)
&#9;&#9;end
&#9;end
&#9;if buttons == nil then
&#9;&#9;ButtonStylist.Destroy()
&#9;end

&#9;return Result
end

lib.dialog = dialog

--[[DEPEND:]]

doc[&quot;Help&quot;] = [==[
Help ( string `query`, bool `no_print` ) [function]
&#9;returns: string `message`

Returns help information for the library.

Arguments:
&#9;`query`
&#9;&#9;The name of the entry to display help for (case-insensitive).
&#9;&#9;If unspecified, a list of entries will be displayed.

&#9;`no_print`
&#9;&#9;If set to true, the returned message will NOT also be printed.
&#9;&#9;Note than when printed this way, the message is automatically formatted to maintain readability. 

Returns:
&#9;`message`
&#9;&#9;The resulting message.


Documentation Remarks:
&#9;Argument and return values follow this format:
&#9;&#9;type `reference`

&#9;&quot;type&quot; is the argument&apos;s value type (string, bool, table, etc).
&#9;Some arguments may accept more than one type. If so, these types will be indicated in the argument&apos;s description.
&#9;An asterisk (*) as the type indicates that the argument may be of any type.
&#9;Types can also be Roblox Instances, or objects defined by this library.
&#9;The type &quot;GuiText&quot; refers to TextLabels, TextButtons, and TextBoxes.

&#9;In the documentation, a word enclosed in grave accents (i.e. `example`) refers to the indicated value.

&#9;Each entry has one of various types, which are indicated between square brackets (i.e. [type] ):
&#9;&#9;[const]
&#9;&#9;&#9;A constant, unchanging value.
&#9;&#9;[enum]
&#9;&#9;&#9;An enumerated type.
&#9;&#9;[function]
&#9;&#9;&#9;A function; receives arguments and returns values.
&#9;&#9;[constructor]
&#9;&#9;&#9;Similar to a function, buts returns an instantiated object.

&#9;Documentation of a constructor will also contain a definition of the class it creates.
&#9;Classes contain various member types:
&#9;&#9;Readonly
&#9;&#9;&#9;A value that is meant only to be read, not written to.
&#9;&#9;Field
&#9;&#9;&#9;A value that can be changed, affecting the state of the object.
&#9;&#9;Method
&#9;&#9;&#9;A function that does something internally when called.
&#9;&#9;&#9;NOTE: Currently, methods must be called with &quot;.&quot;, not &quot;:&quot;. This may change in future versions.
&#9;&#9;Callback
&#9;&#9;&#9;Similar to a field in that it can be set, but the value is a function.
&#9;&#9;&#9;When set, the function will be invoked at some point, and may have arguments passed to it.
&#9;&#9;&#9;What the function returns can affect the object&apos;s behavior.
&#9;&#9;Event
&#9;&#9;&#9;Allows the user to connect functions (called &quot;listeners&quot;).
&#9;&#9;&#9;At some point, the event will fire, which then calls each listener connected to it.
&#9;&#9;&#9;Values may be passed to each listener, received as &quot;parameters&quot;.
]==]

local default_help = [==[
Use ]==]..PROJECT_NAME..[==[.Help(&quot;EntryName&quot;) for more information about a specific entry.

Entries:
]==]

do
&#9;local sorted = {}
&#9;for name,ref in pairs(doc) do
&#9;&#9;if type(name) == &quot;string&quot; then
&#9;&#9;&#9;table.insert(sorted,name)
&#9;&#9;end
&#9;end
&#9;table.sort(sorted)
&#9;for i,name in pairs(sorted) do
&#9;&#9;default_help = default_help .. &quot;\t&quot; .. name .. &quot;\n&quot;
&#9;end
end

doc[&quot;EntryName&quot;] = [==[
That was an example, silly.

]==]..default_help


local DocumentationLookup = {}
DocumentationLookup[false] = default_help

function lib.Help(query,no_print)
&#9;if type(query) == &quot;string&quot; then
&#9;&#9;query = query:lower()
&#9;end
&#9;local output = DocumentationLookup[query] or DocumentationLookup[false]
&#9;if not no_print then
&#9;&#9;print(string.rep(&quot;_&quot;,80))
&#9;&#9;for c in output:gsub(&quot;\r\n?&quot;,&quot;\n&quot;):gmatch(&quot;(.-)\n&quot;) do
&#9;&#9;&#9;c = c:gsub(&quot; &quot;,&quot;\160&quot;)
&#9;&#9;&#9;c = c:gsub(&quot;\t&quot;,string.rep(&quot;\160&quot;,8))
&#9;&#9;&#9;print(#c == 0 and &quot;\160&quot; or c)
&#9;&#9;end
&#9;&#9;print(&quot;\160&quot;)
&#9;end
&#9;return output
end

for name,ref in pairs(doc) do
&#9;if type(name) == &quot;string&quot; then
&#9;&#9;DocumentationLookup[name:lower()] = ref
&#9;&#9;local f = lib[name]
&#9;&#9;if type(f) == &quot;function&quot; then
&#9;&#9;&#9;DocumentationLookup[f] = ref
&#9;&#9;end
&#9;end
end

setmetatable(lib,{
&#9;__tostring = function()
&#9;&#9;return (&quot;%s GUI Library [v%s] (use %s.Help() for help)&quot;):format(PROJECT_NAME, version, PROJECT_NAME)
&#9;end;
})

_G.gloo = lib
print((&quot;Loaded %s library. Type _G.%s.Help() for help.&quot;):format(PROJECT_NAME, PROJECT_NAME))</ProtectedString>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX21">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1003</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>1.60000002</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">272</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.800000012</X>
					<Y>0.800000012</Y>
					<Z>0.800000012</Z>
				</Vector3>
			</Properties>
			<Item class="Decal" referent="RBX22">
				<Properties>
					<token name="Face">5</token>
					<string name="Name">Decal</string>
					<float name="Shiny">20</float>
					<float name="Specular">0</float>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=129748355</url></Content>
					<float name="Transparency">0</float>
				</Properties>
			</Item>
			<Item class="Decal" referent="RBX23">
				<Properties>
					<token name="Face">2</token>
					<string name="Name">Decal</string>
					<float name="Shiny">20</float>
					<float name="Specular">0</float>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=129748355</url></Content>
					<float name="Transparency">0</float>
				</Properties>
			</Item>
			<Item class="Decal" referent="RBX24">
				<Properties>
					<token name="Face">3</token>
					<string name="Name">Decal</string>
					<float name="Shiny">20</float>
					<float name="Specular">0</float>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=129748355</url></Content>
					<float name="Transparency">0</float>
				</Properties>
			</Item>
			<Item class="Decal" referent="RBX25">
				<Properties>
					<token name="Face">0</token>
					<string name="Name">Decal</string>
					<float name="Shiny">20</float>
					<float name="Specular">0</float>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=129748355</url></Content>
					<float name="Transparency">0</float>
				</Properties>
			</Item>
			<Item class="Decal" referent="RBX26">
				<Properties>
					<token name="Face">1</token>
					<string name="Name">Decal</string>
					<float name="Shiny">20</float>
					<float name="Specular">0</float>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=129748355</url></Content>
					<float name="Transparency">0</float>
				</Properties>
			</Item>
			<Item class="Decal" referent="RBX27">
				<Properties>
					<token name="Face">4</token>
					<string name="Name">Decal</string>
					<float name="Shiny">20</float>
					<float name="Specular">0</float>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=129748355</url></Content>
					<float name="Transparency">0</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX28">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>0.834005713</X>
					<Y>2.25629234</Y>
					<Z>-1.19253564</Z>
					<R00>-0.794785738</R00>
					<R01>-0.220454901</R01>
					<R02>0.5654338</R02>
					<R10>-0</R10>
					<R11>0.931690514</R11>
					<R12>0.363253325</R12>
					<R20>-0.606890261</R20>
					<R21>0.288708568</R21>
					<R22>-0.740494192</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.296860576</X>
					<Y>1.52978659</Y>
					<Z>0.288450897</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="Frame" referent="RBX29">
			<Properties>
				<bool name="Active">false</bool>
				<Color3 name="BackgroundColor3">4294967295</Color3>
				<float name="BackgroundTransparency">0</float>
				<Color3 name="BorderColor3">4279970357</Color3>
				<int name="BorderSizePixel">1</int>
				<bool name="ClipsDescendants">false</bool>
				<bool name="Draggable">false</bool>
				<string name="Name">Interfaces</string>
				<UDim2 name="Position">
					<XS>0</XS>
					<XO>0</XO>
					<YS>0</YS>
					<YO>0</YO>
				</UDim2>
				<float name="Rotation">0</float>
				<UDim2 name="Size">
					<XS>0</XS>
					<XO>100</XO>
					<YS>0</YS>
					<YO>100</YO>
				</UDim2>
				<token name="SizeConstraint">0</token>
				<token name="Style">0</token>
				<bool name="Visible">true</bool>
				<int name="ZIndex">1</int>
			</Properties>
			<Item class="Frame" referent="RBX30">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTAnchorToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>245</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX31">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX32">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX33">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">ANCHOR TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX34">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX35">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Status</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX36">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Status</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX37">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Anchored</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX38">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>9</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-9</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX39">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX40">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX41">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">ANCHORED</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX42">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Unanchored</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>140</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX43">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>9</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-9</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX44">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX45">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX46">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">UNANCHORED</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX47">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Tip</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX48">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX49">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">TIP: Press Enter to quickly toggle the anchor.</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX50">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTCollisionToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX51">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX52">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX53">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">COLLISION TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX54">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX55">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Status</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX56">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Collision</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX57">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">On</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX58">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX59">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX60">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX61">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">ON</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX62">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Off</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>113</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX63">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX64">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX65">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX66">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">OFF</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX67">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Tip</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX68">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX69">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">TIP: Press Enter to quickly toggle collision.</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX70">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4278190080</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTExportDialog</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>100</XO>
						<YS>0</YS>
						<YO>128</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>110</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX71">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Info</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>75</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX72">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<string name="Name">CreationIDLabel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>40</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Your creation&apos;s ID:</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX73">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">7</token>
							<string name="Name">CreationID</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>40</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">j5of0</string>
							<Color3 name="TextColor3">4285558896</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4294967295</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX74">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX75">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294946560</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Yellow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX76">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283144011</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Green</string>
								<UDim2 name="Position">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX77">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278497260</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Blue</string>
								<UDim2 name="Position">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX78">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294901760</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Red</string>
								<UDim2 name="Position">
									<XS>0.600000024</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX79">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4285215356</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Purple</string>
								<UDim2 name="Position">
									<XS>0.800000012</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX80">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Tip</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>75</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX81">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">4</token>
							<string name="Name">Tip</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>7</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Use the ID above to import your creation using the plugin.</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX82">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">180</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX83">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294946560</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Yellow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX84">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283144011</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Green</string>
								<UDim2 name="Position">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX85">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278497260</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Blue</string>
								<UDim2 name="Position">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX86">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294901760</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Red</string>
								<UDim2 name="Position">
									<XS>0.600000024</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX87">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4285215356</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Purple</string>
								<UDim2 name="Position">
									<XS>0.800000012</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX88">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Close</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>5</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX89">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<bool name="Modal">false</bool>
							<string name="Name">Button</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">Got it</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX90">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX91">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Loading</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>80</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX92">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX93">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294946560</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Yellow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX94">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283144011</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Green</string>
								<UDim2 name="Position">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX95">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278497260</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Blue</string>
								<UDim2 name="Position">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX96">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294901760</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Red</string>
								<UDim2 name="Position">
									<XS>0.600000024</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX97">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4285215356</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Purple</string>
								<UDim2 name="Position">
									<XS>0.800000012</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX98">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<string name="Name">TextLabel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>50</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Uploading your creation...</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX99">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">BottomColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">180</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX100">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294946560</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Yellow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX101">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283144011</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Green</string>
								<UDim2 name="Position">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX102">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278497260</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Blue</string>
								<UDim2 name="Position">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX103">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294901760</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Red</string>
								<UDim2 name="Position">
									<XS>0.600000024</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX104">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4285215356</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Purple</string>
								<UDim2 name="Position">
									<XS>0.800000012</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBX105">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">5</token>
							<bool name="Modal">false</bool>
							<string name="Name">CloseButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>45</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">Close</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.850000024</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX106">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.699999988</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX107">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTMaterialToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>172</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>145</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX108">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX109">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX110">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">MATERIAL TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX111">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX112">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">MaterialOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-14</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX113">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Material</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX114">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TransparencyOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>65</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX115">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Transparency</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX116">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TransparencyInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX117">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX118">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX119">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX120">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX121">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ReflectanceOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX122">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Reflectance</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX123">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ReflectanceInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>85</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX124">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX125">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX126">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX127">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX128">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Bottom</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>1</YS>
							<YO>-10</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX129">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX130">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<token name="FontSize">5</token>
						<string name="Name">SelectNote</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>27</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>15</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Select something to use this tool.</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">true</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.5</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX131">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTNewPartToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>220</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX132">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX133">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX134">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">NEW PART TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX135">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX136">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TypeOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX137">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Part Type</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX138">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Tip</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX139">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX140">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">TIP: Point and click for a new part.</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX141">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTPaintToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>230</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>205</XO>
						<YS>0</YS>
						<YO>230</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX142">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX143">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294901760</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX144">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">PAINT TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX145">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX146">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Palette</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>205</XO>
							<YS>0</YS>
							<YO>205</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX147">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4288986439</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Br. yellowish green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX148">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294298928</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright yellow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX149">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4292511041</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX150">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4291045404</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright red</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX151">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright violet</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX152">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4279069100</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX153">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278226844</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright bluish green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX154">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4283144011</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX155">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294506744</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Institutional white</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX156">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294112243</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">White</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX157">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4293256415</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Light stone grey</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX158">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4291677645</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Mid gray</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX159">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Medium stone grey</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX160">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4284702562</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Dark stone grey</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX161">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4279970357</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Black</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX162">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Really black</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX163">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4286549604</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Grime</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX164">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4293040960</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Br. yellowish orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX165">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4293572754</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Light orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX166">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4287986039</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Sand red</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX167">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4287388575</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Lavender</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX168">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4285826717</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Sand blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX169">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4285438410</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Medium blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX170">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4286091394</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Sand green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX171">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4292330906</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Brick yellow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX172">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294830733</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Cool yellow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX173">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4292178749</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Neon orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX174">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4292511354</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Medium red</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX175">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4293442248</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Light reddish violet</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX176">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4286626779</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel Blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX177">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4279430868</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Teal</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX178">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4288791692</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Medium green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX179">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294954137</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel brown</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX180">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967244</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel yellow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX181">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294953417</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX182">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294928076</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pink</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX183">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4289832959</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel violet</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX184">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4289715711</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel light blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX185">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4288672745</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel blue-green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX186">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4291624908</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX187">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4290887234</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Olive</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX188">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967040</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">New Yeller</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX189">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294946560</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Deep orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX190">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294901760</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Really red</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX191">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294901951</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Hot pink</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX192">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190335</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Really blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX193">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278255615</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Toothpaste</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX194">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278255360</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Lime green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX195">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4286340166</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Brown</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX196">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4291595881</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Nougat</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX197">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4288700213</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Dark orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX198">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4284622289</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Royal purple</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX199">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4290019583</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Alder</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX200">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278497260</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Cyan</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX201">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4290040548</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Light blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX202">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4282023189</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Camo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX203">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4285087784</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Reddish brown</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX204">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4289352960</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">CGA brown</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX205">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4288891723</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Dusty Rose</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX206">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4289331370</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Magenta</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX207">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4280374457</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Deep blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX208">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278198368</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Navy blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX209">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4280844103</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Dark green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX210">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4280763949</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Earth green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX211">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTResizeToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>245</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX212">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">DirectionsOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX213">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Normal</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX214">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX215">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX216">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127774197</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX217">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">NORMAL</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX218">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Both</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>135</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX219">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX220">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX221">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX222">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">BOTH</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX223">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>75</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX224">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Directions</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX225">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX226">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278497260</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX227">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">RESIZE TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX228">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX229">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">IncrementOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>65</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX230">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Increment</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX231">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX232">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">1</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX233">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX234">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>75</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX235">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Increment</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX236">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Info</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX237">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278497260</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX238">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">SELECTION INFO</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX239">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">SizeInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX240">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>75</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Size</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX241">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">X</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>70</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX242">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX243">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX244">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX245">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Y</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>117</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX246">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX247">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX248">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX249">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Z</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>164</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX250">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX251">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX252">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX253">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Changes</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX254">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278497260</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX255">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">resized 0 studs</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX256">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTRotateToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>245</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX257">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">PivotOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX258">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Center</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX259">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX260">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX261">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127774197</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX262">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">CENTER</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX263">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Local</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>115</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX264">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX265">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX266">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX267">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">LOCAL</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX268">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Last</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX269">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX270">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX271">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX272">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">LAST</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX273">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX274">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Pivot</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX275">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX276">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4283144011</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX277">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">ROTATE TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX278">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX279">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">IncrementOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>65</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX280">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Increment</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX281">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX282">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">15</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX283">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX284">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>75</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX285">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Increment</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX286">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Info</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX287">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4283144011</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX288">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">SELECTION INFO</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX289">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">RotationInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX290">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>75</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Rotation</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX291">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">X</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>70</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX292">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX293">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX294">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX295">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Y</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>117</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX296">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX297">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX298">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX299">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Z</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>164</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX300">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX301">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX302">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX303">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Changes</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX304">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4283144011</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX305">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">rotated 0 degrees</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX306">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">EdgeSelectionTip</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Press T for edge selection.</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX307">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTSurfaceToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>172</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>245</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX308">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX309">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX310">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">SURFACE TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX311">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX312">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">SideOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>120</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX313">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Side</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX314">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TypeOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>124</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>120</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX315">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Type</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX316">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Tip</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX317">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX318">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>6</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-6</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">TIP: Select a part and right click on a surface</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX319">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTTextureToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>172</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>205</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX320">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX321">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX322">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">TEXTURE TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX323">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX324">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">SideOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>65</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-14</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX325">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Side</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX326">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">RepeatOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>205</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX327">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Repeat</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX328">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">XInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX329">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX330">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX331">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX332">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">2</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX333">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">YInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX334">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX335">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX336">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX337">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">2</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX338">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4285215356</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">BottomColorBar</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>1</YS>
							<YO>-2</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>2</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX339">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TransparencyOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>135</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX340">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Transparency</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX341">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TransparencyInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>75</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX342">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX343">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX344">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX345">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">0</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX346">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ModeOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX347">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Mode</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX348">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Decal</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX349">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>7</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-7</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX350">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX351">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX352">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">DECAL</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX353">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Texture</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>122</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX354">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX355">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX356">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">TEXTURE</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX357">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>7</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-7</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX358">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ImageIDOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX359">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Image ID</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX360">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextBoxBorder</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>61</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>85</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX361">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">BottomBorder</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>1</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX362">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">LeftBorder</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX363">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">RightBorder</string>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-1</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX364">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4283760767</Color3>
							<float name="BackgroundTransparency">0.899999976</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextBoxBackground</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>86</XO>
								<YS>0</YS>
								<YO>22</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX365">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<bool name="Modal">false</bool>
							<string name="Name">TextButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="TextBox" referent="RBX366">
						<Properties>
							<bool name="Active">true</bool>
							<Color3 name="BackgroundColor3">4283760767</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClearTextOnFocus">true</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<bool name="MultiLine">false</bool>
							<string name="Name">TextBox</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">true</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX367">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">AddButton</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX368">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.449999988</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Button</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">ADD DECAL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX369">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX370">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">RemoveButton</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>1</YS>
							<YO>-35</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX371">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.449999988</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Button</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">REMOVE DECAL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX372">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX373">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">2</token>
						<token name="FontSize">3</token>
						<string name="Name">Text</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>6</XO>
							<YS>1</YS>
							<YO>2</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-6</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">TIP: Select a part &amp; right click on a surface</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.5</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX374">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTWeldToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>220</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX375">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX376">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX377">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">WELD TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX378">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX379">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Interface</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX380">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.400000006</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">WeldButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0.479999989</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">WELD TO LAST</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.850000024</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX381">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.150000006</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBX382">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.400000006</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">BreakWeldsButton</string>
							<UDim2 name="Position">
								<XS>0.519999981</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0.479999989</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">BREAK WELDS</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.850000024</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX383">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.150000006</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX384">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Changes</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX385">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX386">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX387">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTLightingToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>172</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>95</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX388">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">BottomColorBar</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>1</YS>
							<YO>-2</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>2</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX389">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX390">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX391">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">LIGHTING TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX392">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX393">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0.675000012</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Spotlight</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX394">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Spotlight</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageButton" referent="RBX395">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=134367382</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">ArrowButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX396">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294946364</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX397">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">AddButton</string>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>-40</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">ADD</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX398">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">RemoveButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>127</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>58</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">REMOVE</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX399">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX400">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Options</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-3</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX401">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ColorOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX402">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Color</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX403">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">RInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>35</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX404">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX405">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX406">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294901760</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX407">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX408">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">GInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>72</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX409">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX410">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX411">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278255360</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX412">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX413">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">BInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>109</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX414">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX415">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX416">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190335</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX417">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="ImageButton" referent="RBX418">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.400000006</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=141313631</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Modal">false</bool>
									<string name="Name">HSVPicker</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>160</XO>
										<YS>0</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>27</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX419">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX420">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX421">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>16</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX422">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>10</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX423">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">BrightnessOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>45</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX424">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Brightness</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX425">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>60</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX426">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX427">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX428">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX429">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">1</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX430">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">AngleOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>115</XO>
									<YS>0</YS>
									<YO>46</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-115</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX431">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Angle</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX432">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>35</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX433">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX434">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX435">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX436">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">90</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX437">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">RangeOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>80</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX438">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Range</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX439">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>40</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX440">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX441">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX442">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX443">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">16</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX444">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SideOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>115</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX445">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Side</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX446">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ShadowsOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>150</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX447">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Shadows</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX448">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">On</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>55</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>45</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX449">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>4</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-4</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX450">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">1</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX451">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX452">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">ON</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX453">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Off</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>100</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>45</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX454">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>4</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-4</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX455">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">1</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX456">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX457">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">OFF</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX458">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<token name="FontSize">5</token>
						<string name="Name">SelectNote</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>27</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>15</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Select something to use this tool.</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">true</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.5</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX459">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0.675000012</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">PointLight</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX460">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Point light</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageButton" referent="RBX461">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=134367382</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">ArrowButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX462">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4292411647</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX463">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">AddButton</string>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>-40</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">ADD</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX464">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">RemoveButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>58</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">REMOVE</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX465">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX466">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Options</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-3</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX467">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ColorOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX468">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Color</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX469">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">RInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>35</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX470">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX471">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX472">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294901760</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX473">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX474">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">GInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>72</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX475">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX476">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX477">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278255360</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX478">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX479">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">BInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>109</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX480">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX481">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX482">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190335</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX483">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="ImageButton" referent="RBX484">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.400000006</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=141313631</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Modal">false</bool>
									<string name="Name">HSVPicker</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>160</XO>
										<YS>0</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>27</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="Frame" referent="RBX485">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX486">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX487">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>16</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX488">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>10</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX489">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">BrightnessOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>45</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX490">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Brightness</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX491">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>60</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX492">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX493">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX494">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX495">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">1</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX496">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">RangeOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>110</XO>
									<YS>0</YS>
									<YO>45</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX497">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Range</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX498">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>40</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX499">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX500">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX501">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX502">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">16</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX503">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ShadowsOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>80</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX504">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Shadows</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX505">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">On</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>55</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>45</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX506">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>4</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-4</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX507">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">1</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX508">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX509">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">ON</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX510">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Off</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>100</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>45</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX511">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>4</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-4</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX512">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">1</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX513">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX514">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">OFF</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX515">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4278190080</Color3>
					<float name="BackgroundTransparency">0.899999976</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTHSVColorPicker</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>220</XO>
						<YS>0</YS>
						<YO>116</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>250</XO>
						<YS>0</YS>
						<YO>380</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="ImageButton" referent="RBX516">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4281677109</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><url>http://www.roblox.com/asset?id=141066192</url></Content>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<bool name="Modal">false</bool>
						<string name="Name">HueSaturation</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>10</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>209</XO>
							<YS>0</YS>
							<YO>200</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="ImageLabel" referent="RBX517">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141186650</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">Cursor</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-8</XO>
								<YS>0</YS>
								<YO>194</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>16</XO>
								<YS>0</YS>
								<YO>16</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="ImageButton" referent="RBX518">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4281677109</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><url>http://www.roblox.com/asset/?id=141066196</url></Content>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<bool name="Modal">false</bool>
						<string name="Name">Value</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>229</XO>
							<YS>0</YS>
							<YO>10</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>13</XO>
							<YS>0</YS>
							<YO>200</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="Frame" referent="RBX519">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBG</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX520">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141186650</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">Cursor</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-2</XO>
								<YS>0</YS>
								<YO>-8</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>16</XO>
								<YS>0</YS>
								<YO>16</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX521">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">HueOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>218</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-25</XO>
							<YS>0</YS>
							<YO>34</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX522">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>15</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Hue</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX523">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Input</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>26</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX524">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX525">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX526">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">360</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX527">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Bar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>-4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX528">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-3</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>3</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX529">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">SaturationOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>255</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-25</XO>
							<YS>0</YS>
							<YO>34</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX530">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>15</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Saturation</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX531">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Input</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>26</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX532">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX533">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX534">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">100%</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX535">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Bar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>-4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX536">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-3</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>3</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX537">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ValueOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>292</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-25</XO>
							<YS>0</YS>
							<YO>34</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX538">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>15</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Brightness</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX539">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Input</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>26</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX540">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX541">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX542">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">100%</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX543">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Bar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>-4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX544">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-3</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>3</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX545">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ColorDisplay</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>180</XO>
							<YS>0</YS>
							<YO>220</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>60</XO>
							<YS>0</YS>
							<YO>103</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX546">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.899999976</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextButton" referent="RBX547">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4294943279</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<token name="FontSize">6</token>
						<bool name="Modal">false</bool>
						<string name="Name">OkButton</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>335</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>140</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<string name="Text">Ok</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.850000024</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="Frame" referent="RBX548">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4291592485</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Bevel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextButton" referent="RBX549">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4294943279</Color3>
						<float name="BackgroundTransparency">0.600000024</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<token name="FontSize">6</token>
						<bool name="Modal">false</bool>
						<string name="Name">CancelButton</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>160</XO>
							<YS>0</YS>
							<YO>335</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>80</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<string name="Text">Cancel</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.850000024</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="Frame" referent="RBX550">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4291592485</Color3>
							<float name="BackgroundTransparency">0.600000024</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Bevel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX551">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTMeshToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>172</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>55</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX552">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX553">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX554">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">MESH TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX555">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX556">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TypeOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>65</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-14</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX557">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Type</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX558">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ScaleOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX559">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Scale</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX560">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">XInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX561">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX562">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX563">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX564">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">1</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX565">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">YInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX566">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX567">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX568">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX569">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">1</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX570">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ZInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>145</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX571">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX572">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX573">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX574">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">1</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX575">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">AddButton</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX576">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.449999988</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Button</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">ADD MESH</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX577">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX578">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">MeshIDOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>135</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX579">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Mesh ID</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextBox" referent="RBX580">
						<Properties>
							<bool name="Active">true</bool>
							<Color3 name="BackgroundColor3">4283760767</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClearTextOnFocus">true</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<bool name="MultiLine">false</bool>
							<string name="Name">TextBox</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">true</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX581">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextBoxBorder</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>56</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>85</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX582">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">BottomBorder</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>1</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX583">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">LeftBorder</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX584">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">RightBorder</string>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-1</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX585">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4283760767</Color3>
							<float name="BackgroundTransparency">0.899999976</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextBoxBackground</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>86</XO>
								<YS>0</YS>
								<YO>22</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX586">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<bool name="Modal">false</bool>
							<string name="Name">TextButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX587">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4285215356</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">BottomColorBar</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>1</YS>
							<YO>-2</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>2</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX588">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TextureIDOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>165</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX589">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Texture ID</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextBox" referent="RBX590">
						<Properties>
							<bool name="Active">true</bool>
							<Color3 name="BackgroundColor3">4283760767</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClearTextOnFocus">true</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<bool name="MultiLine">false</bool>
							<string name="Name">TextBox</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">true</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX591">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextBoxBorder</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>61</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>85</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX592">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">BottomBorder</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>1</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX593">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">LeftBorder</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX594">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">RightBorder</string>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-1</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX595">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4283760767</Color3>
							<float name="BackgroundTransparency">0.899999976</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextBoxBackground</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>86</XO>
								<YS>0</YS>
								<YO>22</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX596">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<bool name="Modal">false</bool>
							<string name="Name">TextButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX597">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">RemoveButton</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>1</YS>
							<YO>-30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX598">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.449999988</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Button</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">REMOVE MESH</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX599">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX600">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TintOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>200</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX601">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Tint</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX602">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">BInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>114</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>38</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX603">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX604">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX605">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190335</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>3</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-3</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX606">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">255</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX607">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">GInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>77</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>38</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX608">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX609">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX610">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278255360</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>3</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-3</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX611">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">255</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX612">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">RInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>38</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX613">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX614">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX615">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294901760</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>3</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-3</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX616">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">255</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX617">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">4284572001</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Separator</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>156</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>4</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX618">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">4284572001</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Separator</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>156</XO>
								<YS>0</YS>
								<YO>16</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>4</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX619">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">4284572001</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Separator</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>156</XO>
								<YS>0</YS>
								<YO>10</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>4</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageButton" referent="RBX620">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.400000006</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141313631</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">HSVPicker</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>165</XO>
								<YS>0</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>27</XO>
								<YS>0</YS>
								<YO>27</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="Frame" referent="RBX621">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.75</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX622">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<token name="FontSize">5</token>
						<string name="Name">SelectNote</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>27</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>15</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Select something to use this tool.</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">true</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.5</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX623">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTDecorateToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>172</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>125</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX624">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">BottomColorBar</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>1</YS>
							<YO>-2</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>2</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX625">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX626">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX627">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">DECORATE TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX628">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX629">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0.675000012</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Smoke</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX630">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Smoke</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageButton" referent="RBX631">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=134367382</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">ArrowButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX632">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294946364</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX633">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">AddButton</string>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>-40</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">ADD</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX634">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">RemoveButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>127</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>58</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">REMOVE</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX635">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX636">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Options</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-3</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX637">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ColorOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX638">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Color</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX639">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">RInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>35</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX640">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX641">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX642">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294901760</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX643">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX644">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">GInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>72</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX645">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX646">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX647">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278255360</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX648">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX649">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">BInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>109</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX650">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX651">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX652">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190335</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX653">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="ImageButton" referent="RBX654">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.400000006</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=141313631</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Modal">false</bool>
									<string name="Name">HSVPicker</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>160</XO>
										<YS>0</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>27</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX655">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX656">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX657">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>16</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX658">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>10</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX659">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">OpacityOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>45</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX660">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Opacity</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX661">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>45</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX662">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX663">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX664">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX665">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">1</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX666">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">VelocityOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>100</XO>
									<YS>0</YS>
									<YO>45</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-115</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX667">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Velocity</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX668">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>45</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX669">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX670">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX671">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX672">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">90</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX673">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SizeOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>80</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX674">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Size</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX675">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>30</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX676">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX677">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX678">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX679">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">16</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX680">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<token name="FontSize">5</token>
						<string name="Name">SelectNote</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>27</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>15</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Select something to use this tool.</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">true</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.5</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX681">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0.675000012</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Fire</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX682">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Fire</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageButton" referent="RBX683">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=134367382</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">ArrowButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX684">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4292411647</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX685">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">AddButton</string>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>-40</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">ADD</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX686">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">RemoveButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>58</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">REMOVE</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX687">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX688">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Options</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-3</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX689">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ColorOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX690">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Color</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX691">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">RInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>35</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX692">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX693">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX694">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294901760</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX695">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX696">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">GInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>72</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX697">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX698">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX699">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278255360</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX700">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX701">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">BInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>109</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX702">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX703">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX704">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190335</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX705">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="ImageButton" referent="RBX706">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.400000006</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=141313631</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Modal">false</bool>
									<string name="Name">HSVPicker</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>160</XO>
										<YS>0</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>27</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="Frame" referent="RBX707">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX708">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX709">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>16</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX710">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>10</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX711">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">HeatOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>80</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX712">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Heat</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX713">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>34</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX714">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX715">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX716">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX717">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">1</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX718">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SizeOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>90</XO>
									<YS>0</YS>
									<YO>80</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX719">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Size</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX720">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>30</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX721">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX722">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX723">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX724">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">16</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX725">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SecondColorOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>45</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX726">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>40</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">2nd Color</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX727">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">RInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>35</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX728">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX729">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX730">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294901760</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX731">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX732">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">GInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>72</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX733">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX734">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX735">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278255360</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX736">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX737">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">BInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>109</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX738">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX739">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX740">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190335</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX741">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="ImageButton" referent="RBX742">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.400000006</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=141313631</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Modal">false</bool>
									<string name="Name">HSVPicker</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>160</XO>
										<YS>0</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>27</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="Frame" referent="RBX743">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX744">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX745">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>16</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX746">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>10</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX747">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0.675000012</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Sparkles</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>90</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX748">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Sparkles</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageButton" referent="RBX749">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=134367382</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">ArrowButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX750">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278543871</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX751">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">AddButton</string>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>-40</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">ADD</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX752">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">RemoveButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>58</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">REMOVE</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX753">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX754">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Options</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-3</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX755">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ColorOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX756">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Color</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX757">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">RInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>35</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX758">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX759">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX760">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294901760</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX761">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX762">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">GInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>72</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX763">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX764">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX765">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278255360</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX766">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX767">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">BInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>109</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX768">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX769">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX770">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190335</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX771">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="ImageButton" referent="RBX772">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.400000006</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=141313631</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Modal">false</bool>
									<string name="Name">HSVPicker</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>160</XO>
										<YS>0</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>27</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="Frame" referent="RBX773">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX774">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX775">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>16</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX776">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>10</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX777">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4278190080</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4280492835</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTDockGUI</string>
					<UDim2 name="Position">
						<XS>1</XS>
						<XO>-80</XO>
						<YS>0</YS>
						<YO>160</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>70</XO>
						<YS>0</YS>
						<YO>380</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX778">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Tooltips</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>-120</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>120</XO>
							<YS>0</YS>
							<YO>315</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX779">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">PaintInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX780">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>70</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX781">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294901760</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX782">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>82</XO>
										<YS>0</YS>
										<YO>50</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Allows you to change the color of parts.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX783">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">PAINT TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX784">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">SurfaceInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX785">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>150</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX786">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4285215356</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX787">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>82</XO>
										<YS>0</YS>
										<YO>120</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Lets you change the surface type of parts.

TIP: You can select the side to change by right clicking on a part&apos;s side.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX788">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">SURFACE TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX789">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">MaterialInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX790">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>150</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX791">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4285215356</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX792">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>120</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Lets you change the material, transparency, and reflectance of parts.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX793">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">MATERIAL TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX794">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">CollisionInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX795">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>150</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX796">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4279308561</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX797">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>120</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Lets you change whether the parts collide with others or not.

TIP: You can toggle collision by pressing Enter.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX798">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">COLLISION TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX799">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">AnchorInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX800">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>150</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX801">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4279308561</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX802">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>120</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Lets you anchor and unanchor parts.

TIP: You can press Enter to toggle the anchor quickly.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX803">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">ANCHOR TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX804">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">NewPartInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX805">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>150</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX806">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4279308561</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX807">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>120</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Lets you create new parts of different types.

Select the part type, then click and drag to place the part.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX808">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">NEW PART TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX809">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">MeshInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX810">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>150</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX811">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4285215356</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX812">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>84</XO>
										<YS>0</YS>
										<YO>120</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Lets you add meshes to parts.

TIP: When using a FileMesh, you can paste either the ID or the URL of the mesh or texture (image) asset.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX813">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">MESH TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX814">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextureInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX815">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>150</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX816">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4285215356</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX817">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>84</XO>
										<YS>0</YS>
										<YO>250</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Lets you add decals and textures to parts.

TIP: You can select the decal/texture side by right clicking.

TIP: You can paste either the ID or the URL of the image asset (for decals, the ID of the image asset is usually the decal ID minus one).</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX818">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">TEXTURE TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX819">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">WeldInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX820">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>240</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX821">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4279308561</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX822">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>200</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Allows you to weld parts together so that they&apos;ll move together.

NOTE: The welds between parts may break if you only move one of the parts (move all of the parts that are connected by welds to prevent this).</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX823">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">WELD TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX824">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">LightingInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX825">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>100</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX826">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4279308561</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX827">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>200</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Allows you to add spotlights or point lights to parts.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX828">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">LIGHTING TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX829">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">DecorateInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX830">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>100</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX831">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4279308561</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX832">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>200</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Allows you to add smoke, fire, and sparkles to parts.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX833">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">DECORATE TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX834">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">MoveInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX835">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>500</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX836">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">AxesInfo</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>60</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>300</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX837">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294945280</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Frame</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>83</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>2</XO>
											<YS>0</YS>
											<YO>123</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX838">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>17</XO>
											<YS>0</YS>
											<YO>83</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>180</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">GLOBAL - Normal

LOCAL - Relative to each part

LAST - Relative to the last part selected</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX839">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>15</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>60</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">This option lets you choose in which direction to move each part.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX840">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>12</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Axes</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX841">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>210</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>90</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">TIP: When your axes are set to local or last, you can right click to change which part has the handles.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX842">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294945280</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX843">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>50</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Allows you to move parts.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX844">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">MOVE TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX845">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">IncrementInfo</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>365</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>300</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX846">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>15</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>60</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Lets you choose how many studs to move the parts.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX847">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>12</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Increment</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX848">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>70</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>50</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">TIP: Use the &apos; key to focus on the increment input.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX849">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">RotateInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX850">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>530</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX851">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">PivotInfo</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>60</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>300</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX852">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4283144011</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Frame</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>73</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>2</XO>
											<YS>0</YS>
											<YO>168</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX853">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>17</XO>
											<YS>0</YS>
											<YO>71</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>180</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">CENTER - Rotate around the center of the group of selected parts

LOCAL - Rotate each part around its own center

LAST - Rotate each part around the center of the last part selected</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX854">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>15</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>60</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">This option lets you choose what to rotate the parts around.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX855">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>12</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Pivot</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX856">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>250</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>90</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">TIP: When the pivot is set to local or last, you can right click to switch which part has the handles.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX857">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4283144011</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX858">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>50</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Allows you to rotate parts.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX859">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">ROTATE TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX860">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">IncrementInfo</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>395</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>130</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX861">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>15</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>60</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Lets you choose how many degrees to rotate the parts.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX862">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>12</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Increment</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX863">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>70</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>50</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">TIP: Use the &apos; key to focus on the increment input.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX864">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282203453</Color3>
							<float name="BackgroundTransparency">0.200000003</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ResizeInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX865">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Content</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>330</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX866">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">DirectionsInfo</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>60</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>300</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX867">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>15</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>120</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Lets you choose in which directions to resize the part.

TIP: You can switch which part has the handles by right-clicking.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX868">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>12</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Directions</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX869">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278497260</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorBar</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX870">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolDescription</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>50</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Allows you to resize parts.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX871">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">ToolName</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">RESIZE TOOL</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX872">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">IncrementInfo</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>200</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>140</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX873">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>15</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>60</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Lets you choose how many studs to resize the parts.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX874">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>12</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Increment</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX875">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<string name="Name">TextLabel</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>70</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>50</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">TIP: Use the &apos; key to focus on the increment input.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX876">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0.75</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">InfoButtons</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>350</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>32</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX877">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>7</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-28</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">true</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageButton" referent="RBX878">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4283804415</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141911973</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">HelpButton</string>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>-32</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>32</XO>
								<YS>0</YS>
								<YO>32</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX879">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Tooltip</string>
								<UDim2 name="Position">
									<XS>-0.300000012</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1.60000002</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX880">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Text</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">HELP</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX881">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.699999988</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX882">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">SelectionButtons</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>245</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>105</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="ImageButton" referent="RBX883">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4283804415</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=142074644</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">DeleteButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX884">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Tooltip</string>
								<UDim2 name="Position">
									<XS>-0.300000012</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1.60000002</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX885">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Text</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>28</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">DELETE
(Shift + X)</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX886">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4283804415</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=142074569</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">ExportButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX887">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Tooltip</string>
								<UDim2 name="Position">
									<XS>-0.300000012</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1.60000002</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX888">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Text</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>28</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">EXPORT
(Shift + P)</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX889">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4283804415</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=142074553</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">RedoButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX890">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Tooltip</string>
								<UDim2 name="Position">
									<XS>-0.300000012</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1.60000002</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX891">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Text</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>28</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">REDO
(Shift + Y)</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX892">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4283804415</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=142074557</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">UndoButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX893">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Tooltip</string>
								<UDim2 name="Position">
									<XS>-0.300000012</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1.60000002</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX894">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Text</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>28</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">UNDO
(Shift + Z)</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX895">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4283804415</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=142074563</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">CloneButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>70</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX896">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Tooltip</string>
								<UDim2 name="Position">
									<XS>-0.300000012</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1.60000002</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX897">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Text</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>28</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">CLONE
(Shift + C)</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX898">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0.600000024</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ToolButtons</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>70</XO>
							<YS>0</YS>
							<YO>245</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="ImageButton" referent="RBX899">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141741412</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">DecorateButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>210</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX900">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">P</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX901">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141741418</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">WeldButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>175</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX902">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">F</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX903">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141741341</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">LightingButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>210</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX904">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">U</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX905">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141806786</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">MeshButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>140</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX906">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">H</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX907">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141809596</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">CollisionButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX908">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">K</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX909">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141809090</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">MaterialButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>70</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX910">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">N</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX911">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4294901760</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141741444</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">PaintButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX912">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">V</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX913">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141741393</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">NewPartButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>140</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX914">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">J</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX915">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4294946560</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141741366</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">MoveButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX916">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Z</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX917">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4278497260</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141794324</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">ResizeButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX918">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">X</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX919">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4283144011</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141807775</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">RotateButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX920">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">C</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX921">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141803491</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">SurfaceButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>70</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX922">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">B</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX923">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141805275</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">TextureButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>175</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX924">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">G</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageButton" referent="RBX925">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141741323</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Modal">false</bool>
							<string name="Name">AnchorButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX926">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">2</token>
								<string name="Name">Shortcut</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>13</XO>
									<YS>0</YS>
									<YO>13</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">M</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX927">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4282203453</Color3>
						<float name="BackgroundTransparency">0.200000003</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">HelpInfo</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>-120</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>120</XO>
							<YS>0</YS>
							<YO>315</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX928">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">BottomColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">180</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX929">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294946560</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Yellow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX930">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283144011</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Green</string>
								<UDim2 name="Position">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX931">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278497260</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Blue</string>
								<UDim2 name="Position">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX932">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294901760</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Red</string>
								<UDim2 name="Position">
									<XS>0.600000024</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX933">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4285215356</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Purple</string>
								<UDim2 name="Position">
									<XS>0.800000012</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX934">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Content</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>680</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX935">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">1</token>
								<token name="FontSize">4</token>
								<string name="Name">ToolDescription</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>50</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>85</XO>
									<YS>0</YS>
									<YO>250</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">For more information on any tool, hover your mouse over its icon and it&apos;ll reveal more details.</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX936">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ColorBar</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>3</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX937">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294946560</Color3>
									<float name="BackgroundTransparency">0.25</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Yellow</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX938">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4283144011</Color3>
									<float name="BackgroundTransparency">0.25</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Green</string>
									<UDim2 name="Position">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX939">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278497260</Color3>
									<float name="BackgroundTransparency">0.25</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Blue</string>
									<UDim2 name="Position">
										<XS>0.400000006</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX940">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294901760</Color3>
									<float name="BackgroundTransparency">0.25</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Red</string>
									<UDim2 name="Position">
										<XS>0.600000024</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX941">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4285215356</Color3>
									<float name="BackgroundTransparency">0.25</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Purple</string>
									<UDim2 name="Position">
										<XS>0.800000012</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextLabel" referent="RBX942">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">ToolName</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>4</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>80</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">BUILDING TOOLS BY F3X</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX943">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectionInfo</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>150</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>150</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX944">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">TextLabel</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>82</XO>
										<YS>0</YS>
										<YO>240</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">You can select multiple parts by holding [Shift] and clicking on each part.

You can also hold [Shift], click, and drag to select parts in that area.

Press [Shift + K] to select parts inside of the selected parts.

Press [Shift + R] to clear your selection.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX945">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4282203453</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">TextLabel</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>12</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Selecting</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX946">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ExportingInfo</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>420</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>220</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX947">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">1</token>
									<token name="FontSize">4</token>
									<string name="Name">TextLabel</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>82</XO>
										<YS>0</YS>
										<YO>200</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">You can export any creations you built with Building Tools by F3X by using the export button on the dock (or pressing shift + P).

Install this plugin (roblox.com/item.aspx?id=142485815) in ROBLOX Studio to import your creation.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX948">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4282203453</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">TextLabel</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>24</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Exporting your creations</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX949">
				<Properties>
					<bool name="Active">false</bool>
					<Color3 name="BackgroundColor3">4278190080</Color3>
					<float name="BackgroundTransparency">0.5</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<string name="Name">BTUpdateNotification</string>
					<UDim2 name="Position">
						<XS>1</XS>
						<XO>-180</XO>
						<YS>1</YS>
						<YO>10</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>180</XO>
						<YS>0</YS>
						<YO>38</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX950">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<token name="FontSize">5</token>
						<string name="Name">TextLabel</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>2</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>-2</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">This version of Building Tools is outdated.</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX951">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294945280</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ColorBar</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>2</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX952">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTMoveToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>245</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX953">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Changes</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX954">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">moved 0 studs</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX955">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294945280</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX956">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Info</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX957">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Center</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX958">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Z</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>164</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBX959">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX960">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="TextBox" referent="RBX961">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX962">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Y</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>117</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextButton" referent="RBX963">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="TextBox" referent="RBX964">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX965">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX966">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">X</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>70</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX967">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX968">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX969">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextLabel" referent="RBX970">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>75</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Position</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX971">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">SELECTION INFO</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX972">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294945280</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX973">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">IncrementOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>65</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX974">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>75</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX975">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Increment</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX976">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Increment</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="ImageLabel" referent="RBX977">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX978">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">1</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX979">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX980">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX981">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX982">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">MOVE TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX983">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294945280</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX984">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">AxesOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX985">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX986">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Axes</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX987">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Last</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>175</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX988">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">LAST</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX989">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX990">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX991">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX992">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Local</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>110</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX993">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">LOCAL</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX994">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX995">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX996">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX997">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Global</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX998">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">GLOBAL</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX999">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127774197</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX1000">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX1001">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="IntValue" referent="RBX1002">
			<Properties>
				<string name="Name">UIComponentCount</string>
				<int name="Value">0</int>
			</Properties>
			<Item class="Script" referent="RBX1003">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Script</string>
					<ProtectedString name="Source">local Tool&#9;&#9;&#9;&#9;&#9;&#9;= script.Parent.Parent;
local Interfaces&#9;&#9;&#9;&#9;= Tool.Interfaces;
local UIComponentCountValue&#9;&#9;= Tool.UIComponentCount;

function _getAllDescendants( Parent )
&#9;-- Recursively gets all the descendants of  `Parent` and returns them

&#9;local descendants = {};
&#9;for _, Child in pairs( Parent:GetChildren() ) do

&#9;&#9;-- Add the direct descendants of `Parent`
&#9;&#9;table.insert( descendants, Child );

&#9;&#9;-- Add the descendants of each child
&#9;&#9;for _, Subchild in pairs( _getAllDescendants( Child ) ) do
&#9;&#9;&#9;table.insert( descendants, Subchild );
&#9;&#9;end;

&#9;end;
&#9;return descendants;
end;

-- Provide a count of the number of UI components in the tool
-- (this allows the client-side code to begin when all expected
-- components have loaded/replicated)

UIComponentCountValue.Value = #_getAllDescendants( Interfaces );</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="StringValue" referent="RBX1004">
			<Properties>
				<string name="Name">Version</string>
				<string name="Value">1.2.3</string>
			</Properties>
		</Item>
	</Item>
</roblox>