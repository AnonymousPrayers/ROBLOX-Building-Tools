<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">Building Tools</string>
			<Content name="TextureId"><null></null></Content>
			<string name="ToolTip">Building Tools by F3X</string>
		</Properties>
		<Item class="LocalScript" referent="RBX1">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Building Tools by F3X</string>
				<ProtectedString name="Source">------------------------------------------
-- Create references to important objects
------------------------------------------
Services = {
&#9;[&quot;Workspace&quot;] = Game:GetService( &quot;Workspace&quot; );
&#9;[&quot;Players&quot;] = Game:GetService( &quot;Players&quot; );
&#9;[&quot;Lighting&quot;] = Game:GetService( &quot;Lighting&quot; );
&#9;[&quot;Teams&quot;] = Game:GetService( &quot;Teams&quot; );
&#9;[&quot;Debris&quot;] = Game:GetService( &quot;Debris&quot; );
&#9;[&quot;MarketplaceService&quot;] = Game:GetService( &quot;MarketplaceService&quot; );
&#9;[&quot;JointsService&quot;] = Game.JointsService;
&#9;[&quot;BadgeService&quot;] = Game:GetService( &quot;BadgeService&quot; );
&#9;[&quot;RunService&quot;] = Game:GetService( &quot;RunService&quot; );
&#9;[&quot;ContentProvider&quot;] = Game:GetService( &quot;ContentProvider&quot; );
&#9;[&quot;TeleportService&quot;] = Game:GetService( &quot;TeleportService&quot; );
&#9;[&quot;SoundService&quot;] = Game:GetService( &quot;SoundService&quot; );
&#9;[&quot;InsertService&quot;] = Game:GetService( &quot;InsertService&quot; );
&#9;[&quot;CollectionService&quot;] = Game:GetService( &quot;CollectionService&quot; );
&#9;[&quot;UserInputService&quot;] = Game:GetService( &quot;UserInputService&quot; );
&#9;[&quot;GamePassService&quot;] = Game:GetService( &quot;GamePassService&quot; );
&#9;[&quot;StarterPack&quot;] = Game:GetService( &quot;StarterPack&quot; );
&#9;[&quot;StarterGui&quot;] = Game:GetService( &quot;StarterGui&quot; );
&#9;[&quot;TestService&quot;] = Game:GetService( &quot;TestService&quot; );
&#9;[&quot;ReplicatedStorage&quot;] = Game:GetService( &quot;ReplicatedStorage&quot; );
};

Tool = script.Parent;
Player = Services.Players.LocalPlayer;
Mouse = nil;
Camera = Services.Workspace.CurrentCamera;

Tool:WaitForChild( &quot;GetAsync&quot; );
Tool:WaitForChild( &quot;PostAsync&quot; );
GetAsync = function ( ... )
&#9;return Tool.GetAsync:InvokeServer( ... );
end;
PostAsync = function ( ... )
&#9;return Tool.PostAsync:InvokeServer( ... );
end;

dark_slanted_rectangle = &quot;http://www.roblox.com/asset/?id=127774197&quot;;
light_slanted_rectangle = &quot;http://www.roblox.com/asset/?id=127772502&quot;;
action_completion_sound = &quot;http://www.roblox.com/asset/?id=99666917&quot;;
expand_arrow = &quot;http://www.roblox.com/asset/?id=134367382&quot;;
tool_decal = &quot;http://www.roblox.com/asset/?id=129748355&quot;;

------------------------------------------
-- Load external dependencies
------------------------------------------
RbxUtility = LoadLibrary( &quot;RbxUtility&quot; );
Services.ContentProvider:Preload( dark_slanted_rectangle );
Services.ContentProvider:Preload( light_slanted_rectangle );
Services.ContentProvider:Preload( action_completion_sound );
Services.ContentProvider:Preload( expand_arrow );
Services.ContentProvider:Preload( tool_decal );
Tool:WaitForChild( &quot;Interfaces&quot; );

------------------------------------------
-- Define functions that are depended-upon
------------------------------------------
function _findTableOccurrences( haystack, needle )
&#9;-- Returns the positions of instances of `needle` in table `haystack`
&#9;local positions = {};

&#9;-- Add any indexes from `haystack` that have `needle`
&#9;for index, value in pairs( haystack ) do
&#9;&#9;if value == needle then
&#9;&#9;&#9;table.insert( positions, index );
&#9;&#9;end;
&#9;end;

&#9;return positions;
end;

function _getCollectionInfo( part_collection )
&#9;-- Returns the size and position of collection of parts `part_collection`

&#9;-- Get the corners
&#9;local corners = {};

&#9;-- Create shortcuts to certain things that are expensive to call constantly
&#9;-- (note: otherwise it actually becomes an issue if the selection grows
&#9;-- considerably large)
&#9;local table_insert = table.insert;
&#9;local newCFrame = CFrame.new;

&#9;for _, Part in pairs( part_collection ) do

&#9;&#9;local PartCFrame = Part.CFrame;
&#9;&#9;local partCFrameOffset = PartCFrame.toWorldSpace;
&#9;&#9;local PartSize = Part.Size / 2;
&#9;&#9;local size_x, size_y, size_z = PartSize.x, PartSize.y, PartSize.z;

&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, -size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, -size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, -size_z ) ) );
&#9;&#9;table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, -size_z ) ) );

&#9;end;

&#9;-- Get the extents
&#9;local x, y, z = {}, {}, {};

&#9;for _, Corner in pairs( corners ) do
&#9;&#9;table_insert( x, Corner.x );
&#9;&#9;table_insert( y, Corner.y );
&#9;&#9;table_insert( z, Corner.z );
&#9;end;

&#9;local x_min, y_min, z_min = math.min( unpack( x ) ),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;math.min( unpack( y ) ),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;math.min( unpack( z ) );

&#9;local x_max, y_max, z_max = math.max( unpack( x ) ),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;math.max( unpack( y ) ),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;math.max( unpack( z ) );

&#9;-- Get the size between the extents
&#9;local x_size, y_size, z_size = &#9;x_max - x_min,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;y_max - y_min,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;z_max - z_min;

&#9;local Size = Vector3.new( x_size, y_size, z_size );

&#9;-- Get the centroid of the collection of points
&#9;local Position = CFrame.new( &#9;x_min + ( x_max - x_min ) / 2,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;y_min + ( y_max - y_min ) / 2,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;z_min + ( z_max - z_min ) / 2 );

&#9;-- Return the size of the collection of parts
&#9;return Size, Position;
end;

function _round( number, places )
&#9;-- Returns `number` rounded to the number of decimal `places`
&#9;-- (from lua-users)

&#9;local mult = 10 ^ ( places or 0 );

&#9;return math.floor( number * mult + 0.5 ) / mult;

end

function _cloneTable( source )
&#9;-- Returns a deep copy of table `source`

&#9;-- Get a copy of `source`&apos;s metatable, since the hacky method
&#9;-- we&apos;re using to copy the table doesn&apos;t include its metatable
&#9;local source_mt = getmetatable( source );

&#9;-- Return a copy of `source` including its metatable
&#9;return setmetatable( { unpack( source ) }, source_mt );
end;

function _getAllDescendants( Parent )
&#9;-- Recursively gets all the descendants of  `Parent` and returns them

&#9;local descendants = {};

&#9;for _, Child in pairs( Parent:GetChildren() ) do

&#9;&#9;-- Add the direct descendants of `Parent`
&#9;&#9;table.insert( descendants, Child );

&#9;&#9;-- Add the descendants of each child
&#9;&#9;for _, Subchild in pairs( _getAllDescendants( Child ) ) do
&#9;&#9;&#9;table.insert( descendants, Subchild );
&#9;&#9;end;

&#9;end;

&#9;return descendants;

end;

function _pointToScreenSpace( Point )
&#9;-- Returns Vector3 `Point`&apos;s position on the screen when rendered
&#9;-- (kudos to stravant for this)

&#9;local point = Camera.CoordinateFrame:pointToObjectSpace( Point );
&#9;local aspectRatio = Mouse.ViewSizeX / Mouse.ViewSizeY;
&#9;local hfactor = math.tan( math.rad( Camera.FieldOfView ) / 2 )
&#9;local wfactor = aspectRatio * hfactor;

&#9;local x = ( point.x / point.z ) / -wfactor;
&#9;local y = ( point.y / point.z ) /  hfactor;

&#9;local screen_pos = Vector2.new( Mouse.ViewSizeX * ( 0.5 + 0.5 * x ), Mouse.ViewSizeY * ( 0.5 + 0.5 * y ) );
&#9;if ( screen_pos.x &lt; 0 or screen_pos.x &gt; Mouse.ViewSizeX ) or ( screen_pos.y &lt; 0 or screen_pos.y &gt; Mouse.ViewSizeY ) then
&#9;&#9;return nil;
&#9;end;
&#9;if Camera.CoordinateFrame:toObjectSpace( CFrame.new( Point ) ).z &gt; 0 then
&#9;&#9;return nil;
&#9;end;

&#9;return screen_pos;

end;

function _cloneParts( parts )
&#9;-- Returns a table of cloned `parts`

&#9;local new_parts = {};

&#9;-- Copy the parts into `new_parts`
&#9;for part_index, Part in pairs( parts ) do
&#9;&#9;new_parts[part_index] = Part:Clone();
&#9;end;

&#9;return new_parts;
end;

function _replaceParts( old_parts, new_parts )
&#9;-- Removes `old_parts` and inserts `new_parts`

&#9;-- Remove old parts
&#9;for _, OldPart in pairs( old_parts ) do
&#9;&#9;OldPart.Parent = nil;
&#9;end;

&#9;-- Insert `new_parts
&#9;for _, NewPart in pairs( new_parts ) do
&#9;&#9;NewPart.Parent = Services.Workspace;
&#9;&#9;NewPart:MakeJoints();
&#9;end;

end;

function _splitString( str, delimiter )
&#9;-- Returns a table of string `str` split by pattern `delimiter`

&#9;local parts = {};
&#9;local pattern = ( &quot;([^%s]+)&quot; ):format( delimiter );

&#9;str:gsub( pattern, function ( part )
&#9;&#9;table.insert( parts, part );
&#9;end );

&#9;return parts;
end;

function _generateSerializationID()
&#9;-- Returns a random 5-character string
&#9;-- with characters A-Z, a-z, and 0-9
&#9;-- (there are 916,132,832 unique IDs)

&#9;local characters = {
&#9;&#9;&quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;,
&#9;&#9;&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;,
&#9;&#9;&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;Z&quot; };

&#9;local serialization_id = &quot;&quot;;

&#9;-- Pick out 5 random characters
&#9;for _ = 1, 5 do
&#9;&#9;serialization_id = serialization_id .. ( characters[math.random( #characters )] );
&#9;end;

&#9;return serialization_id;
end;

function _splitNumberListString( str )
&#9;-- Returns the contents of _splitString( str, &quot;, &quot; ), except
&#9;-- each value in the table is turned into a number

&#9;-- Get the number strings
&#9;local numbers = _splitString( str, &quot;, &quot; );

&#9;-- Turn them into numbers
&#9;for number_index, number in pairs( numbers ) do
&#9;&#9;numbers[number_index] = tonumber( number );
&#9;end;

&#9;-- Return `numbers`
&#9;return numbers;
end;

function _getSerializationPartType( Part )
&#9;-- Returns a special number that determines the type of
&#9;-- part `Part` is

&#9;local Types = {
&#9;&#9;Normal = 1,
&#9;&#9;Truss = 2,
&#9;&#9;Wedge = 3,
&#9;&#9;Corner = 4,
&#9;&#9;Cylinder = 5,
&#9;&#9;Ball = 6,
&#9;&#9;Seat = 7,
&#9;&#9;VehicleSeat = 8,
&#9;&#9;Spawn = 9
&#9;};

&#9;-- Return the appropriate type number
&#9;if Part.ClassName == &quot;Part&quot; then
&#9;&#9;if Part.Shape == Enum.PartType.Block then
&#9;&#9;&#9;return Types.Normal;
&#9;&#9;elseif Part.Shape == Enum.PartType.Cylinder then
&#9;&#9;&#9;return Types.Cylinder;
&#9;&#9;elseif Part.Shape == Enum.PartType.Ball then
&#9;&#9;&#9;return Types.Ball;
&#9;&#9;end;

&#9;elseif Part.ClassName == &quot;Seat&quot; then
&#9;&#9;return Types.Seat;

&#9;elseif Part.ClassName == &quot;VehicleSeat&quot; then
&#9;&#9;return Types.VehicleSeat;

&#9;elseif Part.ClassName == &quot;SpawnLocation&quot; then
&#9;&#9;return Types.Spawn;

&#9;elseif Part.ClassName == &quot;WedgePart&quot; then
&#9;&#9;return Types.Wedge;

&#9;elseif Part.ClassName == &quot;CornerWedgePart&quot; then
&#9;&#9;return Types.Corner;

&#9;elseif Part.ClassName == &quot;TrussPart&quot; then
&#9;&#9;return Types.Truss;

&#9;end;

end;

function _serializeParts( parts )
&#9;-- Returns JSON-encoded data about parts in
&#9;-- table `parts` that can be used to recreate them

&#9;local data = {
&#9;&#9;version = 1,
&#9;&#9;parts = {}
&#9;};

&#9;local objects = {};

&#9;-- Store part data
&#9;for _, Part in pairs( parts ) do
&#9;&#9;local part_id = _generateSerializationID();
&#9;&#9;local PartData = {
&#9;&#9;&#9;_getSerializationPartType( Part ),
&#9;&#9;&#9;_splitNumberListString( tostring( Part.Size ) ),
&#9;&#9;&#9;_splitNumberListString( tostring( Part.CFrame ) ),
&#9;&#9;&#9;Part.BrickColor.Number,
&#9;&#9;&#9;Part.Material.Value,
&#9;&#9;&#9;Part.Anchored,
&#9;&#9;&#9;Part.CanCollide,
&#9;&#9;&#9;Part.Reflectance,
&#9;&#9;&#9;Part.Transparency,
&#9;&#9;&#9;Part.TopSurface.Value,
&#9;&#9;&#9;Part.BottomSurface.Value,
&#9;&#9;&#9;Part.LeftSurface.Value,
&#9;&#9;&#9;Part.RightSurface.Value,
&#9;&#9;&#9;Part.FrontSurface.Value,
&#9;&#9;&#9;Part.BackSurface.Value
&#9;&#9;};
&#9;&#9;data.parts[part_id] = PartData;
&#9;&#9;objects[part_id] = Part;
&#9;end;

&#9;-- Get any welds in the selection
&#9;local welds = {};
&#9;for object_id, Object in pairs( objects ) do
&#9;&#9;if Object:IsA( &quot;BasePart&quot; ) then
&#9;&#9;&#9;for _, Joint in pairs( _getAllDescendants( Services.Workspace ) ) do
&#9;&#9;&#9;&#9;if Joint:IsA( &quot;Weld&quot; ) and Joint.Name == &quot;BTWeld&quot; then
&#9;&#9;&#9;&#9;&#9;if Joint.Part0 == Object and #_findTableOccurrences( objects, Joint.Part1 ) &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert( welds, Joint );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;-- Serialize any welds
&#9;if #welds &gt; 0 then
&#9;&#9;data.welds = {};
&#9;&#9;for _, Weld in pairs( welds ) do
&#9;&#9;&#9;local weld_id = _generateSerializationID();
&#9;&#9;&#9;local WeldData = {
&#9;&#9;&#9;&#9;_findTableOccurrences( objects, Weld.Part0 )[1],
&#9;&#9;&#9;&#9;_findTableOccurrences( objects, Weld.Part1 )[1],
&#9;&#9;&#9;&#9;_splitNumberListString( tostring( Weld.C1 ) )
&#9;&#9;&#9;};
&#9;&#9;&#9;data.welds[weld_id] = WeldData;
&#9;&#9;&#9;objects[weld_id] = Weld;
&#9;&#9;end;
&#9;end;

&#9;-- Get any meshes in the selection
&#9;local meshes = {};
&#9;for _, Part in pairs( parts ) do
&#9;&#9;local Mesh = _getChildOfClass( Part, &quot;SpecialMesh&quot; );
&#9;&#9;if Mesh then
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;end;
&#9;end;

&#9;-- Serialize any meshes
&#9;if #meshes &gt; 0 then
&#9;&#9;data.meshes = {};
&#9;&#9;for _, Mesh in pairs( meshes ) do
&#9;&#9;&#9;local mesh_id = _generateSerializationID();
&#9;&#9;&#9;local MeshData = {
&#9;&#9;&#9;&#9;_findTableOccurrences( objects, Mesh.Parent )[1],
&#9;&#9;&#9;&#9;Mesh.MeshType.Value,
&#9;&#9;&#9;&#9;_splitNumberListString( tostring( Mesh.Scale ) ),
&#9;&#9;&#9;&#9;Mesh.MeshId,
&#9;&#9;&#9;&#9;Mesh.TextureId,
&#9;&#9;&#9;&#9;_splitNumberListString( tostring( Mesh.VertexColor ) )
&#9;&#9;&#9;};
&#9;&#9;&#9;data.meshes[mesh_id] = MeshData;
&#9;&#9;&#9;objects[mesh_id] = Mesh;
&#9;&#9;end;
&#9;end;

&#9;-- Get any textures in the selection
&#9;local textures = {};
&#9;for _, Part in pairs( parts ) do
&#9;&#9;local textures_found = _getChildrenOfClass( Part, &quot;Texture&quot; );
&#9;&#9;for _, Texture in pairs( textures_found ) do
&#9;&#9;&#9;table.insert( textures, Texture );
&#9;&#9;end;
&#9;&#9;local decals_found = _getChildrenOfClass( Part, &quot;Decal&quot; );
&#9;&#9;for _, Decal in pairs( decals_found ) do
&#9;&#9;&#9;table.insert( textures, Decal );
&#9;&#9;end;
&#9;end;

&#9;-- Serialize any textures
&#9;if #textures &gt; 0 then
&#9;&#9;data.textures = {};
&#9;&#9;for _, Texture in pairs( textures ) do
&#9;&#9;&#9;local texture_type;
&#9;&#9;&#9;if Texture.ClassName == &quot;Decal&quot; then
&#9;&#9;&#9;&#9;texture_type = 1;
&#9;&#9;&#9;elseif Texture.ClassName == &quot;Texture&quot; then
&#9;&#9;&#9;&#9;texture_type = 2;
&#9;&#9;&#9;end;
&#9;&#9;&#9;local texture_id = _generateSerializationID();
&#9;&#9;&#9;local TextureData = {
&#9;&#9;&#9;&#9;_findTableOccurrences( objects, Texture.Parent )[1],
&#9;&#9;&#9;&#9;texture_type,
&#9;&#9;&#9;&#9;Texture.Face.Value,
&#9;&#9;&#9;&#9;Texture.Texture,
&#9;&#9;&#9;&#9;Texture.Transparency,
&#9;&#9;&#9;&#9;texture_type == 2 and Texture.StudsPerTileU or nil,
&#9;&#9;&#9;&#9;texture_type == 2 and Texture.StudsPerTileV or nil
&#9;&#9;&#9;};
&#9;&#9;&#9;data.textures[texture_id] = TextureData;
&#9;&#9;&#9;objects[texture_id] = Texture;
&#9;&#9;end;
&#9;end;

&#9;return RbxUtility.EncodeJSON( data );

end;

function _getChildOfClass( Parent, class_name, inherit )
&#9;-- Returns the first child of `Parent` that is of class `class_name`
&#9;-- or nil if it couldn&apos;t find any

&#9;-- Look for a child of `Parent` of class `class_name` and return it
&#9;if not inherit then
&#9;&#9;for _, Child in pairs( Parent:GetChildren() ) do
&#9;&#9;&#9;if Child.ClassName == class_name then
&#9;&#9;&#9;&#9;return Child;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;else
&#9;&#9;for _, Child in pairs( Parent:GetChildren() ) do
&#9;&#9;&#9;if Child:IsA( class_name ) then
&#9;&#9;&#9;&#9;return Child;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;return nil;

end;

function _getChildrenOfClass( Parent, class_name, inherit )
&#9;-- Returns a table containing the children of `Parent` that are
&#9;-- of class `class_name`
&#9;local matches = {};


&#9;if not inherit then
&#9;&#9;for _, Child in pairs( Parent:GetChildren() ) do
&#9;&#9;&#9;if Child.ClassName == class_name then
&#9;&#9;&#9;&#9;table.insert( matches, Child );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;else
&#9;&#9;for _, Child in pairs( Parent:GetChildren() ) do
&#9;&#9;&#9;if Child:IsA( class_name ) then
&#9;&#9;&#9;&#9;table.insert( matches, Child );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;return matches;
end;

function _HSVToRGB( hue, saturation, value )
&#9;-- Returns the RGB equivalent of the given HSV-defined color
&#9;-- (adapted from some code found around the web)

&#9;-- If it&apos;s achromatic, just return the value
&#9;if saturation == 0 then
&#9;&#9;return value;
&#9;end;

&#9;-- Get the hue sector
&#9;local hue_sector = math.floor( hue / 60 );
&#9;local hue_sector_offset = ( hue / 60 ) - hue_sector;

&#9;local p = value * ( 1 - saturation );
&#9;local q = value * ( 1 - saturation * hue_sector_offset );
&#9;local t = value * ( 1 - saturation * ( 1 - hue_sector_offset ) );

&#9;if hue_sector == 0 then
&#9;&#9;return value, t, p;
&#9;elseif hue_sector == 1 then
&#9;&#9;return q, value, p;
&#9;elseif hue_sector == 2 then
&#9;&#9;return p, value, t;
&#9;elseif hue_sector == 3 then
&#9;&#9;return p, q, value;
&#9;elseif hue_sector == 4 then
&#9;&#9;return t, p, value;
&#9;elseif hue_sector == 5 then
&#9;&#9;return value, p, q;
&#9;end;
end;

function _RGBToHSV( red, green, blue )
&#9;-- Returns the HSV equivalent of the given RGB-defined color
&#9;-- (adapted from some code found around the web)

&#9;local hue, saturation, value;

&#9;local min_value = math.min( red, green, blue );
&#9;local max_value = math.max( red, green, blue );

&#9;value = max_value;

&#9;local value_delta = max_value - min_value;

&#9;-- If the color is not black
&#9;if max_value ~= 0 then
&#9;&#9;saturation = value_delta / max_value;

&#9;-- If the color is purely black
&#9;else
&#9;&#9;saturation = 0;
&#9;&#9;hue = -1;
&#9;&#9;return hue, saturation, value;
&#9;end;

&#9;if red == max_value then
&#9;&#9;hue = ( green - blue ) / value_delta;
&#9;elseif green == max_value then
&#9;&#9;hue = 2 + ( blue - red ) / value_delta;
&#9;else
&#9;&#9;hue = 4 + ( red - green ) / value_delta;
&#9;end;

&#9;hue = hue * 60;
&#9;if hue &lt; 0 then
&#9;&#9;hue = hue + 360;
&#9;end;

&#9;return hue, saturation, value;
end;

------------------------------------------
-- Create data containers
------------------------------------------
ActiveKeys = {};

CurrentTool = nil;

function equipTool( NewTool )

&#9;-- If it&apos;s a different tool than the current one
&#9;if CurrentTool ~= NewTool then

&#9;&#9;-- Run (if existent) the old tool&apos;s `Unequipped` listener
&#9;&#9;if CurrentTool and CurrentTool.Listeners.Unequipped then
&#9;&#9;&#9;CurrentTool.Listeners.Unequipped();
&#9;&#9;end;

&#9;&#9;CurrentTool = NewTool;

&#9;&#9;-- Recolor the handle
&#9;&#9;Tool.Handle.BrickColor = NewTool.Color;

&#9;&#9;-- Run (if existent) the new tool&apos;s `Equipped` listener
&#9;&#9;if NewTool.Listeners.Equipped then
&#9;&#9;&#9;NewTool.Listeners.Equipped();
&#9;&#9;end;

&#9;end;
end;

-- Keep some state data
clicking = false;
selecting = false;
click_x, click_y = 0, 0;
override_selection = false;

SelectionBoxes = {};
SelectionExistenceListeners = {};
SelectionBoxColor = BrickColor.new( &quot;Cyan&quot; );
TargetBox = nil;

-- Keep a container for temporary connections
-- from the platform
Connections = {};

-- Create the handle
if not Tool:FindFirstChild( &quot;Handle&quot; ) then
&#9;Handle = RbxUtility.Create &quot;Part&quot; {
&#9;&#9;Name = &quot;Handle&quot;;
&#9;&#9;Parent = Tool;
&#9;&#9;Locked = true;
&#9;&#9;FormFactor = Enum.FormFactor.Custom;
&#9;&#9;Size = Vector3.new( 0.8, 0.8, 0.8 );
&#9;&#9;TopSurface = Enum.SurfaceType.Smooth;
&#9;&#9;BottomSurface = Enum.SurfaceType.Smooth;
&#9;};

&#9;RbxUtility.Create &quot;Decal&quot; {
&#9;&#9;Parent = Handle;
&#9;&#9;Face = Enum.NormalId.Front;
&#9;&#9;Texture = tool_decal;
&#9;};
&#9;RbxUtility.Create &quot;Decal&quot; {
&#9;&#9;Parent = Handle;
&#9;&#9;Face = Enum.NormalId.Back;
&#9;&#9;Texture = tool_decal;
&#9;};
&#9;RbxUtility.Create &quot;Decal&quot; {
&#9;&#9;Parent = Handle;
&#9;&#9;Face = Enum.NormalId.Left;
&#9;&#9;Texture = tool_decal;
&#9;};
&#9;RbxUtility.Create &quot;Decal&quot; {
&#9;&#9;Parent = Handle;
&#9;&#9;Face = Enum.NormalId.Right;
&#9;&#9;Texture = tool_decal;
&#9;};
&#9;RbxUtility.Create &quot;Decal&quot; {
&#9;&#9;Parent = Handle;
&#9;&#9;Face = Enum.NormalId.Top;
&#9;&#9;Texture = tool_decal;
&#9;};
&#9;RbxUtility.Create &quot;Decal&quot; {
&#9;&#9;Parent = Handle;
&#9;&#9;Face = Enum.NormalId.Bottom;
&#9;&#9;Texture = tool_decal;
&#9;};
end;

-- Set the grip for the handle
Tool.Grip = CFrame.new( 0, 0, 0.4 );

-- Make sure the UI container gets placed
Player:WaitForChild( &quot;PlayerGui&quot; );
wait();
UI = RbxUtility.Create &quot;ScreenGui&quot; {
&#9;Name = &quot;Building Tools by F3X (UI)&quot;,
&#9;Parent = Player.PlayerGui
};

Dragger = nil;

function updateSelectionBoxColor()
&#9;-- Updates the color of the selectionboxes
&#9;for _, SelectionBox in pairs( SelectionBoxes ) do
&#9;&#9;SelectionBox.Color = SelectionBoxColor;
&#9;end;
end;

Selection = {

&#9;[&quot;Items&quot;] = {};

&#9;-- Provide events to listen to changes in the selection
&#9;[&quot;Changed&quot;] = RbxUtility.CreateSignal();
&#9;[&quot;ItemAdded&quot;] = RbxUtility.CreateSignal();
&#9;[&quot;ItemRemoved&quot;] = RbxUtility.CreateSignal();

&#9;-- Provide a method to get an item&apos;s index in the selection
&#9;[&quot;find&quot;] = function ( self, Needle )

&#9;&#9;-- Look through all the selected items and return the matching item&apos;s index
&#9;&#9;for item_index, Item in pairs( self.Items ) do
&#9;&#9;&#9;if Item == Needle then
&#9;&#9;&#9;&#9;return item_index;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- Otherwise, return `nil`

&#9;end;

&#9;-- Provide a method to add items to the selection
&#9;[&quot;add&quot;] = function ( self, NewPart )

&#9;&#9;-- Make sure `NewPart` is selectable
&#9;&#9;if not NewPart or not NewPart:IsA( &quot;BasePart&quot; ) or NewPart.Locked or NewPart.Parent == nil then
&#9;&#9;&#9;return false;
&#9;&#9;end;

&#9;&#9;-- Make sure `NewPart` isn&apos;t already in the selection
&#9;&#9;if #_findTableOccurrences( self.Items, NewPart ) &gt; 0 then
&#9;&#9;&#9;return false;
&#9;&#9;end;

&#9;&#9;-- Insert it into the selection
&#9;&#9;table.insert( self.Items, NewPart );

&#9;&#9;-- Add its SelectionBox
&#9;&#9;SelectionBoxes[NewPart] = Instance.new( &quot;SelectionBox&quot;, UI );
&#9;&#9;SelectionBoxes[NewPart].Name = &quot;BTSelectionBox&quot;;
&#9;&#9;SelectionBoxes[NewPart].Color = SelectionBoxColor;
&#9;&#9;SelectionBoxes[NewPart].Adornee = NewPart;

&#9;&#9;-- Remove any target selection box focus
&#9;&#9;if NewPart == TargetBox.Adornee then
&#9;&#9;&#9;TargetBox.Adornee = nil;
&#9;&#9;end;

&#9;&#9;-- Make sure to remove the item from the selection when it&apos;s deleted
&#9;&#9;SelectionExistenceListeners[NewPart] = NewPart.AncestryChanged:connect( function ( Object, NewParent )
&#9;&#9;&#9;if NewParent == nil then
&#9;&#9;&#9;&#9;Selection:remove( NewPart );
&#9;&#9;&#9;end;
&#9;&#9;end );

&#9;&#9;-- Provide a reference to the last item added to the selection (i.e. NewPart)
&#9;&#9;self:focus( NewPart );

&#9;&#9;-- Fire events
&#9;&#9;self.ItemAdded:fire( NewPart );
&#9;&#9;self.Changed:fire();

&#9;end;

&#9;-- Provide a method to remove items from the selection
&#9;[&quot;remove&quot;] = function ( self, Item )

&#9;&#9;-- Make sure selection item `Item` exists
&#9;&#9;if not self:find( Item ) then
&#9;&#9;&#9;return false;
&#9;&#9;end;

&#9;&#9;-- Remove `Item`&apos;s SelectionBox
&#9;&#9;local SelectionBox = SelectionBoxes[Item];
&#9;&#9;if SelectionBox then
&#9;&#9;&#9;SelectionBox:Destroy();
&#9;&#9;end;
&#9;&#9;SelectionBoxes[Item] = nil;

&#9;&#9;-- Delete the item from the selection
&#9;&#9;table.remove( self.Items, self:find( Item ) );

&#9;&#9;-- If it was logged as the last item, change it
&#9;&#9;if self.Last == Item then
&#9;&#9;&#9;self:focus( ( #self.Items &gt; 0 ) and self.Items[#self.Items] or nil );
&#9;&#9;end;

&#9;&#9;-- Delete the existence listeners of the item
&#9;&#9;SelectionExistenceListeners[Item]:disconnect();
&#9;&#9;SelectionExistenceListeners[Item] = nil;

&#9;&#9;-- Fire events
&#9;&#9;self.ItemRemoved:fire( Item );
&#9;&#9;self.Changed:fire();

&#9;end;

&#9;-- Provide a method to clear the selection
&#9;[&quot;clear&quot;] = function ( self )

&#9;&#9;-- Go through all the items in the selection and call `self.remove` on them
&#9;&#9;for _, Item in pairs( _cloneTable( self.Items ) ) do
&#9;&#9;&#9;self:remove( Item );
&#9;&#9;end;

&#9;end;

&#9;-- Provide a method to change the focus of the selection
&#9;[&quot;focus&quot;] = function ( self, NewFocus )

&#9;&#9;-- Change the focus
&#9;&#9;self.Last = NewFocus;

&#9;&#9;-- Fire events
&#9;&#9;self.Changed:fire();

&#9;end;

};

Tools = {};

------------------------------------------
-- Define other utilities needed by tools
------------------------------------------

function createDropdown()

&#9;local Frame = RbxUtility.Create &quot;Frame&quot; {
&#9;&#9;Name = &quot;Dropdown&quot;;
&#9;&#9;Size = UDim2.new( 0, 20, 0, 20 );
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;BorderSizePixel = 0;
&#9;&#9;ClipsDescendants = true;
&#9;};

&#9;RbxUtility.Create &quot;ImageLabel&quot; {
&#9;&#9;Parent = Frame;
&#9;&#9;Name = &quot;Arrow&quot;;
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;BorderSizePixel = 0;
&#9;&#9;Image = expand_arrow;
&#9;&#9;Position = UDim2.new( 1, -21, 0, 3 );
&#9;&#9;Size = UDim2.new( 0, 20, 0, 20 );
&#9;&#9;ZIndex = 3;
&#9;};

&#9;local DropdownObject = {
&#9;&#9;-- Provide access to the actual frame
&#9;&#9;Frame = Frame;

&#9;&#9;-- Keep a list of all the options in the dropdown
&#9;&#9;_options = {};

&#9;&#9;-- Provide a function to add options to the dropdown
&#9;&#9;addOption = function ( self, option )

&#9;&#9;&#9;-- Add the option to the list
&#9;&#9;&#9;table.insert( self._options, option );

&#9;&#9;&#9;-- Create the GUI for the option
&#9;&#9;&#9;local Button = RbxUtility.Create &quot;TextButton&quot; {
&#9;&#9;&#9;&#9;Parent = self.Frame;
&#9;&#9;&#9;&#9;BackgroundColor3 = Color3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;BackgroundTransparency = 0.3;
&#9;&#9;&#9;&#9;BorderColor3 = Color3.new( 27 / 255, 42 / 255, 53 / 255 );
&#9;&#9;&#9;&#9;BorderSizePixel = 1;
&#9;&#9;&#9;&#9;Name = option;
&#9;&#9;&#9;&#9;Position = UDim2.new( math.ceil( #self._options / 9 ) - 1, 0, 0, 25 * ( ( #self._options % 9 == 0 ) and 9 or ( #self._options % 9 ) ) );
&#9;&#9;&#9;&#9;Size = UDim2.new( 1, 0, 0, 25 );
&#9;&#9;&#9;&#9;ZIndex = 3;
&#9;&#9;&#9;&#9;Text = &quot;&quot;;
&#9;&#9;&#9;};
&#9;&#9;&#9;local Label = RbxUtility.Create &quot;TextLabel&quot; {
&#9;&#9;&#9;&#9;Parent = Button;
&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;&#9;Position = UDim2.new( 0, 6, 0, 0 );
&#9;&#9;&#9;&#9;Size = UDim2.new( 1, -30, 1, 0 );
&#9;&#9;&#9;&#9;ZIndex = 3;
&#9;&#9;&#9;&#9;Font = Enum.Font.ArialBold;
&#9;&#9;&#9;&#9;FontSize = Enum.FontSize.Size12;
&#9;&#9;&#9;&#9;Text = option;
&#9;&#9;&#9;&#9;TextColor3 = Color3.new( 1, 1, 1 );
&#9;&#9;&#9;&#9;TextXAlignment = Enum.TextXAlignment.Left;
&#9;&#9;&#9;&#9;TextYAlignment = Enum.TextYAlignment.Center;
&#9;&#9;&#9;};

&#9;&#9;&#9;-- Return the button object
&#9;&#9;&#9;return Button;

&#9;&#9;end;

&#9;&#9;selectOption = function ( self, option )
&#9;&#9;&#9;self.Frame.MainButton.CurrentOption.Text = option;
&#9;&#9;end;

&#9;&#9;open = false;

&#9;&#9;toggle = function ( self )

&#9;&#9;&#9;-- If it&apos;s open, close it
&#9;&#9;&#9;if self.open then
&#9;&#9;&#9;&#9;self.Frame.MainButton.BackgroundTransparency = 0.3;
&#9;&#9;&#9;&#9;self.Frame.ClipsDescendants = true;
&#9;&#9;&#9;&#9;self.open = false;

&#9;&#9;&#9;-- If it&apos;s not open, open it
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self.Frame.MainButton.BackgroundTransparency = 0;
&#9;&#9;&#9;&#9;self.Frame.ClipsDescendants = false;
&#9;&#9;&#9;&#9;self.open = true;
&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;};

&#9;-- Create the GUI for the option
&#9;local MainButton = RbxUtility.Create &quot;TextButton&quot; {
&#9;&#9;Parent = Frame;
&#9;&#9;Name = &quot;MainButton&quot;;
&#9;&#9;BackgroundColor3 = Color3.new( 0, 0, 0 );
&#9;&#9;BackgroundTransparency = 0.3;
&#9;&#9;BorderColor3 = Color3.new( 27 / 255, 42 / 255, 53 / 255 );
&#9;&#9;BorderSizePixel = 1;
&#9;&#9;Position = UDim2.new( 0, 0, 0, 0 );
&#9;&#9;Size = UDim2.new( 1, 0, 0, 25 );
&#9;&#9;ZIndex = 2;
&#9;&#9;Text = &quot;&quot;;

&#9;&#9;-- Toggle the dropdown when pressed
&#9;&#9;[RbxUtility.Create.E &quot;MouseButton1Up&quot;] = function ()
&#9;&#9;&#9;DropdownObject:toggle();
&#9;&#9;end;
&#9;};
&#9;RbxUtility.Create &quot;TextLabel&quot; {
&#9;&#9;Parent = MainButton;
&#9;&#9;Name = &quot;CurrentOption&quot;;
&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;BorderSizePixel = 0;
&#9;&#9;Position = UDim2.new( 0, 6, 0, 0 );
&#9;&#9;Size = UDim2.new( 1, -30, 1, 0 );
&#9;&#9;ZIndex = 3;
&#9;&#9;Font = Enum.Font.ArialBold;
&#9;&#9;FontSize = Enum.FontSize.Size12;
&#9;&#9;Text = &quot;&quot;;
&#9;&#9;TextColor3 = Color3.new( 1, 1, 1 );
&#9;&#9;TextXAlignment = Enum.TextXAlignment.Left;
&#9;&#9;TextYAlignment = Enum.TextYAlignment.Center;
&#9;};

&#9;return DropdownObject;

end;

------------------------------------------
-- Provide an interface to the 2D
-- selection system
------------------------------------------

Select2D = {

&#9;-- Keep state data
&#9;[&quot;enabled&quot;] = false;

&#9;-- Keep objects
&#9;[&quot;GUI&quot;] = nil;

&#9;-- Keep temporary, disposable connections
&#9;[&quot;Connections&quot;] = {};

&#9;-- Provide an interface to the functions
&#9;[&quot;start&quot;] = function ( self )

&#9;&#9;if enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;self.enabled = true;

&#9;&#9;-- Create the GUI
&#9;&#9;self.GUI = RbxUtility.Create &quot;ScreenGui&quot; {
&#9;&#9;&#9;Name = &quot;BTSelectionRectangle&quot;;
&#9;&#9;&#9;Parent = UI;
&#9;&#9;};

&#9;&#9;local Rectangle = RbxUtility.Create &quot;Frame&quot; {
&#9;&#9;&#9;Name = &quot;Rectangle&quot;;
&#9;&#9;&#9;Active = false;
&#9;&#9;&#9;Parent = self.GUI;
&#9;&#9;&#9;BackgroundColor3 = Color3.new( 0, 0, 0 );
&#9;&#9;&#9;BackgroundTransparency = 0.5;
&#9;&#9;&#9;BorderSizePixel = 0;
&#9;&#9;&#9;Position = UDim2.new( 0, math.min( click_x, Mouse.X ), 0, math.min( click_y, Mouse.Y ) );
&#9;&#9;&#9;Size = UDim2.new( 0, math.max( click_x, Mouse.X ) - math.min( click_x, Mouse.X ), 0, math.max( click_y, Mouse.Y ) - math.min( click_y, Mouse.Y ) );
&#9;&#9;};

&#9;&#9;-- Listen for when to resize the selection
&#9;&#9;self.Connections.SelectionResize = Mouse.Move:connect( function ()
&#9;&#9;&#9;Rectangle.Position = UDim2.new( 0, math.min( click_x, Mouse.X ), 0, math.min( click_y, Mouse.Y ) );
&#9;&#9;&#9;Rectangle.Size = UDim2.new( 0, math.max( click_x, Mouse.X ) - math.min( click_x, Mouse.X ), 0, math.max( click_y, Mouse.Y ) - math.min( click_y, Mouse.Y ) );
&#9;&#9;end );

&#9;&#9;-- Listen for when the selection ends
&#9;&#9;self.Connections.SelectionEnd = Mouse.Button1Up:connect( function ()
&#9;&#9;&#9;self:select();
&#9;&#9;&#9;self:finish();
&#9;&#9;end );

&#9;end;

&#9;[&quot;select&quot;] = function ( self )

&#9;&#9;if not self.enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;for _, Object in pairs( _getAllDescendants( Services.Workspace ) ) do

&#9;&#9;&#9;-- Make sure we can select this part
&#9;&#9;&#9;if Object:IsA( &quot;BasePart&quot; ) and not Object.Locked then

&#9;&#9;&#9;&#9;-- Check if the part is rendered within the range of the selection area
&#9;&#9;&#9;&#9;local PartPosition = _pointToScreenSpace( Object.Position );
&#9;&#9;&#9;&#9;if PartPosition then
&#9;&#9;&#9;&#9;&#9;local left_check = PartPosition.x &gt;= self.GUI.Rectangle.AbsolutePosition.x;
&#9;&#9;&#9;&#9;&#9;local right_check = PartPosition.x &lt;= ( self.GUI.Rectangle.AbsolutePosition.x + self.GUI.Rectangle.AbsoluteSize.x );
&#9;&#9;&#9;&#9;&#9;local top_check = PartPosition.y &gt;= self.GUI.Rectangle.AbsolutePosition.y;
&#9;&#9;&#9;&#9;&#9;local bottom_check = PartPosition.y &lt;= ( self.GUI.Rectangle.AbsolutePosition.y + self.GUI.Rectangle.AbsoluteSize.y );

&#9;&#9;&#9;&#9;&#9;-- If the part is within the selection area, select it
&#9;&#9;&#9;&#9;&#9;if left_check and right_check and top_check and bottom_check then
&#9;&#9;&#9;&#9;&#9;&#9;Selection:add( Object );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end;

&#9;[&quot;finish&quot;] = function ( self )

&#9;&#9;if not self.enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Disconnect temporary connections
&#9;&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;&#9;Connection:disconnect();
&#9;&#9;&#9;self.Connections[connection_index] = nil;
&#9;&#9;end;

&#9;&#9;-- Remove temporary objects
&#9;&#9;self.GUI:Destroy();
&#9;&#9;self.GUI = nil;

&#9;&#9;self.enabled = false;

&#9;end;

};

------------------------------------------
-- Provide an interface to the edge
-- selection system
------------------------------------------
SelectEdge = {

&#9;-- Keep state data
&#9;[&quot;enabled&quot;] = false;
&#9;[&quot;started&quot;] = false;

&#9;-- Keep objects
&#9;[&quot;Marker&quot;] = nil;
&#9;[&quot;MarkerOutline&quot;] = RbxUtility.Create &quot;SelectionBox&quot; {
&#9;&#9;Color = BrickColor.new( &quot;Institutional white&quot; );
&#9;&#9;Parent = UI;
&#9;&#9;Name = &quot;BTEdgeSelectionMarkerOutline&quot;;
&#9;};

&#9;-- Keep temporary, disposable connections
&#9;[&quot;Connections&quot;] = {};

&#9;-- Provide an interface to the functions
&#9;[&quot;start&quot;] = function ( self, edgeSelectionCallback )

&#9;&#9;if self.started then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Listen for when to engage in selection
&#9;&#9;self.Connections.KeyListener = Mouse.KeyDown:connect( function ( key )

&#9;&#9;&#9;local key = key:lower();
&#9;&#9;&#9;local key_code = key:byte();

&#9;&#9;&#9;if key == &quot;e&quot; and #Selection.Items &gt; 0 then
&#9;&#9;&#9;&#9;self:enable( edgeSelectionCallback );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;self.started = true;

&#9;end;

&#9;[&quot;enable&quot;] = function ( self, edgeSelectionCallback )

&#9;&#9;if self.enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;self.Connections.MoveListener = Mouse.Move:connect( function ()

&#9;&#9;&#9;-- Make sure the target can be selected
&#9;&#9;&#9;if not Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;return;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Calculate the proximity to each edge
&#9;&#9;&#9;local Proximity = {};
&#9;&#9;&#9;local edges = {};

&#9;&#9;&#9;-- Create shortcuts to certain things that are expensive to call constantly
&#9;&#9;&#9;local table_insert = table.insert;
&#9;&#9;&#9;local newCFrame = CFrame.new;
&#9;&#9;&#9;local PartCFrame = Mouse.Target.CFrame;
&#9;&#9;&#9;local partCFrameOffset = PartCFrame.toWorldSpace;
&#9;&#9;&#9;local PartSize = Mouse.Target.Size / 2;
&#9;&#9;&#9;local size_x, size_y, size_z = PartSize.x, PartSize.y, PartSize.z;

&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, 0, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, size_y, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, 0, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, size_y, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, 0, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, 0, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, -size_y, size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, 0, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, -size_y, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, 0, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, 0, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, size_y, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, 0 ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, 0, -size_z ) ) );
&#9;&#9;&#9;table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, -size_y, -size_z ) ) );

&#9;&#9;&#9;-- Calculate the proximity of every edge to the mouse
&#9;&#9;&#9;for edge_index, Edge in pairs( edges ) do
&#9;&#9;&#9;&#9;Proximity[edge_index] = ( Mouse.Hit.p - Edge.p ).magnitude;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Get the closest edge to the mouse
&#9;&#9;&#9;local highest_proximity = 1;
&#9;&#9;&#9;for proximity_index, proximity in pairs( Proximity ) do
&#9;&#9;&#9;&#9;if proximity &lt; Proximity[highest_proximity] then
&#9;&#9;&#9;&#9;&#9;highest_proximity = proximity_index;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Replace the current target edge (if any)
&#9;&#9;&#9;local ClosestEdge = edges[highest_proximity];

&#9;&#9;&#9;if self.Marker then
&#9;&#9;&#9;&#9;self.Marker:Destroy();
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.Marker = RbxUtility.Create &quot;Part&quot; {
&#9;&#9;&#9;&#9;Name = &quot;BTEdgeSelectionMarker&quot;;
&#9;&#9;&#9;&#9;Anchored = true;
&#9;&#9;&#9;&#9;Locked = true;
&#9;&#9;&#9;&#9;CanCollide = false;
&#9;&#9;&#9;&#9;Transparency = 1;
&#9;&#9;&#9;&#9;FormFactor = Enum.FormFactor.Custom;
&#9;&#9;&#9;&#9;Size = Vector3.new( 0.2, 0.2, 0.2 );
&#9;&#9;&#9;&#9;CFrame = ClosestEdge;
&#9;&#9;&#9;};

&#9;&#9;&#9;self.MarkerOutline.Adornee = self.Marker;

&#9;&#9;end );

&#9;&#9;self.Connections.ClickListener = Mouse.Button1Up:connect( function ()
&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;self:select( edgeSelectionCallback );
&#9;&#9;end );

&#9;&#9;self.enabled = true;

&#9;end;

&#9;[&quot;select&quot;] = function ( self, callback )

&#9;&#9;if not self.enabled or not self.Marker then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Turn the marker into an actual part of the selection
&#9;&#9;self.Marker.Parent = Services.Workspace.CurrentCamera;
&#9;&#9;self.MarkerOutline.Adornee = self.Marker;

&#9;&#9;callback( self.Marker );

&#9;&#9;-- Stop treating it like a marker
&#9;&#9;self.Marker = nil;

&#9;&#9;self:disable();

&#9;end;

&#9;[&quot;disable&quot;] = function ( self )

&#9;&#9;if not self.enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Disconnect unnecessary temporary connections
&#9;&#9;if self.Connections.ClickListener then
&#9;&#9;&#9;self.Connections.ClickListener:disconnect();
&#9;&#9;&#9;self.Connections.ClickListener = nil;
&#9;&#9;end;
&#9;&#9;if self.Connections.MoveListener then
&#9;&#9;&#9;self.Connections.MoveListener:disconnect();
&#9;&#9;&#9;self.Connections.MoveListener = nil;
&#9;&#9;end;

&#9;&#9;-- Remove temporary objects
&#9;&#9;if self.Marker then
&#9;&#9;&#9;self.Marker:Destroy();
&#9;&#9;end;
&#9;&#9;self.Marker = nil;

&#9;&#9;self.MarkerOutline.Adornee = nil;
&#9;&#9;self.enabled = false;

&#9;end;

&#9;[&quot;stop&quot;] = function ( self )

&#9;&#9;if not self.started then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Disconnect &amp; remove all temporary connections
&#9;&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;&#9;Connection:disconnect();
&#9;&#9;&#9;self.Connections[connection_index] = nil;
&#9;&#9;end;

&#9;&#9;-- Remove temporary objects
&#9;&#9;if self.Marker then
&#9;&#9;&#9;self.Marker:Destroy();
&#9;&#9;end;

&#9;&#9;self.started = false;

&#9;end;

};

------------------------------------------
-- Provide an interface to the history
-- system
------------------------------------------
History = {

&#9;-- Keep a container for the actual history data
&#9;[&quot;Data&quot;] = {};

&#9;-- Keep state data
&#9;[&quot;index&quot;] = 0;

&#9;-- Provide functions to control the system
&#9;[&quot;undo&quot;] = function ( self )

&#9;&#9;-- Make sure we&apos;re not getting out of boundary
&#9;&#9;if self.index - 1 &lt; 0 then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Fetch the history record &amp; unapply it
&#9;&#9;local CurrentRecord = self.Data[self.index];
&#9;&#9;CurrentRecord:unapply();

&#9;&#9;-- Go back in the history
&#9;&#9;self.index = self.index - 1;

&#9;end;

&#9;[&quot;redo&quot;] = function ( self )

&#9;&#9;-- Make sure we&apos;re not getting out of boundary
&#9;&#9;if self.index + 1 &gt; #self.Data then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Go forward in the history
&#9;&#9;self.index = self.index + 1;

&#9;&#9;-- Fetch the new history record &amp; apply it
&#9;&#9;local NewRecord = self.Data[self.index];
&#9;&#9;NewRecord:apply();

&#9;end;

&#9;[&quot;add&quot;] = function ( self, Record )

&#9;&#9;-- Place the record in its right spot
&#9;&#9;self.Data[self.index + 1] = Record;

&#9;&#9;-- Advance the history index
&#9;&#9;self.index = self.index + 1;

&#9;&#9;-- Clear out the following history
&#9;&#9;for index = self.index + 1, #self.Data do
&#9;&#9;&#9;self.Data[index] = nil;
&#9;&#9;end;

&#9;end;

};


------------------------------------------
-- Provide an interface color picker
-- system
------------------------------------------
ColorPicker = {
&#9;
&#9;-- Keep some state data
&#9;[&quot;enabled&quot;] = false;
&#9;[&quot;callback&quot;] = nil;
&#9;[&quot;track_mouse&quot;] = nil;
&#9;[&quot;hue&quot;] = 0;
&#9;[&quot;saturation&quot;] = 1;
&#9;[&quot;value&quot;] = 1;

&#9;-- Keep the current GUI here
&#9;[&quot;GUI&quot;] = nil;

&#9;-- Keep temporary, disposable connections here
&#9;[&quot;Connections&quot;] = {};

&#9;-- Provide an interface to the functions
&#9;[&quot;start&quot;] = function ( self, callback, start_color )

&#9;&#9;-- Replace any existing color pickers
&#9;&#9;if self.enabled then
&#9;&#9;&#9;self:cancel();
&#9;&#9;end;
&#9;&#9;self.enabled = true;

&#9;&#9;-- Create the GUI
&#9;&#9;self.GUI = Tool.Interfaces.BTHSVColorPicker:Clone();
&#9;&#9;self.GUI.Parent = UI;

&#9;&#9;-- Register the callback function for when we&apos;re done here
&#9;&#9;self.callback = callback;

&#9;&#9;-- Update the GUI
&#9;&#9;local start_color = start_color or Color3.new( 1, 0, 0 );
&#9;&#9;self:_changeColor( _RGBToHSV( start_color.r, start_color.g, start_color.b ) );

&#9;&#9;-- Add functionality to the GUI&apos;s interactive elements
&#9;&#9;table.insert( self.Connections, self.GUI.HueSaturation.MouseButton1Down:connect( function ( x, y )
&#9;&#9;&#9;self.track_mouse = &apos;hue-saturation&apos;;
&#9;&#9;&#9;self:_onMouseMove( x, y );
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.HueSaturation.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self.track_mouse = nil;
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.MouseMoved:connect( function ( x, y )
&#9;&#9;&#9;self:_onMouseMove( x, y );
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.Value.MouseButton1Down:connect( function ( x, y )
&#9;&#9;&#9;self.track_mouse = &apos;value&apos;;
&#9;&#9;&#9;self:_onMouseMove( x, y );
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.Value.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self.track_mouse = nil;
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.OkButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:finish();
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.CancelButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:cancel();
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.HueOption.Input.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.GUI.HueOption.Input.TextBox:CaptureFocus();
&#9;&#9;end ) );
&#9;&#9;table.insert( self.Connections, self.GUI.HueOption.Input.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( self.GUI.HueOption.Input.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 360 then
&#9;&#9;&#9;&#9;&#9;potential_new = 360;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:_changeColor( potential_new, self.saturation, self.value );
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:_updateGUI();
&#9;&#9;&#9;end;
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.SaturationOption.Input.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.GUI.SaturationOption.Input.TextBox:CaptureFocus();
&#9;&#9;end ) );
&#9;&#9;table.insert( self.Connections, self.GUI.SaturationOption.Input.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( ( self.GUI.SaturationOption.Input.TextBox.Text:gsub( &apos;%%&apos;, &apos;&apos; ) ) );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 100 then
&#9;&#9;&#9;&#9;&#9;potential_new = 100;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:_changeColor( self.hue, potential_new / 100, self.value );
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:_updateGUI();
&#9;&#9;&#9;end;
&#9;&#9;end ) );

&#9;&#9;table.insert( self.Connections, self.GUI.ValueOption.Input.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.GUI.ValueOption.Input.TextBox:CaptureFocus();
&#9;&#9;end ) );
&#9;&#9;table.insert( self.Connections, self.GUI.ValueOption.Input.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( ( self.GUI.ValueOption.Input.TextBox.Text:gsub( &apos;%%&apos;, &apos;&apos; ) ) );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;elseif potential_new &gt; 100 then
&#9;&#9;&#9;&#9;&#9;potential_new = 100;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:_changeColor( self.hue, self.saturation, potential_new / 100 );
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:_updateGUI();
&#9;&#9;&#9;end;
&#9;&#9;end ) );

&#9;end;

&#9;[&quot;_onMouseMove&quot;] = function ( self, x, y )
&#9;&#9;if not self.track_mouse then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;if self.track_mouse == &apos;hue-saturation&apos; then
&#9;&#9;&#9;-- Calculate the mouse position relative to the graph
&#9;&#9;&#9;local graph_x, graph_y = x - self.GUI.HueSaturation.AbsolutePosition.x, y - self.GUI.HueSaturation.AbsolutePosition.y;

&#9;&#9;&#9;-- Make sure we&apos;re not going out of bounds
&#9;&#9;&#9;if graph_x &lt; 0 then
&#9;&#9;&#9;&#9;graph_x = 0;
&#9;&#9;&#9;elseif graph_x &gt; self.GUI.HueSaturation.AbsoluteSize.x then
&#9;&#9;&#9;&#9;graph_x = self.GUI.HueSaturation.AbsoluteSize.x;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if graph_y &lt; 0 then
&#9;&#9;&#9;&#9;graph_y = 0;
&#9;&#9;&#9;elseif graph_y &gt; self.GUI.HueSaturation.AbsoluteSize.y then
&#9;&#9;&#9;&#9;graph_y = self.GUI.HueSaturation.AbsoluteSize.y;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Calculate the new color and change it
&#9;&#9;&#9;self:_changeColor( 359 * graph_x / 209, 1 - graph_y / 200, self.value );

&#9;&#9;elseif self.track_mouse == &apos;value&apos; then
&#9;&#9;&#9;-- Calculate the mouse position relative to the value bar
&#9;&#9;&#9;local bar_y = y - self.GUI.Value.AbsolutePosition.y;

&#9;&#9;&#9;-- Make sure we&apos;re not going out of bounds
&#9;&#9;&#9;if bar_y &lt; 0 then
&#9;&#9;&#9;&#9;bar_y = 0;
&#9;&#9;&#9;elseif bar_y &gt; self.GUI.Value.AbsoluteSize.y then
&#9;&#9;&#9;&#9;bar_y = self.GUI.Value.AbsoluteSize.y;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Calculate the new color and change it
&#9;&#9;&#9;self:_changeColor( self.hue, self.saturation, 1 - bar_y / 200 );
&#9;&#9;end;
&#9;end;

&#9;[&quot;_changeColor&quot;] = function ( self, hue, saturation, value )
&#9;&#9;self.hue = hue;
&#9;&#9;self.saturation = saturation == 0 and 0.01 or saturation;
&#9;&#9;self.value = value;
&#9;&#9;self:_updateGUI();
&#9;end;

&#9;[&quot;_updateGUI&quot;] = function ( self )

&#9;&#9;self.GUI.HueSaturation.Cursor.Position = UDim2.new( 0, 209 * self.hue / 360 - 8, 0, ( 1 - self.saturation ) * 200 - 8 );
&#9;&#9;self.GUI.Value.Cursor.Position = UDim2.new( 0, -2, 0, ( 1 - self.value ) * 200 - 8 );

&#9;&#9;local color = Color3.new( _HSVToRGB( self.hue, self.saturation, self.value ) );
&#9;&#9;self.GUI.ColorDisplay.BackgroundColor3 = color;
&#9;&#9;self.GUI.Value.ColorBG.BackgroundColor3 = Color3.new( _HSVToRGB( self.hue, self.saturation, 1 ) );

&#9;&#9;self.GUI.HueOption.Bar.BackgroundColor3 = color;
&#9;&#9;self.GUI.SaturationOption.Bar.BackgroundColor3 = color;
&#9;&#9;self.GUI.ValueOption.Bar.BackgroundColor3 = color;

&#9;&#9;self.GUI.HueOption.Input.TextBox.Text = math.floor( self.hue );
&#9;&#9;self.GUI.SaturationOption.Input.TextBox.Text = math.floor( self.saturation * 100 ) .. &quot;%&quot;;
&#9;&#9;self.GUI.ValueOption.Input.TextBox.Text = math.floor( self.value * 100 ) .. &quot;%&quot;;

&#9;end;

&#9;[&quot;finish&quot;] = function ( self )

&#9;&#9;if not self.enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Remove the GUI
&#9;&#9;if self.GUI then
&#9;&#9;&#9;self.GUI:Destroy();
&#9;&#9;end;
&#9;&#9;self.GUI = nil;
&#9;&#9;self.track_mouse = nil;

&#9;&#9;-- Disconnect all temporary connections
&#9;&#9;for connection_index, connection in pairs( self.Connections ) do
&#9;&#9;&#9;connection:disconnect();
&#9;&#9;&#9;self.Connections[connection_index] = nil;
&#9;&#9;end;

&#9;&#9;-- Call the callback function that was provided to us
&#9;&#9;self.callback( self.hue, self.saturation, self.value );
&#9;&#9;self.callback = nil;

&#9;&#9;self.enabled = false;

&#9;end;

&#9;[&quot;cancel&quot;] = function ( self )

&#9;&#9;if not self.enabled then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Remove the GUI
&#9;&#9;if self.GUI then
&#9;&#9;&#9;self.GUI:Destroy();
&#9;&#9;end;
&#9;&#9;self.GUI = nil;
&#9;&#9;self.track_mouse = nil;

&#9;&#9;-- Disconnect all temporary connections
&#9;&#9;for connection_index, connection in pairs( self.Connections ) do
&#9;&#9;&#9;connection:disconnect();
&#9;&#9;&#9;self.Connections[connection_index] = nil;
&#9;&#9;end;

&#9;&#9;-- Call the callback function that was provided to us
&#9;&#9;self.callback();
&#9;&#9;self.callback = nil;

&#9;&#9;self.enabled = false;

&#9;end;

};

------------------------------------------
-- Provide an interface to the
-- import/export system
------------------------------------------
IE = {

&#9;[&quot;export&quot;] = function ()

&#9;&#9;local serialized_selection = _serializeParts( Selection.Items );

&#9;&#9;-- Dump to logs
&#9;&#9;Services.TestService:Warn( false, &quot;[Building Tools by F3X] Exported Model: \n&quot; .. serialized_selection );

&#9;&#9;-- Get ready to upload to the web for retrieval
&#9;&#9;local upload_data;
&#9;&#9;local cancelUpload;

&#9;&#9;-- Create the export dialog
&#9;&#9;local Dialog = Tool.Interfaces.BTExportDialog:Clone();
&#9;&#9;Dialog.Loading.Size = UDim2.new( 1, 0, 0, 0 );
&#9;&#9;Dialog.Parent = UI;
&#9;&#9;Dialog.Loading:TweenSize( UDim2.new( 1, 0, 0, 80 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25 );
&#9;&#9;Dialog.Loading.CloseButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;cancelUpload();
&#9;&#9;&#9;Dialog:Destroy();
&#9;&#9;end );

&#9;&#9;-- Run the upload/post-upload/failure code in a coroutine
&#9;&#9;-- so it can be cancelled
&#9;&#9;coroutine.resume( coroutine.create( function ()
&#9;&#9;&#9;cancelUpload = function ()
&#9;&#9;&#9;&#9;coroutine.yield();
&#9;&#9;&#9;end;
&#9;&#9;&#9;local upload_attempt = ypcall( function ()
&#9;&#9;&#9;&#9;upload_data = PostAsync( &quot;http://www.f3xteam.com/bt/export&quot;, serialized_selection );
&#9;&#9;&#9;end );

&#9;&#9;&#9;-- Fail graciously
&#9;&#9;&#9;if not upload_attempt then
&#9;&#9;&#9;&#9;Dialog.Loading.TextLabel.Text = &quot;Upload failed&quot;;
&#9;&#9;&#9;&#9;Dialog.Loading.CloseButton.Text = &apos;Ok :(&apos;;
&#9;&#9;&#9;&#9;return;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not ( upload_data and type( upload_data ) == &apos;string&apos; and upload_data:len() &gt; 0 ) then
&#9;&#9;&#9;&#9;Dialog.Loading.TextLabel.Text = &quot;Upload failed&quot;;
&#9;&#9;&#9;&#9;Dialog.Loading.CloseButton.Text = &apos;Ok ;(&apos;;
&#9;&#9;&#9;&#9;return;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not pcall( function () upload_data = RbxUtility.DecodeJSON( upload_data ); end ) or not upload_data then
&#9;&#9;&#9;&#9;Dialog.Loading.TextLabel.Text = &quot;Upload failed&quot;;
&#9;&#9;&#9;&#9;Dialog.Loading.CloseButton.Text = &quot;Ok :&apos;(&quot;;
&#9;&#9;&#9;&#9;return;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not upload_data.success then
&#9;&#9;&#9;&#9;Dialog.Loading.TextLabel.Text = &quot;Upload failed&quot;;
&#9;&#9;&#9;&#9;Dialog.Loading.CloseButton.Text = &quot;Ok :&apos;&apos;(&quot;;
&#9;&#9;&#9;end;

&#9;&#9;&#9;print( &quot;[Building Tools by F3X] Uploaded Export: &quot; .. upload_data.id );

&#9;&#9;&#9;Dialog.Loading.Visible = false;
&#9;&#9;&#9;Dialog.Info.Size = UDim2.new( 1, 0, 0, 0 );
&#9;&#9;&#9;Dialog.Info.CreationID.Text = upload_data.id;
&#9;&#9;&#9;Dialog.Info.Visible = true;
&#9;&#9;&#9;Dialog.Info:TweenSize( UDim2.new( 1, 0, 0, 75 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25 );
&#9;&#9;&#9;Dialog.Tip.Size = UDim2.new( 1, 0, 0, 0 );
&#9;&#9;&#9;Dialog.Tip.Visible = true;
&#9;&#9;&#9;Dialog.Tip:TweenSize( UDim2.new( 1, 0, 0, 30 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25 );
&#9;&#9;&#9;Dialog.Close.Size = UDim2.new( 1, 0, 0, 0 );
&#9;&#9;&#9;Dialog.Close.Visible = true;
&#9;&#9;&#9;Dialog.Close:TweenSize( UDim2.new( 1, 0, 0, 20 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25 );
&#9;&#9;&#9;Dialog.Close.Button.MouseButton1Up:connect( function ()
&#9;&#9;&#9;&#9;Dialog:Destroy();
&#9;&#9;&#9;end );

&#9;&#9;&#9;-- Play a confirmation sound
&#9;&#9;&#9;local Sound = RbxUtility.Create &quot;Sound&quot; {
&#9;&#9;&#9;&#9;Name = &quot;BTActionCompletionSound&quot;;
&#9;&#9;&#9;&#9;Pitch = 1.5;
&#9;&#9;&#9;&#9;SoundId = action_completion_sound;
&#9;&#9;&#9;&#9;Volume = 1;
&#9;&#9;&#9;&#9;Parent = Player;
&#9;&#9;&#9;};
&#9;&#9;&#9;Sound:Play();
&#9;&#9;&#9;Sound:Destroy();
&#9;&#9;end ) );

&#9;end;

};

------------------------------------------
-- Attach listeners
------------------------------------------

Tool.Equipped:connect( function ( CurrentMouse )

&#9;Mouse = CurrentMouse;

&#9;if not TargetBox then
&#9;&#9;TargetBox = Instance.new( &quot;SelectionBox&quot;, UI );
&#9;&#9;TargetBox.Name = &quot;BTTargetBox&quot;;
&#9;&#9;TargetBox.Color = BrickColor.new( &quot;Institutional white&quot; );
&#9;end;

&#9;-- Enable any temporarily-disabled selection boxes
&#9;for _, SelectionBox in pairs( SelectionBoxes ) do
&#9;&#9;SelectionBox.Parent = UI;
&#9;end;

&#9;-- Call the `Equipped` listener of the current tool
&#9;if CurrentTool and CurrentTool.Listeners.Equipped then
&#9;&#9;CurrentTool.Listeners.Equipped();
&#9;end;

&#9;table.insert( Connections, Mouse.KeyDown:connect( function ( key )

&#9;&#9;local key = key:lower();
&#9;&#9;local key_code = key:byte();

&#9;&#9;-- Provide the abiltiy to delete via the shift + X key combination
&#9;&#9;if ActiveKeys[47] or ActiveKeys[48] and key == &quot;x&quot; then

&#9;&#9;&#9;local selection_items = _cloneTable( Selection.Items );

&#9;&#9;&#9;-- Create a history record
&#9;&#9;&#9;local HistoryRecord = {
&#9;&#9;&#9;&#9;targets = selection_items;
&#9;&#9;&#9;&#9;parents = {};
&#9;&#9;&#9;&#9;apply = function ( self )
&#9;&#9;&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Target.Parent = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Target.Parent = self.parents[Target];
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;};

&#9;&#9;&#9;for _, Item in pairs( selection_items ) do
&#9;&#9;&#9;&#9;HistoryRecord.parents[Item] = Item.Parent;
&#9;&#9;&#9;&#9;Item.Parent = nil;
&#9;&#9;&#9;end;

&#9;&#9;&#9;History:add( HistoryRecord );

&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Provide the ability to clone via the shift + C key combination
&#9;&#9;if ActiveKeys[47] or ActiveKeys[48] and key == &quot;c&quot; then

&#9;&#9;&#9;-- Make sure that there are items in the selection
&#9;&#9;&#9;if #Selection.Items &gt; 0 then

&#9;&#9;&#9;&#9;local item_copies = {};

&#9;&#9;&#9;&#9;-- Make a copy of every item in the selection and add it to table `item_copies`
&#9;&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;&#9;&#9;local ItemCopy = Item:Clone();
&#9;&#9;&#9;&#9;&#9;ItemCopy.Parent = Services.Workspace;
&#9;&#9;&#9;&#9;&#9;table.insert( item_copies, ItemCopy );
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- Replace the selection with the copied items
&#9;&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;&#9;for _, Item in pairs( item_copies ) do
&#9;&#9;&#9;&#9;&#9;Selection:add( Item );
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;local HistoryRecord = {
&#9;&#9;&#9;&#9;&#9;copies = item_copies;
&#9;&#9;&#9;&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;&#9;&#9;&#9;for _, Copy in pairs( self.copies ) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if Copy then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Copy.Parent = nil;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;apply = function ( self )
&#9;&#9;&#9;&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;&#9;&#9;&#9;for _, Copy in pairs( self.copies ) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if Copy then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Copy.Parent = Services.Workspace;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Copy:MakeJoints();
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Selection:add( Copy );
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;};
&#9;&#9;&#9;&#9;History:add( HistoryRecord );

&#9;&#9;&#9;&#9;-- Play a confirmation sound
&#9;&#9;&#9;&#9;local Sound = RbxUtility.Create &quot;Sound&quot; {
&#9;&#9;&#9;&#9;&#9;Name = &quot;BTActionCompletionSound&quot;;
&#9;&#9;&#9;&#9;&#9;Pitch = 1.5;
&#9;&#9;&#9;&#9;&#9;SoundId = action_completion_sound;
&#9;&#9;&#9;&#9;&#9;Volume = 1;
&#9;&#9;&#9;&#9;&#9;Parent = Player;
&#9;&#9;&#9;&#9;};
&#9;&#9;&#9;&#9;Sound:Play();
&#9;&#9;&#9;&#9;Sound:Destroy();

&#9;&#9;&#9;&#9;-- Highlight the outlines of the new parts
&#9;&#9;&#9;&#9;coroutine.wrap( function ()
&#9;&#9;&#9;&#9;&#9;for transparency = 1, 0, -0.1 do
&#9;&#9;&#9;&#9;&#9;&#9;for Item, SelectionBox in pairs( SelectionBoxes ) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;SelectionBox.Transparency = transparency;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;&#9;wait( 0.1 );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end )();

&#9;&#9;&#9;end;

&#9;&#9;&#9;return;

&#9;&#9;end;

&#9;&#9;-- Undo if shift+z is pressed
&#9;&#9;if key == &quot;z&quot; and ( ActiveKeys[47] or ActiveKeys[48] ) then
&#9;&#9;&#9;History:undo();
&#9;&#9;&#9;return;

&#9;&#9;-- Redo if shift+y is pressed
&#9;&#9;elseif key == &quot;y&quot; and ( ActiveKeys[47] or ActiveKeys[48] ) then
&#9;&#9;&#9;History:redo();
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Serialize and dump selection to logs if shift+p is pressed
&#9;&#9;if key == &quot;p&quot; and ( ActiveKeys[47] or ActiveKeys[48] ) then
&#9;&#9;&#9;IE:export();
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;if key == &quot;z&quot; then
&#9;&#9;&#9;equipTool( Tools.Move );

&#9;&#9;elseif key == &quot;x&quot; then
&#9;&#9;&#9;equipTool( Tools.Resize );

&#9;&#9;elseif key == &quot;c&quot; then
&#9;&#9;&#9;equipTool( Tools.Rotate );

&#9;&#9;elseif key == &quot;v&quot; then
&#9;&#9;&#9;equipTool( Tools.Paint );

&#9;&#9;elseif key == &quot;b&quot; then
&#9;&#9;&#9;equipTool( Tools.Surface );

&#9;&#9;elseif key == &quot;n&quot; then
&#9;&#9;&#9;equipTool( Tools.Material );

&#9;&#9;elseif key == &quot;m&quot; then
&#9;&#9;&#9;equipTool( Tools.Anchor );

&#9;&#9;elseif key == &quot;k&quot; then
&#9;&#9;&#9;equipTool( Tools.Collision );

&#9;&#9;elseif key == &quot;j&quot; then
&#9;&#9;&#9;equipTool( Tools.NewPart );

&#9;&#9;elseif key == &quot;h&quot; then
&#9;&#9;&#9;equipTool( Tools.Mesh );

&#9;&#9;elseif key == &quot;g&quot; then
&#9;&#9;&#9;equipTool( Tools.Texture );

&#9;&#9;elseif key == &quot;f&quot; then
&#9;&#9;&#9;equipTool( Tools.Weld );

&#9;&#9;elseif key == &quot;u&quot; then
&#9;&#9;&#9;equipTool( Tools.Lighting );

&#9;&#9;elseif key == &quot;q&quot; then
&#9;&#9;&#9;Selection:clear();

&#9;&#9;end;

&#9;&#9;ActiveKeys[key_code] = key_code;
&#9;&#9;ActiveKeys[key] = key;

&#9;&#9;-- If it&apos;s now in multiselection mode, update `selecting`
&#9;&#9;-- (these are the left/right ctrl &amp; shift keys)
&#9;&#9;if ActiveKeys[47] or ActiveKeys[48] or ActiveKeys[49] or ActiveKeys[50] then
&#9;&#9;&#9;selecting = ActiveKeys[47] or ActiveKeys[48] or ActiveKeys[49] or ActiveKeys[50];
&#9;&#9;end;

&#9;end ) );

&#9;table.insert( Connections, Mouse.KeyUp:connect( function ( key )

&#9;&#9;local key = key:lower();
&#9;&#9;local key_code = key:byte();

&#9;&#9;ActiveKeys[key_code] = nil;
&#9;&#9;ActiveKeys[key] = nil;

&#9;&#9;-- If it&apos;s no longer in multiselection mode, update `selecting` &amp; related values
&#9;&#9;if selecting and not ActiveKeys[selecting] then
&#9;&#9;&#9;selecting = false;
&#9;&#9;&#9;if Select2D.enabled then
&#9;&#9;&#9;&#9;Select2D:select();
&#9;&#9;&#9;&#9;Select2D:finish();
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- Fire tool listeners
&#9;&#9;if CurrentTool and CurrentTool.Listeners.KeyUp then
&#9;&#9;&#9;CurrentTool.Listeners.KeyUp( key );
&#9;&#9;end;

&#9;end ) );

&#9;table.insert( Connections, Mouse.Button1Down:connect( function ()

&#9;&#9;clicking = true;
&#9;&#9;click_x, click_y = Mouse.X, Mouse.Y;

&#9;&#9;-- If multiselection is, just add to the selection
&#9;&#9;if selecting then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Fire tool listeners
&#9;&#9;if CurrentTool and CurrentTool.Listeners.Button1Down then
&#9;&#9;&#9;CurrentTool.Listeners.Button1Down();
&#9;&#9;end;

&#9;end ) );

&#9;table.insert( Connections, Mouse.Move:connect( function ()

&#9;&#9;-- If the mouse has moved since it was clicked, start 2D selection mode
&#9;&#9;if not override_selection and not Select2D.enabled and clicking and selecting and ( click_x ~= Mouse.X or click_y ~= Mouse.Y ) then
&#9;&#9;&#9;Select2D:start();
&#9;&#9;end;

&#9;&#9;-- If the target has changed, update the selectionbox appropriately
&#9;&#9;if not override_selection and Mouse.Target then
&#9;&#9;&#9;if Mouse.Target:IsA( &quot;BasePart&quot; ) and not Mouse.Target.Locked and TargetBox.Adornee ~= Mouse.Target and not Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;TargetBox.Adornee = Mouse.Target;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- When aiming at something invalid, don&apos;t highlight any targets
&#9;&#9;if not override_selection and not Mouse.Target or ( Mouse.Target and Mouse.Target:IsA( &quot;BasePart&quot; ) and Mouse.Target.Locked ) or Selection:find( Mouse.Target ) then
&#9;&#9;&#9;TargetBox.Adornee = nil;
&#9;&#9;end;

&#9;&#9;-- Fire tool listeners
&#9;&#9;if CurrentTool and CurrentTool.Listeners.Move then
&#9;&#9;&#9;CurrentTool.Listeners.Move();
&#9;&#9;end;

&#9;&#9;if override_selection then
&#9;&#9;&#9;override_selection = false;
&#9;&#9;end;

&#9;end ) );

&#9;table.insert( Connections, Mouse.Button1Up:connect( function ()

&#9;&#9;clicking = false;

&#9;&#9;-- Make sure the person didn&apos;t accidentally miss a handle or something
&#9;&#9;if not Select2D.enabled and ( Mouse.X ~= click_x or Mouse.Y ~= click_y ) then
&#9;&#9;&#9;override_selection = true;
&#9;&#9;end;

&#9;&#9;-- If the target when clicking was invalid then clear the selection (unless we&apos;re multi-selecting)
&#9;&#9;if not override_selection and not selecting and ( not Mouse.Target or ( Mouse.Target and Mouse.Target:IsA( &quot;BasePart&quot; ) and Mouse.Target.Locked ) ) then
&#9;&#9;&#9;Selection:clear();
&#9;&#9;end;

&#9;&#9;-- If multi-selecting, add to/remove from the selection
&#9;&#9;if not override_selection and selecting then

&#9;&#9;&#9;-- If the item isn&apos;t already selected, add it to the selection
&#9;&#9;&#9;if not Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;if Mouse.Target and Mouse.Target:IsA( &quot;BasePart&quot; ) and not Mouse.Target.Locked then
&#9;&#9;&#9;&#9;&#9;Selection:add( Mouse.Target );
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;-- If the item _is_ already selected, remove it from the selection
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if ( Mouse.X == click_x and Mouse.Y == click_y ) and Mouse.Target and Mouse.Target:IsA( &quot;BasePart&quot; ) and not Mouse.Target.Locked then
&#9;&#9;&#9;&#9;&#9;Selection:remove( Mouse.Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;-- If not multi-selecting, replace the selection
&#9;&#9;else
&#9;&#9;&#9;if not override_selection and Mouse.Target and Mouse.Target:IsA( &quot;BasePart&quot; ) and not Mouse.Target.Locked then
&#9;&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;&#9;Selection:add( Mouse.Target );
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- Fire tool listeners
&#9;&#9;if CurrentTool and CurrentTool.Listeners.Button1Up then
&#9;&#9;&#9;CurrentTool.Listeners.Button1Up();
&#9;&#9;end;

&#9;&#9;if override_selection then
&#9;&#9;&#9;override_selection = false;
&#9;&#9;end;

&#9;end ) );

&#9;table.insert( Connections, Mouse.Button2Down:connect( function ()
&#9;&#9;-- Fire tool listeners
&#9;&#9;if CurrentTool and CurrentTool.Listeners.Button2Down then
&#9;&#9;&#9;CurrentTool.Listeners.Button2Down();
&#9;&#9;end;
&#9;end ) );

&#9;table.insert( Connections, Mouse.Button2Up:connect( function ()
&#9;&#9;-- Fire tool listeners
&#9;&#9;if CurrentTool and CurrentTool.Listeners.Button2Up then
&#9;&#9;&#9;CurrentTool.Listeners.Button2Up();
&#9;&#9;end;
&#9;end ) );

end );

Tool.Unequipped:connect( function ()

&#9;Mouse = nil;

&#9;-- Remove the mouse target SelectionBox from `Player`
&#9;if TargetBox then
&#9;&#9;TargetBox:Destroy();
&#9;&#9;TargetBox = nil;
&#9;end;

&#9;-- Disable all the selection boxes temporarily
&#9;for _, SelectionBox in pairs( SelectionBoxes ) do
&#9;&#9;SelectionBox.Parent = nil;
&#9;end;

&#9;-- Disconnect temporary platform-related connections
&#9;for connection_index, Connection in pairs( Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;Connections[connection_index] = nil;
&#9;end;

&#9;-- Call the `Unequipped` listener of the current tool
&#9;if CurrentTool and CurrentTool.Listeners.Unequipped then
&#9;&#9;CurrentTool.Listeners.Unequipped();
&#9;end;

end );


------------------------------------------
-- Provide the platform&apos;s environment for
-- other tool scripts to extend upon
------------------------------------------

local tool_list = {
&#9;&quot;Anchor&quot;,
&#9;&quot;Collision&quot;,
&#9;&quot;Material&quot;,
&#9;&quot;Mesh&quot;,
&#9;&quot;Move&quot;,
&#9;&quot;NewPart&quot;,
&#9;&quot;Paint&quot;,
&#9;&quot;Resize&quot;,
&#9;&quot;Rotate&quot;,
&#9;&quot;Surface&quot;,
&#9;&quot;Texture&quot;,
&#9;&quot;Weld&quot;,
&#9;&quot;Lighting&quot;
};

-- Make sure all the tool scripts are in the tool &amp; deactivate them
for _, tool_name in pairs( tool_list ) do
&#9;local script_name = &quot;BT&quot; .. tool_name .. &quot;Tool&quot;;
&#9;repeat wait() until script:FindFirstChild( script_name );
&#9;script[script_name].Disabled = true;
end;

-- Load the platform
if not _G.BTCoreEnv then
&#9;_G.BTCoreEnv = {};
end;
_G.BTCoreEnv[Tool] = getfenv( 0 );
CoreReady = true;

-- Reload the tool scripts
for _, tool_name in pairs( tool_list ) do
&#9;local script_name = &quot;BT&quot; .. tool_name .. &quot;Tool&quot;;
&#9;script[script_name].Disabled = false;
end;

-- Wait for all the tools to load
for _, tool_name in pairs( tool_list ) do
&#9;if not Tools[tool_name] then
&#9;&#9;repeat wait() until Tools[tool_name];
&#9;end;
&#9;repeat wait() until Tools[tool_name].Loaded;
end;

-- Enable `Tools.Move` as the first tool
equipTool( Tools.Move );</ProtectedString>
			</Properties>
			<Item class="LocalScript" referent="RBX2">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTMoveTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Move tool
------------------------------------------

-- Create the main container for this tool
Tools.Move = {};

-- Define the color of the tool
Tools.Move.Color = BrickColor.new( &quot;Deep orange&quot; );

-- Keep a container for temporary connections
Tools.Move.Connections = {};

-- Keep options in a container too
Tools.Move.Options = {
&#9;[&quot;increment&quot;] = 1;
&#9;[&quot;axes&quot;] = &quot;global&quot;;
};

-- Keep internal state data in its own container
Tools.Move.State = {
&#9;[&quot;distance_moved&quot;] = 0;
&#9;[&quot;moving&quot;] = false;
&#9;[&quot;PreMove&quot;] = {};
};

-- Add listeners
Tools.Move.Listeners = {};

Tools.Move.Listeners.Equipped = function ()

&#9;local self = Tools.Move;

&#9;-- Make sure the tool is actually being equipped (because this is the default tool)
&#9;if not Mouse then
&#9;&#9;return;
&#9;end;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Create the boundingbox if it doesn&apos;t already exist
&#9;if not self.BoundingBox then
&#9;&#9;self.BoundingBox = RbxUtility.Create &quot;Part&quot; {
&#9;&#9;&#9;Name = &quot;BTBoundingBox&quot;;
&#9;&#9;&#9;CanCollide = false;
&#9;&#9;&#9;Transparency = 1;
&#9;&#9;&#9;Anchored = true;
&#9;&#9;};
&#9;end;
&#9;Mouse.TargetFilter = self.BoundingBox;

&#9;-- Refresh the axis type option
&#9;self:changeAxes( self.Options.axes );

&#9;-- Listen for any keystrokes that might affect any dragging operation
&#9;self.Connections.DraggerKeyListener = Mouse.KeyDown:connect( function ( key )

&#9;&#9;local key = key:lower();

&#9;&#9;-- Make sure a dragger exists
&#9;&#9;if not self.Dragger then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Rotate along the Z axis if `r` is pressed
&#9;&#9;if key == &quot;r&quot; then
&#9;&#9;&#9;self.Dragger:AxisRotate( Enum.Axis.Z );

&#9;&#9;-- Rotate along the X axis if `t` is pressed
&#9;&#9;elseif key == &quot;t&quot; then
&#9;&#9;&#9;self.Dragger:AxisRotate( Enum.Axis.X );

&#9;&#9;-- Rotate along the Y axis if `y` is pressed
&#9;&#9;elseif key == &quot;y&quot; then
&#9;&#9;&#9;self.Dragger:AxisRotate( Enum.Axis.Y );
&#9;&#9;end;

&#9;&#9;-- Simulate a mouse move so that it applies the changes
&#9;&#9;self.Dragger:MouseMove( Mouse.UnitRay );

&#9;end );

&#9;-- Oh, and update the boundingbox and the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;local updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- Update the boundingbox if it&apos;s visible
&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;self:updateBoundingBox();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Move.Listeners.Unequipped = function ()

&#9;local self = Tools.Move;

&#9;-- Stop the update loop
&#9;self.Updater();
&#9;self.Updater = nil;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Hide the handles
&#9;self:hideHandles();

&#9;-- Clear out any temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of the selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Move.updateGUI = function ( self )

&#9;if self.GUI then
&#9;&#9;local GUI = self.GUI;

&#9;&#9;if #Selection.Items &gt; 0 then

&#9;&#9;&#9;-- Look for identical numbers in each axis
&#9;&#9;&#9;local position_x, position_y, position_z =  nil, nil, nil;
&#9;&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;&#9;position_x, position_y, position_z = _round( Item.Position.x, 2 ), _round( Item.Position.y, 2 ), _round( Item.Position.z, 2 );

&#9;&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;if position_x ~= _round( Item.Position.x, 2 ) then
&#9;&#9;&#9;&#9;&#9;&#9;position_x = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if position_y ~= _round( Item.Position.y, 2 ) then
&#9;&#9;&#9;&#9;&#9;&#9;position_y = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if position_z ~= _round( Item.Position.z, 2 ) then
&#9;&#9;&#9;&#9;&#9;&#9;position_z = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;&#9;-- If each position along each axis is the same, display that number; otherwise, display &quot;*&quot;
&#9;&#9;&#9;if not self.State.pos_x_focused then
&#9;&#9;&#9;&#9;GUI.Info.Center.X.TextBox.Text = position_x and tostring( position_x ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.pos_y_focused then
&#9;&#9;&#9;&#9;GUI.Info.Center.Y.TextBox.Text = position_y and tostring( position_y ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.pos_z_focused then
&#9;&#9;&#9;&#9;GUI.Info.Center.Z.TextBox.Text = position_z and tostring( position_z ) or &quot;*&quot;;
&#9;&#9;&#9;end;

&#9;&#9;&#9;GUI.Info.Visible = true;
&#9;&#9;else
&#9;&#9;&#9;GUI.Info.Visible = false;
&#9;&#9;end;

&#9;&#9;if self.State.distance_moved then
&#9;&#9;&#9;GUI.Changes.Text.Text = &quot;moved &quot; .. tostring( self.State.distance_moved ) .. &quot; studs&quot;;
&#9;&#9;&#9;GUI.Changes.Position = GUI.Info.Visible and UDim2.new( 0, 5, 0, 165 ) or UDim2.new( 0, 5, 0, 100 );
&#9;&#9;&#9;GUI.Changes.Visible = true;
&#9;&#9;else
&#9;&#9;&#9;GUI.Changes.Text.Text = &quot;&quot;;
&#9;&#9;&#9;GUI.Changes.Visible = false;
&#9;&#9;end;
&#9;end;

end;

Tools.Move.changePosition = function ( self, component, new_value )

&#9;self:startHistoryRecord();

&#9;-- Change the position of each item selected
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.CFrame = CFrame.new(
&#9;&#9;&#9;component == &apos;x&apos; and new_value or Item.Position.x,
&#9;&#9;&#9;component == &apos;y&apos; and new_value or Item.Position.y,
&#9;&#9;&#9;component == &apos;z&apos; and new_value or Item.Position.z
&#9;&#9;);
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Move.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_positions = {};
&#9;&#9;terminal_positions = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.initial_positions[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.terminal_positions[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_positions[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;

end;

Tools.Move.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_positions[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Move.Listeners.Button1Down = function ()

&#9;local self = Tools.Move;

&#9;local Target = self.ManualTarget or Mouse.Target;
&#9;self.ManualTarget = nil;

&#9;if not Target or ( Target:IsA( &quot;BasePart&quot; ) and Target.Locked ) then
&#9;&#9;return;
&#9;end;

&#9;if not Selection:find( Target ) then
&#9;&#9;Selection:clear();
&#9;&#9;Selection:add( Target );
&#9;end;

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.RotVelocity = Vector3.new( 0, 0, 0 );
&#9;&#9;Item.Velocity = Vector3.new( 0, 0, 0 );
&#9;end;

&#9;self:startHistoryRecord();

&#9;self.State.dragging = true;
&#9;override_selection = true;

&#9;self.Dragger = Instance.new( &quot;Dragger&quot; );
&#9;self.Dragger:MouseDown( Target, Target.CFrame:toObjectSpace( CFrame.new( Mouse.Hit.p ) ).p, Selection.Items );
&#9;self.Connections.DraggerConnection = Mouse.Button1Up:connect( function ()

&#9;&#9;override_selection = true;

&#9;&#9;-- Disable the dragger
&#9;&#9;if self.Connections.DraggerConnection then
&#9;&#9;&#9;self.Connections.DraggerConnection:disconnect();
&#9;&#9;&#9;self.Connections.DraggerConnection = nil;
&#9;&#9;end;
&#9;&#9;if not self.Dragger then
&#9;&#9;&#9;return;
&#9;&#9;end;
&#9;&#9;self.Dragger:MouseUp();
&#9;&#9;self.State.dragging = false;
&#9;&#9;self.Dragger:Destroy();
&#9;&#9;self.Dragger = nil;

&#9;&#9;self:finishHistoryRecord();

&#9;end );

end;

Tools.Move.Listeners.Move = function ()

&#9;local self = Tools.Move;

&#9;if not self.Dragger then
&#9;&#9;return;
&#9;end;

&#9;override_selection = true;

&#9;self.Dragger:MouseMove( Mouse.UnitRay );

end;

Tools.Move.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTMoveToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;-- Change the axis type option when the button is clicked
&#9;&#9;Container.AxesOption.Global.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeAxes( &quot;global&quot; );
&#9;&#9;&#9;Container.AxesOption.Global.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;Container.AxesOption.Global.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;Container.AxesOption.Local.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.AxesOption.Local.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;Container.AxesOption.Last.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.AxesOption.Last.Background.Image = light_slanted_rectangle;
&#9;&#9;end );

&#9;&#9;Container.AxesOption.Local.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeAxes( &quot;local&quot; );
&#9;&#9;&#9;Container.AxesOption.Global.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.AxesOption.Global.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;Container.AxesOption.Local.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;Container.AxesOption.Local.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;Container.AxesOption.Last.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.AxesOption.Last.Background.Image = light_slanted_rectangle;
&#9;&#9;end );

&#9;&#9;Container.AxesOption.Last.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeAxes( &quot;last&quot; );
&#9;&#9;&#9;Container.AxesOption.Global.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.AxesOption.Global.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;Container.AxesOption.Local.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.AxesOption.Local.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;Container.AxesOption.Last.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;Container.AxesOption.Last.Background.Image = dark_slanted_rectangle;
&#9;&#9;end );

&#9;&#9;-- Change the increment option when the value of the textbox is updated
&#9;&#9;Container.IncrementOption.Increment.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;self.Options.increment = tonumber( Container.IncrementOption.Increment.TextBox.Text ) or self.Options.increment;
&#9;&#9;&#9;Container.IncrementOption.Increment.TextBox.Text = tostring( self.Options.increment );
&#9;&#9;end );

&#9;&#9;-- Add functionality to the position inputs
&#9;&#9;Container.Info.Center.X.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pos_x_focused = true;
&#9;&#9;&#9;Container.Info.Center.X.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.Center.X.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.Center.X.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changePosition( &apos;x&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pos_x_focused = false;
&#9;&#9;end );
&#9;&#9;Container.Info.Center.Y.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pos_y_focused = true;
&#9;&#9;&#9;Container.Info.Center.Y.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.Center.Y.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.Center.Y.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changePosition( &apos;y&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pos_y_focused = false;
&#9;&#9;end );
&#9;&#9;Container.Info.Center.Z.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pos_z_focused = true;
&#9;&#9;&#9;Container.Info.Center.Z.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.Center.Z.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.Center.Z.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changePosition( &apos;z&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pos_z_focused = false;
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Move.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Move.showHandles = function ( self, Part )

&#9;-- Create the handles if they don&apos;t exist yet
&#9;if not self.Handles then

&#9;&#9;-- Create the object
&#9;&#9;self.Handles = RbxUtility.Create &quot;Handles&quot; {
&#9;&#9;&#9;Name = &quot;BTMovementHandles&quot;;
&#9;&#9;&#9;Color = self.Color;
&#9;&#9;&#9;Parent = Player.PlayerGui;
&#9;&#9;};

&#9;&#9;-- Add functionality to the handles

&#9;&#9;self.Handles.MouseButton1Down:connect( function ()

&#9;&#9;&#9;-- Prevent the platform from thinking we&apos;re selecting
&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;self.State.moving = true;

&#9;&#9;&#9;-- Clear the change stats
&#9;&#9;&#9;self.State.distance_moved = 0;

&#9;&#9;&#9;self:startHistoryRecord();

&#9;&#9;&#9;-- Do a few things to the selection before manipulating it
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Keep a copy of the state of each item
&#9;&#9;&#9;&#9;self.State.PreMove[Item] = Item:Clone();

&#9;&#9;&#9;&#9;-- Anchor each item
&#9;&#9;&#9;&#9;Item.Anchored = true;

&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Return stuff to normal once the mouse button is released
&#9;&#9;&#9;self.Connections.HandleReleaseListener = Mouse.Button1Up:connect( function ()

&#9;&#9;&#9;&#9;-- Prevent the platform from thinking we&apos;re selecting
&#9;&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;&#9;self.State.moving = false;

&#9;&#9;&#9;&#9;-- Stop this connection from firing again
&#9;&#9;&#9;&#9;if self.Connections.HandleReleaseListener then
&#9;&#9;&#9;&#9;&#9;self.Connections.HandleReleaseListener:disconnect();
&#9;&#9;&#9;&#9;&#9;self.Connections.HandleReleaseListener = nil;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self:finishHistoryRecord();

&#9;&#9;&#9;&#9;-- Restore properties that may have been changed temporarily
&#9;&#9;&#9;&#9;-- from the pre-movement state copies
&#9;&#9;&#9;&#9;for Item, PreviousItemState in pairs( self.State.PreMove ) do
&#9;&#9;&#9;&#9;&#9;Item.Anchored = PreviousItemState.Anchored;
&#9;&#9;&#9;&#9;&#9;self.State.PreMove[Item] = nil;
&#9;&#9;&#9;&#9;&#9;Item:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Item.Velocity = Vector3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;&#9;Item.RotVelocity = Vector3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end );

&#9;&#9;end );

&#9;&#9;self.Handles.MouseDrag:connect( function ( face, drag_distance )

&#9;&#9;&#9;-- Calculate which multiple of the increment to use based on the current drag distance&apos;s
&#9;&#9;&#9;-- proximity to their nearest upper and lower multiples

&#9;&#9;&#9;local difference = drag_distance % self.Options.increment;

&#9;&#9;&#9;local lower_degree = drag_distance - difference;
&#9;&#9;&#9;local upper_degree = drag_distance - difference + self.Options.increment;

&#9;&#9;&#9;local lower_degree_proximity = math.abs( drag_distance - lower_degree );
&#9;&#9;&#9;local upper_degree_proximity = math.abs( drag_distance - upper_degree );

&#9;&#9;&#9;if lower_degree_proximity &lt;= upper_degree_proximity then
&#9;&#9;&#9;&#9;drag_distance = lower_degree;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;drag_distance = upper_degree;
&#9;&#9;&#9;end;

&#9;&#9;&#9;local increase = drag_distance;

&#9;&#9;&#9;self.State.distance_moved = drag_distance;

&#9;&#9;&#9;-- Increment the position of each selected item in the direction of `face`
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Remove any joints connected with `Item` so that it can freely move
&#9;&#9;&#9;&#9;Item:BreakJoints();

&#9;&#9;&#9;&#9;-- Update the position of `Item` depending on the type of axes that is currently set
&#9;&#9;&#9;&#9;if face == Enum.NormalId.Top then
&#9;&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( 0, increase, 0 ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( 0, increase, 0 ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( 0, increase, 0 ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Bottom then
&#9;&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( 0, -increase, 0 ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( 0, -increase, 0 ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( 0, -increase, 0 ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Front then
&#9;&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( 0, 0, -increase ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, -increase ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( 0, 0, -increase ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Back then
&#9;&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( 0, 0, increase ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, increase ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( 0, 0, increase ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Right then
&#9;&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( increase, 0, 0 ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( increase, 0, 0 ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( increase, 0, 0 ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Left then
&#9;&#9;&#9;&#9;&#9;if self.Options.axes == &quot;global&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( -increase, 0, 0 ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( -increase, 0, 0 ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.axes == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( -increase, 0, 0 ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;end;

&#9;-- Stop listening for the existence of the previous adornee (if any)
&#9;if self.Connections.AdorneeExistenceListener then
&#9;&#9;self.Connections.AdorneeExistenceListener:disconnect();
&#9;&#9;self.Connections.AdorneeExistenceListener = nil;
&#9;end;

&#9;-- Attach the handles to `Part`
&#9;self.Handles.Adornee = Part;

&#9;-- Make sure to hide the handles if `Part` suddenly stops existing
&#9;self.Connections.AdorneeExistenceListener = Part.AncestryChanged:connect( function ( Object, NewParent )

&#9;&#9;-- Make sure this change in parent applies directly to `Part`
&#9;&#9;if Object ~= Part then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Show the handles according to the existence of the part
&#9;&#9;if NewParent == nil then
&#9;&#9;&#9;self:hideHandles();
&#9;&#9;else
&#9;&#9;&#9;self:showHandles( Part );
&#9;&#9;end;

&#9;end );

end;

Tools.Move.hideHandles = function ( self )

&#9;-- Hide the handles if they exist
&#9;if self.Handles then
&#9;&#9;self.Handles.Adornee = nil;
&#9;end;

end;

Tools.Move.updateBoundingBox = function ( self )

&#9;if #Selection.Items &gt; 0 and not self.State.dragging then
&#9;&#9;local SelectionSize, SelectionPosition = _getCollectionInfo( Selection.Items );
&#9;&#9;self.BoundingBox.Size = SelectionSize;
&#9;&#9;self.BoundingBox.CFrame = SelectionPosition;
&#9;&#9;self:showHandles( self.BoundingBox );

&#9;else
&#9;&#9;self:hideHandles();
&#9;end;

end;

Tools.Move.changeAxes = function ( self, new_axes )

&#9;-- Have a quick reference to the GUI (if any)
&#9;local AxesOptionGUI = self.GUI and self.GUI.AxesOption or nil;

&#9;-- Disconnect any handle-related listeners that are specific to a certain axes option

&#9;if self.Connections.HandleFocusChangeListener then
&#9;&#9;self.Connections.HandleFocusChangeListener:disconnect();
&#9;&#9;self.Connections.HandleFocusChangeListener = nil;
&#9;end;

&#9;if self.Connections.HandleSelectionChangeListener then
&#9;&#9;self.Connections.HandleSelectionChangeListener:disconnect();
&#9;&#9;self.Connections.HandleSelectionChangeListener = nil;
&#9;end;

&#9;if new_axes == &quot;global&quot; then

&#9;&#9;-- Update the options
&#9;&#9;self.Options.axes = &quot;global&quot;;

&#9;&#9;-- Clear out any previous adornee
&#9;&#9;self:hideHandles();

&#9;&#9;-- Focus the handles on the boundary box
&#9;&#9;self:showHandles( self.BoundingBox );

&#9;&#9;-- Update the GUI&apos;s option panel
&#9;&#9;if self.GUI then
&#9;&#9;&#9;AxesOptionGUI.Global.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;AxesOptionGUI.Global.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;AxesOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;AxesOptionGUI.Local.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;AxesOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;AxesOptionGUI.Last.Background.Image = light_slanted_rectangle;
&#9;&#9;end;

&#9;end;

&#9;if new_axes == &quot;local&quot; then

&#9;&#9;-- Update the options
&#9;&#9;self.Options.axes = &quot;local&quot;;

&#9;&#9;-- Always have the handles on the most recent addition to the selection
&#9;&#9;self.Connections.HandleSelectionChangeListener = Selection.Changed:connect( function ()

&#9;&#9;&#9;-- Clear out any previous adornee
&#9;&#9;&#9;self:hideHandles();

&#9;&#9;&#9;-- If there /is/ a last item in the selection, attach the handles to it
&#9;&#9;&#9;if Selection.Last then
&#9;&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Switch the adornee of the handles if the second mouse button is pressed
&#9;&#9;self.Connections.HandleFocusChangeListener = Mouse.Button2Up:connect( function ()

&#9;&#9;&#9;-- Make sure the platform doesn&apos;t think we&apos;re selecting
&#9;&#9;&#9;override_selection = true;

&#9;&#9;&#9;-- If the target is in the selection, make it the new adornee
&#9;&#9;&#9;if Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;Selection:focus( Mouse.Target );
&#9;&#9;&#9;&#9;self:showHandles( Mouse.Target );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Finally, attach the handles to the last item added to the selection (if any)
&#9;&#9;if Selection.Last then
&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;end;

&#9;&#9;-- Update the GUI&apos;s option panel
&#9;&#9;if self.GUI then
&#9;&#9;&#9;AxesOptionGUI.Global.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;AxesOptionGUI.Global.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;AxesOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;AxesOptionGUI.Local.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;AxesOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;AxesOptionGUI.Last.Background.Image = light_slanted_rectangle;
&#9;&#9;end;

&#9;end;

&#9;if new_axes == &quot;last&quot; then

&#9;&#9;-- Update the options
&#9;&#9;self.Options.axes = &quot;last&quot;;

&#9;&#9;-- Always have the handles on the most recent addition to the selection
&#9;&#9;self.Connections.HandleSelectionChangeListener = Selection.Changed:connect( function ()

&#9;&#9;&#9;-- Clear out any previous adornee
&#9;&#9;&#9;self:hideHandles();

&#9;&#9;&#9;-- If there /is/ a last item in the selection, attach the handles to it
&#9;&#9;&#9;if Selection.Last then
&#9;&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Switch the adornee of the handles if the second mouse button is pressed
&#9;&#9;self.Connections.HandleFocusChangeListener = Mouse.Button2Up:connect( function ()

&#9;&#9;&#9;-- Make sure the platform doesn&apos;t think we&apos;re selecting
&#9;&#9;&#9;override_selection = true;

&#9;&#9;&#9;-- If the target is in the selection, make it the new adornee
&#9;&#9;&#9;if Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;Selection:focus( Mouse.Target );
&#9;&#9;&#9;&#9;self:showHandles( Mouse.Target );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Finally, attach the handles to the last item added to the selection (if any)
&#9;&#9;if Selection.Last then
&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;end;

&#9;&#9;-- Update the GUI&apos;s option panel
&#9;&#9;if self.GUI then
&#9;&#9;&#9;AxesOptionGUI.Global.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;AxesOptionGUI.Global.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;AxesOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;AxesOptionGUI.Local.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;AxesOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;AxesOptionGUI.Last.Background.Image = dark_slanted_rectangle;
&#9;&#9;end;

&#9;end;

end;

Tools.Move.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX3">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTResizeTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Resize tool
------------------------------------------

-- Create the tool
Tools.Resize = {};

-- Create structures that will be used within the tool
Tools.Resize.Connections = {};

Tools.Resize.Options = {
&#9;[&quot;increment&quot;] = 1;
&#9;[&quot;directions&quot;] = &quot;normal&quot;;
};

Tools.Resize.State = {
&#9;[&quot;PreResize&quot;] = {};
&#9;[&quot;previous_distance&quot;] = 0;
&#9;[&quot;resizing&quot;] = false;
&#9;[&quot;length_resized&quot;] = 0;
};

Tools.Resize.Listeners = {};

-- Define the color of the tool
Tools.Resize.Color = BrickColor.new( &quot;Cyan&quot; );

Tools.Resize.Listeners.Equipped = function ()

&#9;local self = Tools.Resize;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Always have the handles on the most recent addition to the selection
&#9;table.insert( self.Connections, Selection.Changed:connect( function ()

&#9;&#9;-- Clear out any previous adornee
&#9;&#9;self:hideHandles();

&#9;&#9;-- If there /is/ a last item in the selection, attach the handles to it
&#9;&#9;if Selection.Last then
&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;end;

&#9;end ) );

&#9;-- Switch the adornee of the handles if the second mouse button is pressed
&#9;table.insert( self.Connections, Mouse.Button2Up:connect( function ()

&#9;&#9;-- Make sure the platform doesn&apos;t think we&apos;re selecting
&#9;&#9;override_selection = true;

&#9;&#9;-- If the target is in the selection, make it the new adornee
&#9;&#9;if Selection:find( Mouse.Target ) then
&#9;&#9;&#9;Selection:focus( Mouse.Target );
&#9;&#9;end;

&#9;end ) );

&#9;-- Finally, attach the handles to the last item added to the selection (if any)
&#9;if Selection.Last then
&#9;&#9;self:showHandles( Selection.Last );
&#9;end;

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;local updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Resize.Listeners.Unequipped = function ()

&#9;local self = Tools.Resize;

&#9;-- Stop the update loop
&#9;self.Updater();
&#9;self.Updater = nil;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Hide the handles
&#9;self:hideHandles();

&#9;-- Clear out any temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of the selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Resize.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTResizeToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;-- Change the axis type option when the button is clicked
&#9;&#9;Container.DirectionsOption.Normal.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.Options.directions = &quot;normal&quot;;
&#9;&#9;&#9;Container.DirectionsOption.Normal.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;Container.DirectionsOption.Normal.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;Container.DirectionsOption.Both.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.DirectionsOption.Both.Background.Image = light_slanted_rectangle;
&#9;&#9;end );

&#9;&#9;Container.DirectionsOption.Both.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.Options.directions = &quot;both&quot;;
&#9;&#9;&#9;Container.DirectionsOption.Normal.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;Container.DirectionsOption.Normal.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;Container.DirectionsOption.Both.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;Container.DirectionsOption.Both.Background.Image = dark_slanted_rectangle;
&#9;&#9;end );

&#9;&#9;-- Change the increment option when the value of the textbox is updated
&#9;&#9;Container.IncrementOption.Increment.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;self.Options.increment = tonumber( Container.IncrementOption.Increment.TextBox.Text ) or self.Options.increment;
&#9;&#9;&#9;Container.IncrementOption.Increment.TextBox.Text = tostring( self.Options.increment );
&#9;&#9;end );

&#9;&#9;-- Add functionality to the size inputs
&#9;&#9;Container.Info.SizeInfo.X.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.size_x_focused = true;
&#9;&#9;&#9;Container.Info.SizeInfo.X.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.SizeInfo.X.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.SizeInfo.X.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeSize( &apos;x&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.size_x_focused = false;
&#9;&#9;end );
&#9;&#9;Container.Info.SizeInfo.Y.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.size_y_focused = true;
&#9;&#9;&#9;Container.Info.SizeInfo.Y.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.SizeInfo.Y.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.SizeInfo.Y.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeSize( &apos;y&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.size_y_focused = false;
&#9;&#9;end );
&#9;&#9;Container.Info.SizeInfo.Z.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.size_z_focused = true;
&#9;&#9;&#9;Container.Info.SizeInfo.Z.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.SizeInfo.Z.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.SizeInfo.Z.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeSize( &apos;z&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.size_z_focused = false;
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Resize.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_positions = {};
&#9;&#9;terminal_positions = {};
&#9;&#9;initial_sizes = {};
&#9;&#9;terminal_sizes = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.Size = self.initial_sizes[Target];
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.initial_positions[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.Size = self.terminal_sizes[Target];
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.terminal_positions[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_sizes[Item] = Item.Size;
&#9;&#9;&#9;self.State.HistoryRecord.initial_positions[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;

end;

Tools.Resize.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_sizes[Item] = Item.Size;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_positions[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Resize.changeSize = function ( self, component, new_value )

&#9;self:startHistoryRecord();

&#9;-- Change the size of each item selected
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local OldCFrame = Item.CFrame;
&#9;&#9;-- Make the item be able to be freely resized
&#9;&#9;if ( pcall( function () local test = Item.FormFactor; end ) ) then
&#9;&#9;&#9;Item.FormFactor = Enum.FormFactor.Custom;
&#9;&#9;end;
&#9;&#9;Item.Size = Vector3.new(
&#9;&#9;&#9;component == &apos;x&apos; and new_value or Item.Size.x,
&#9;&#9;&#9;component == &apos;y&apos; and new_value or Item.Size.y,
&#9;&#9;&#9;component == &apos;z&apos; and new_value or Item.Size.z
&#9;&#9;);
&#9;&#9;Item.CFrame = OldCFrame;
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Resize.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;local GUI = self.GUI;

&#9;if #Selection.Items &gt; 0 then

&#9;&#9;-- Look for identical numbers in each axis
&#9;&#9;local size_x, size_y, size_z =  nil, nil, nil;
&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;size_x, size_y, size_z = _round( Item.Size.x, 2 ), _round( Item.Size.y, 2 ), _round( Item.Size.z, 2 );

&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if size_x ~= _round( Item.Size.x, 2 ) then
&#9;&#9;&#9;&#9;&#9;size_x = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if size_y ~= _round( Item.Size.y, 2 ) then
&#9;&#9;&#9;&#9;&#9;size_y = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if size_z ~= _round( Item.Size.z, 2 ) then
&#9;&#9;&#9;&#9;&#9;size_z = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;&#9;-- Update the size info on the GUI
&#9;&#9;if not self.State.size_x_focused then
&#9;&#9;&#9;GUI.Info.SizeInfo.X.TextBox.Text = size_x and tostring( size_x ) or &quot;*&quot;;
&#9;&#9;end;
&#9;&#9;if not self.State.size_y_focused then
&#9;&#9;&#9;GUI.Info.SizeInfo.Y.TextBox.Text = size_y and tostring( size_y ) or &quot;*&quot;;
&#9;&#9;end;
&#9;&#9;if not self.State.size_z_focused then
&#9;&#9;&#9;GUI.Info.SizeInfo.Z.TextBox.Text = size_z and tostring( size_z ) or &quot;*&quot;;
&#9;&#9;end;

&#9;&#9;GUI.Info.Visible = true;
&#9;else
&#9;&#9;GUI.Info.Visible = false;
&#9;end;

&#9;if self.State.length_resized then
&#9;&#9;GUI.Changes.Text.Text = &quot;resized &quot; .. tostring( self.State.length_resized ) .. &quot; studs&quot;;
&#9;&#9;GUI.Changes.Position = GUI.Info.Visible and UDim2.new( 0, 5, 0, 165 ) or UDim2.new( 0, 5, 0, 100 );
&#9;&#9;GUI.Changes.Visible = true;
&#9;else
&#9;&#9;GUI.Changes.Text.Text = &quot;&quot;;
&#9;&#9;GUI.Changes.Visible = false;
&#9;end;

end;

Tools.Resize.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Resize.showHandles = function ( self, Part )

&#9;-- Create the handles if they don&apos;t exist yet
&#9;if not self.Handles then

&#9;&#9;-- Create the object
&#9;&#9;self.Handles = RbxUtility.Create &quot;Handles&quot; {
&#9;&#9;&#9;Name = &quot;BTResizeHandles&quot;;
&#9;&#9;&#9;Style = Enum.HandlesStyle.Resize;
&#9;&#9;&#9;Color = self.Color;
&#9;&#9;&#9;Parent = Player.PlayerGui;
&#9;&#9;};

&#9;&#9;-- Add functionality to the handles
&#9;&#9;self.Handles.MouseButton1Down:connect( function ()

&#9;&#9;&#9;-- Prevent the platform from thinking we&apos;re selecting
&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;self.State.resizing = true;

&#9;&#9;&#9;-- Clear the change stats
&#9;&#9;&#9;self.State.length_resized = 0;

&#9;&#9;&#9;self:startHistoryRecord();

&#9;&#9;&#9;-- Do a few things to the selection before manipulating it
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Keep a copy of the state of each item
&#9;&#9;&#9;&#9;self.State.PreResize[Item] = Item:Clone();

&#9;&#9;&#9;&#9;-- Make the item be able to be freely resized
&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.FormFactor; end ) ) then
&#9;&#9;&#9;&#9;&#9;Item.FormFactor = Enum.FormFactor.Custom;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- Anchor each item
&#9;&#9;&#9;&#9;Item.Anchored = true;

&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Return stuff to normal once the mouse button is released
&#9;&#9;&#9;self.Connections.HandleReleaseListener = Mouse.Button1Up:connect( function ()

&#9;&#9;&#9;&#9;-- Prevent the platform from thinking we&apos;re selecting
&#9;&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;&#9;self.State.resizing = false;

&#9;&#9;&#9;&#9;-- Stop this connection from firing again
&#9;&#9;&#9;&#9;if self.Connections.HandleReleaseListener then
&#9;&#9;&#9;&#9;&#9;self.Connections.HandleReleaseListener:disconnect();
&#9;&#9;&#9;&#9;&#9;self.Connections.HandleReleaseListener = nil;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self:finishHistoryRecord();

&#9;&#9;&#9;&#9;-- Restore properties that may have been changed temporarily
&#9;&#9;&#9;&#9;-- from the pre-resize state copies
&#9;&#9;&#9;&#9;for Item, PreviousItemState in pairs( self.State.PreResize ) do
&#9;&#9;&#9;&#9;&#9;Item.Anchored = PreviousItemState.Anchored;
&#9;&#9;&#9;&#9;&#9;self.State.PreResize[Item] = nil;
&#9;&#9;&#9;&#9;&#9;Item:MakeJoints();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end );

&#9;&#9;end );

&#9;&#9;self.Handles.MouseDrag:connect( function ( face, drag_distance )

&#9;&#9;&#9;-- Calculate which multiple of the increment to use based on the current drag distance&apos;s
&#9;&#9;&#9;-- proximity to their nearest upper and lower multiples

&#9;&#9;&#9;local difference = drag_distance % self.Options.increment;

&#9;&#9;&#9;local lower_degree = drag_distance - difference;
&#9;&#9;&#9;local upper_degree = drag_distance - difference + self.Options.increment;

&#9;&#9;&#9;local lower_degree_proximity = math.abs( drag_distance - lower_degree );
&#9;&#9;&#9;local upper_degree_proximity = math.abs( drag_distance - upper_degree );

&#9;&#9;&#9;if lower_degree_proximity &lt;= upper_degree_proximity then
&#9;&#9;&#9;&#9;drag_distance = lower_degree;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;drag_distance = upper_degree;
&#9;&#9;&#9;end;

&#9;&#9;&#9;local increase = drag_distance;

&#9;&#9;&#9;-- Log the distance that the handle was dragged
&#9;&#9;&#9;self.State.previous_distance = drag_distance;

&#9;&#9;&#9;-- Note the length by which the selection will be enlarged
&#9;&#9;&#9;if self.Options.directions == &quot;both&quot; then
&#9;&#9;&#9;&#9;increase = drag_distance * 2;
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.length_resized = increase;

&#9;&#9;&#9;-- Go through the selection and make changes to it
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Keep a copy of `Item` in case we need to revert anything
&#9;&#9;&#9;&#9;local PreviousItemState = Item:Clone();

&#9;&#9;&#9;&#9;-- Break any of `Item`&apos;s joints so it can move freely
&#9;&#9;&#9;&#9;Item:BreakJoints();

&#9;&#9;&#9;&#9;-- Position and resize `Item` according to the options and the handle that was used

&#9;&#9;&#9;&#9;if face == Enum.NormalId.Top then

&#9;&#9;&#9;&#9;&#9;-- Calculate the appropriate increment to the size based on the shape of `Item`
&#9;&#9;&#9;&#9;&#9;local SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, increase, increase );
&#9;&#9;&#9;&#9;&#9;elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( 0, increase, 0 );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;&#9;Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.directions == &quot;normal&quot; and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( 0, increase / 2, 0 ) ) )
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  or ( self.Options.directions == &quot;both&quot; and self.State.PreResize[Item].CFrame );
&#9;&#9;&#9;&#9;&#9;-- If the resizing was not possible, revert `Item`&apos;s state
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Item.Size = PreviousItemState.Size;
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = PreviousItemState.CFrame;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Bottom then

&#9;&#9;&#9;&#9;&#9;-- Calculate the appropriate increment to the size based on the shape of `Item`
&#9;&#9;&#9;&#9;&#9;local SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, increase, increase );
&#9;&#9;&#9;&#9;&#9;elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( 0, increase, 0 );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;&#9;Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.directions == &quot;normal&quot; and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( 0, -increase / 2, 0 ) ) )
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  or ( self.Options.directions == &quot;both&quot; and self.State.PreResize[Item].CFrame );
&#9;&#9;&#9;&#9;&#9;-- If the resizing was not possible, revert `Item`&apos;s state
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Item.Size = PreviousItemState.Size;
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = PreviousItemState.CFrame;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Front then

&#9;&#9;&#9;&#9;&#9;-- Calculate the appropriate increment to the size based on the shape of `Item`
&#9;&#9;&#9;&#9;&#9;local SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, increase, increase );
&#9;&#9;&#9;&#9;&#9;elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( 0, 0, increase );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;&#9;Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.directions == &quot;normal&quot; and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, -increase / 2 ) ) )
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  or ( self.Options.directions == &quot;both&quot; and self.State.PreResize[Item].CFrame );
&#9;&#9;&#9;&#9;&#9;-- If the resizing was not possible, revert `Item`&apos;s state
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Item.Size = PreviousItemState.Size;
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = PreviousItemState.CFrame;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Back then

&#9;&#9;&#9;&#9;&#9;-- Calculate the appropriate increment to the size based on the shape of `Item`
&#9;&#9;&#9;&#9;&#9;local SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, increase, increase );
&#9;&#9;&#9;&#9;&#9;elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( 0, 0, increase );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;&#9;Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.directions == &quot;normal&quot; and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, increase / 2 ) ) )
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  or ( self.Options.directions == &quot;both&quot; and self.State.PreResize[Item].CFrame );
&#9;&#9;&#9;&#9;&#9;-- If the resizing was not possible, revert `Item`&apos;s state
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Item.Size = PreviousItemState.Size;
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = PreviousItemState.CFrame;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Left then

&#9;&#9;&#9;&#9;&#9;-- Calculate the appropriate increment to the size based on the shape of `Item`
&#9;&#9;&#9;&#9;&#9;local SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, increase, increase );
&#9;&#9;&#9;&#9;&#9;elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, 0, 0 );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;&#9;Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.directions == &quot;normal&quot; and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( -increase / 2, 0, 0 ) ) )
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  or ( self.Options.directions == &quot;both&quot; and self.State.PreResize[Item].CFrame );
&#9;&#9;&#9;&#9;&#9;-- If the resizing was not possible, revert `Item`&apos;s state
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Item.Size = PreviousItemState.Size;
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = PreviousItemState.CFrame;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;elseif face == Enum.NormalId.Right then

&#9;&#9;&#9;&#9;&#9;-- Calculate the appropriate increment to the size based on the shape of `Item`
&#9;&#9;&#9;&#9;&#9;local SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, increase, increase );
&#9;&#9;&#9;&#9;&#9;elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
&#9;&#9;&#9;&#9;&#9;&#9;SizeIncrease = Vector3.new( increase, 0, 0 );
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;&#9;Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
&#9;&#9;&#9;&#9;&#9;if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.directions == &quot;normal&quot; and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( increase / 2, 0, 0 ) ) )
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  or ( self.Options.directions == &quot;both&quot; and self.State.PreResize[Item].CFrame );
&#9;&#9;&#9;&#9;&#9;-- If the resizing was not possible, revert `Item`&apos;s state
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Item.Size = PreviousItemState.Size;
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = PreviousItemState.CFrame;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- Make joints with surrounding parts again once the resizing is done
&#9;&#9;&#9;&#9;Item:MakeJoints();

&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;end;

&#9;-- Stop listening for the existence of the previous adornee (if any)
&#9;if self.Connections.AdorneeExistenceListener then
&#9;&#9;self.Connections.AdorneeExistenceListener:disconnect();
&#9;&#9;self.Connections.AdorneeExistenceListener = nil;
&#9;end;

&#9;-- Attach the handles to `Part`
&#9;self.Handles.Adornee = Part;

&#9;-- Make sure to hide the handles if `Part` suddenly stops existing
&#9;self.Connections.AdorneeExistenceListener = Part.AncestryChanged:connect( function ( Object, NewParent )

&#9;&#9;-- Make sure this change in parent applies directly to `Part`
&#9;&#9;if Object ~= Part then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Show the handles according to the existence of the part
&#9;&#9;if NewParent == nil then
&#9;&#9;&#9;self:hideHandles();
&#9;&#9;else
&#9;&#9;&#9;self:showHandles( Part );
&#9;&#9;end;

&#9;end );

end;

Tools.Resize.hideHandles = function ( self )

&#9;-- Hide the handles if they exist
&#9;if self.Handles then
&#9;&#9;self.Handles.Adornee = nil;
&#9;end;

end;

Tools.Resize.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX4">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTRotateTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Rotate tool
------------------------------------------

-- Create the tool
Tools.Rotate = {};

-- Create structures to hold data that the tool needs
Tools.Rotate.Connections = {};

Tools.Rotate.Options = {
&#9;[&quot;increment&quot;] = 15;
&#9;[&quot;pivot&quot;] = &quot;center&quot;
};

Tools.Rotate.State = {
&#9;[&quot;PreRotation&quot;] = {};
&#9;[&quot;rotating&quot;] = false;
&#9;[&quot;previous_distance&quot;] = 0;
&#9;[&quot;degrees_rotated&quot;] = 0;
&#9;[&quot;rotation_size&quot;] = 0;
};

Tools.Rotate.Listeners = {};

-- Define the color of the tool
Tools.Rotate.Color = BrickColor.new( &quot;Bright green&quot; );

-- Start adding functionality to the tool
Tools.Rotate.Listeners.Equipped = function ()

&#9;local self = Tools.Rotate;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Create the boundingbox if it doesn&apos;t already exist
&#9;if not self.BoundingBox then
&#9;&#9;self.BoundingBox = RbxUtility.Create &quot;Part&quot; {
&#9;&#9;&#9;Name = &quot;BTBoundingBox&quot;;
&#9;&#9;&#9;CanCollide = false;
&#9;&#9;&#9;Transparency = 1;
&#9;&#9;&#9;Anchored = true;
&#9;&#9;};
&#9;end;
&#9;Mouse.TargetFilter = self.BoundingBox;

&#9;-- Update the pivot option
&#9;self:changePivot( self.Options.pivot );

&#9;-- Oh, and update the boundingbox and the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;local updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- Update the boundingbox if it&apos;s visible
&#9;&#9;&#9;&#9;if self.Options.pivot == &quot;center&quot; then
&#9;&#9;&#9;&#9;&#9;self:updateBoundingBox();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

&#9;-- Also enable the ability to select an edge as a pivot
&#9;SelectEdge:start( function ( EdgeMarker )
&#9;&#9;self:changePivot( &quot;last&quot; );
&#9;&#9;self.Options.PivotPoint = EdgeMarker.CFrame;
&#9;&#9;self:showHandles( EdgeMarker );
&#9;end );

end;

Tools.Rotate.Listeners.Unequipped = function ()

&#9;local self = Tools.Rotate;

&#9;-- Stop the update loop
&#9;self.Updater();
&#9;self.Updater = nil;

&#9;-- Disable the ability to select edges
&#9;SelectEdge:stop();
&#9;if self.Options.PivotPoint then
&#9;&#9;self.Options.PivotPoint = nil;
&#9;end;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Hide the handles
&#9;self:hideHandles();

&#9;-- Clear out any temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of the selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Rotate.Listeners.Button1Down = function ()

&#9;local self = Tools.Rotate;

&#9;if not self.State.rotating and self.Options.PivotPoint then
&#9;&#9;self.Options.PivotPoint = nil;
&#9;end;

end;

Tools.Rotate.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTRotateToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;-- Change the pivot type option when the button is clicked
&#9;&#9;Container.PivotOption.Center.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changePivot( &quot;center&quot; );
&#9;&#9;end );

&#9;&#9;Container.PivotOption.Local.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changePivot( &quot;local&quot; );
&#9;&#9;end );

&#9;&#9;Container.PivotOption.Last.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changePivot( &quot;last&quot; );
&#9;&#9;end );

&#9;&#9;-- Change the increment option when the value of the textbox is updated
&#9;&#9;Container.IncrementOption.Increment.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;self.Options.increment = tonumber( Container.IncrementOption.Increment.TextBox.Text ) or self.Options.increment;
&#9;&#9;&#9;Container.IncrementOption.Increment.TextBox.Text = tostring( self.Options.increment );
&#9;&#9;end );

&#9;&#9;-- Add functionality to the rotation inputs
&#9;&#9;Container.Info.RotationInfo.X.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.rot_x_focused = true;
&#9;&#9;&#9;Container.Info.RotationInfo.X.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.RotationInfo.X.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.RotationInfo.X.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeRotation( &apos;x&apos;, math.rad( potential_new ) );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.rot_x_focused = false;
&#9;&#9;end );
&#9;&#9;Container.Info.RotationInfo.Y.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.rot_y_focused = true;
&#9;&#9;&#9;Container.Info.RotationInfo.Y.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.RotationInfo.Y.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.RotationInfo.Y.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeRotation( &apos;y&apos;, math.rad( potential_new ) );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.rot_y_focused = false;
&#9;&#9;end );
&#9;&#9;Container.Info.RotationInfo.Z.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.rot_z_focused = true;
&#9;&#9;&#9;Container.Info.RotationInfo.Z.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.Info.RotationInfo.Z.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.Info.RotationInfo.Z.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeRotation( &apos;z&apos;, math.rad( potential_new ) );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.rot_z_focused = false;
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Rotate.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_cframes = {};
&#9;&#9;terminal_cframes = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.initial_cframes[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.terminal_cframes[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_cframes[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;

end;

Tools.Rotate.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_cframes[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Rotate.changeRotation = function ( self, component, new_value )

&#9;self:startHistoryRecord();

&#9;-- Change the rotation of each item selected
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local old_x_rot, old_y_rot, old_z_rot = Item.CFrame:toEulerAnglesXYZ();
&#9;&#9;Item.CFrame = CFrame.new( Item.Position ) * CFrame.Angles(
&#9;&#9;&#9;component == &apos;x&apos; and new_value or old_x_rot,
&#9;&#9;&#9;component == &apos;y&apos; and new_value or old_y_rot,
&#9;&#9;&#9;component == &apos;z&apos; and new_value or old_z_rot
&#9;&#9;);
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Rotate.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;local GUI = self.GUI;

&#9;if #Selection.Items &gt; 0 then

&#9;&#9;-- Look for identical numbers in each axis
&#9;&#9;local rot_x, rot_y, rot_z = nil, nil, nil;
&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;local item_rot_x, item_rot_y, item_rot_z = Item.CFrame:toEulerAnglesXYZ();

&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;rot_x, rot_y, rot_z = _round( math.deg( item_rot_x ), 2 ), _round( math.deg( item_rot_y ), 2 ), _round( math.deg( item_rot_z ), 2 );

&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if rot_x ~= _round( math.deg( item_rot_x ), 2 ) then
&#9;&#9;&#9;&#9;&#9;rot_x = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if rot_y ~= _round( math.deg( item_rot_y ), 2 ) then
&#9;&#9;&#9;&#9;&#9;rot_y = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if rot_z ~= _round( math.deg( item_rot_z ), 2 ) then
&#9;&#9;&#9;&#9;&#9;rot_z = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;&#9;-- Update the size info on the GUI
&#9;&#9;if not self.State.rot_x_focused then
&#9;&#9;&#9;GUI.Info.RotationInfo.X.TextBox.Text = rot_x and tostring( rot_x ) or &quot;*&quot;;
&#9;&#9;end;
&#9;&#9;if not self.State.rot_y_focused then
&#9;&#9;&#9;GUI.Info.RotationInfo.Y.TextBox.Text = rot_y and tostring( rot_y ) or &quot;*&quot;;
&#9;&#9;end;
&#9;&#9;if not self.State.rot_z_focused then
&#9;&#9;&#9;GUI.Info.RotationInfo.Z.TextBox.Text = rot_z and tostring( rot_z ) or &quot;*&quot;;
&#9;&#9;end;

&#9;&#9;GUI.Info.Visible = true;
&#9;else
&#9;&#9;GUI.Info.Visible = false;
&#9;end;

&#9;if self.State.degrees_rotated then
&#9;&#9;GUI.Changes.Text.Text = &quot;rotated &quot; .. tostring( self.State.degrees_rotated ) .. &quot; degrees&quot;;
&#9;&#9;GUI.Changes.Position = GUI.Info.Visible and UDim2.new( 0, 5, 0, 165 ) or UDim2.new( 0, 5, 0, 100 );
&#9;&#9;GUI.Changes.Visible = true;
&#9;else
&#9;&#9;GUI.Changes.Text.Text = &quot;&quot;;
&#9;&#9;GUI.Changes.Visible = false;
&#9;end;

end;

Tools.Rotate.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Rotate.updateBoundingBox = function ( self )

&#9;if #Selection.Items &gt; 0 then
&#9;&#9;local SelectionSize, SelectionPosition = _getCollectionInfo( Selection.Items );
&#9;&#9;self.BoundingBox.Size = SelectionSize;
&#9;&#9;self.BoundingBox.CFrame = SelectionPosition;
&#9;&#9;self:showHandles( self.BoundingBox );

&#9;else
&#9;&#9;self:hideHandles();
&#9;end;

end;

Tools.Rotate.changePivot = function ( self, new_pivot )

&#9;-- Have a quick reference to the GUI (if any)
&#9;local PivotOptionGUI = self.GUI and self.GUI.PivotOption or nil;

&#9;-- Disconnect any handle-related listeners that are specific to a certain pivot option
&#9;if self.Connections.HandleFocusChangeListener then
&#9;&#9;self.Connections.HandleFocusChangeListener:disconnect();
&#9;&#9;self.Connections.HandleFocusChangeListener = nil;
&#9;end;

&#9;if self.Connections.HandleSelectionChangeListener then
&#9;&#9;self.Connections.HandleSelectionChangeListener:disconnect();
&#9;&#9;self.Connections.HandleSelectionChangeListener = nil;
&#9;end;

&#9;-- Remove any temporary edge selection
&#9;if self.Options.PivotPoint then
&#9;&#9;self.Options.PivotPoint = nil;
&#9;end;

&#9;if new_pivot == &quot;center&quot; then

&#9;&#9;-- Update the options
&#9;&#9;self.Options.pivot = &quot;center&quot;;

&#9;&#9;-- Focus the handles on the boundingbox
&#9;&#9;self:showHandles( self.BoundingBox );

&#9;&#9;-- Update the GUI&apos;s option panel
&#9;&#9;if self.GUI then
&#9;&#9;&#9;PivotOptionGUI.Center.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;PivotOptionGUI.Center.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;PivotOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;PivotOptionGUI.Local.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;PivotOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;PivotOptionGUI.Last.Background.Image = light_slanted_rectangle;
&#9;&#9;end;

&#9;end;

&#9;if new_pivot == &quot;local&quot; then

&#9;&#9;-- Update the options
&#9;&#9;self.Options.pivot = &quot;local&quot;;

&#9;&#9;-- Always have the handles on the most recent addition to the selection
&#9;&#9;self.Connections.HandleSelectionChangeListener = Selection.Changed:connect( function ()

&#9;&#9;&#9;-- Clear out any previous adornee
&#9;&#9;&#9;self:hideHandles();

&#9;&#9;&#9;-- If there /is/ a last item in the selection, attach the handles to it
&#9;&#9;&#9;if Selection.Last then
&#9;&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Switch the adornee of the handles if the second mouse button is pressed
&#9;&#9;self.Connections.HandleFocusChangeListener = Mouse.Button2Up:connect( function ()

&#9;&#9;&#9;-- Make sure the platform doesn&apos;t think we&apos;re selecting
&#9;&#9;&#9;override_selection = true;

&#9;&#9;&#9;-- If the target is in the selection, make it the new adornee
&#9;&#9;&#9;if Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;Selection:focus( Mouse.Target );
&#9;&#9;&#9;&#9;self:showHandles( Mouse.Target );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Finally, attach the handles to the last item added to the selection (if any)
&#9;&#9;if Selection.Last then
&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;end;

&#9;&#9;-- Update the GUI&apos;s option panel
&#9;&#9;if self.GUI then
&#9;&#9;&#9;PivotOptionGUI.Center.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;PivotOptionGUI.Center.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;PivotOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;PivotOptionGUI.Local.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;PivotOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;PivotOptionGUI.Last.Background.Image = light_slanted_rectangle;
&#9;&#9;end;

&#9;end;

&#9;if new_pivot == &quot;last&quot; then

&#9;&#9;-- Update the options
&#9;&#9;self.Options.pivot = &quot;last&quot;;

&#9;&#9;-- Always have the handles on the most recent addition to the selection
&#9;&#9;self.Connections.HandleSelectionChangeListener = Selection.Changed:connect( function ()

&#9;&#9;&#9;-- Clear out any previous adornee
&#9;&#9;&#9;if not self.Options.PivotPoint then
&#9;&#9;&#9;&#9;self:hideHandles();
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- If there /is/ a last item in the selection, attach the handles to it
&#9;&#9;&#9;if Selection.Last and not self.Options.PivotPoint then
&#9;&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Switch the adornee of the handles if the second mouse button is pressed
&#9;&#9;self.Connections.HandleFocusChangeListener = Mouse.Button2Up:connect( function ()

&#9;&#9;&#9;-- Make sure the platform doesn&apos;t think we&apos;re selecting
&#9;&#9;&#9;override_selection = true;

&#9;&#9;&#9;-- If the target is in the selection, make it the new adornee
&#9;&#9;&#9;if Selection:find( Mouse.Target ) then
&#9;&#9;&#9;&#9;Selection:focus( Mouse.Target );
&#9;&#9;&#9;&#9;self:showHandles( Mouse.Target );
&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;&#9;-- Finally, attach the handles to the last item added to the selection (if any)
&#9;&#9;if Selection.Last then
&#9;&#9;&#9;self:showHandles( Selection.Last );
&#9;&#9;end;

&#9;&#9;-- Update the GUI&apos;s option panel
&#9;&#9;if self.GUI then
&#9;&#9;&#9;PivotOptionGUI.Center.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;PivotOptionGUI.Center.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;PivotOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;PivotOptionGUI.Local.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;PivotOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;PivotOptionGUI.Last.Background.Image = dark_slanted_rectangle;
&#9;&#9;end;

&#9;end;

end;


Tools.Rotate.showHandles = function ( self, Part )

&#9;-- Create the handles if they don&apos;t exist yet
&#9;if not self.Handles then

&#9;&#9;-- Create the object
&#9;&#9;self.Handles = RbxUtility.Create &quot;ArcHandles&quot; {
&#9;&#9;&#9;Name = &quot;BTRotationHandles&quot;;
&#9;&#9;&#9;Color = self.Color;
&#9;&#9;&#9;Parent = Player.PlayerGui;
&#9;&#9;};

&#9;&#9;-- Add functionality to the handles

&#9;&#9;self.Handles.MouseButton1Down:connect( function ()

&#9;&#9;&#9;-- Prevent the platform from thinking we&apos;re selecting
&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;self.State.rotating = true;

&#9;&#9;&#9;-- Clear the change stats
&#9;&#9;&#9;self.State.degrees_rotated = 0;
&#9;&#9;&#9;self.State.rotation_size = 0;

&#9;&#9;&#9;self:startHistoryRecord();

&#9;&#9;&#9;-- Do a few things to the selection before manipulating it
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Keep a copy of the state of each item
&#9;&#9;&#9;&#9;self.State.PreRotation[Item] = Item:Clone();

&#9;&#9;&#9;&#9;-- Anchor each item
&#9;&#9;&#9;&#9;Item.Anchored = true;

&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Also keep the position of the original selection
&#9;&#9;&#9;local PreRotationSize, PreRotationPosition = _getCollectionInfo( self.State.PreRotation );
&#9;&#9;&#9;self.State.PreRotationPosition = PreRotationPosition;

&#9;&#9;&#9;-- Return stuff to normal once the mouse button is released
&#9;&#9;&#9;self.Connections.HandleReleaseListener = Mouse.Button1Up:connect( function ()

&#9;&#9;&#9;&#9;-- Prevent the platform from thinking we&apos;re selecting
&#9;&#9;&#9;&#9;override_selection = true;
&#9;&#9;&#9;&#9;self.State.rotating = false;

&#9;&#9;&#9;&#9;-- Stop this connection from firing again
&#9;&#9;&#9;&#9;if self.Connections.HandleReleaseListener then
&#9;&#9;&#9;&#9;&#9;self.Connections.HandleReleaseListener:disconnect();
&#9;&#9;&#9;&#9;&#9;self.Connections.HandleReleaseListener = nil;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self:finishHistoryRecord();

&#9;&#9;&#9;&#9;-- Restore properties that may have been changed temporarily
&#9;&#9;&#9;&#9;-- from the pre-rotation state copies
&#9;&#9;&#9;&#9;for Item, PreviousItemState in pairs( self.State.PreRotation ) do
&#9;&#9;&#9;&#9;&#9;Item.Anchored = PreviousItemState.Anchored;
&#9;&#9;&#9;&#9;&#9;self.State.PreRotation[Item] = nil;
&#9;&#9;&#9;&#9;&#9;Item:MakeJoints();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end );

&#9;&#9;end );

&#9;&#9;self.Handles.MouseDrag:connect( function ( axis, drag_distance )

&#9;&#9;&#9;-- Round down and convert the drag distance to degrees to make it easier to work with
&#9;&#9;&#9;local drag_distance = math.floor( math.deg( drag_distance ) );

&#9;&#9;&#9;-- Calculate which multiple of the increment to use based on the current angle&apos;s
&#9;&#9;&#9;-- proximity to their nearest upper and lower multiples

&#9;&#9;&#9;local difference = drag_distance % self.Options.increment;

&#9;&#9;&#9;local lower_degree = drag_distance - difference;
&#9;&#9;&#9;local upper_degree = drag_distance - difference + self.Options.increment;

&#9;&#9;&#9;local lower_degree_proximity = math.abs( drag_distance - lower_degree );
&#9;&#9;&#9;local upper_degree_proximity = math.abs( drag_distance - upper_degree );

&#9;&#9;&#9;if lower_degree_proximity &lt;= upper_degree_proximity then
&#9;&#9;&#9;&#9;drag_distance = lower_degree;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;drag_distance = upper_degree;
&#9;&#9;&#9;end;

&#9;&#9;&#9;local increase = self.Options.increment * math.floor( drag_distance / self.Options.increment );

&#9;&#9;&#9;self.State.degrees_rotated = drag_distance;

&#9;&#9;&#9;-- Go through the selection and make changes to it
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;-- Keep a copy of `Item` in case we need to revert anything
&#9;&#9;&#9;&#9;local PreviousItemState = Item:Clone();

&#9;&#9;&#9;&#9;-- Break any of `Item`&apos;s joints so it can move freely
&#9;&#9;&#9;&#9;Item:BreakJoints();

&#9;&#9;&#9;&#9;-- Rotate `Item` according to the options and the handle that was used
&#9;&#9;&#9;&#9;if axis == Enum.Axis.Y then
&#9;&#9;&#9;&#9;&#9;if self.Options.pivot == &quot;center&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreRotationPosition:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, math.rad( increase ), 0 ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.State.PreRotationPosition ):inverse() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.pivot == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreRotation[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, math.rad( increase ), 0 ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.pivot == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, math.rad( increase ), 0 ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;elseif axis == Enum.Axis.X then
&#9;&#9;&#9;&#9;&#9;if self.Options.pivot == &quot;center&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreRotationPosition:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( math.rad( increase ), 0, 0 ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.State.PreRotationPosition ):inverse() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.pivot == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreRotation[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( math.rad( increase ), 0, 0 ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.pivot == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( math.rad( increase ), 0, 0 ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;elseif axis == Enum.Axis.Z then
&#9;&#9;&#9;&#9;&#9;if self.Options.pivot == &quot;center&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreRotationPosition:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, 0, math.rad( increase ) ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.State.PreRotationPosition ):inverse() );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.pivot == &quot;local&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = self.State.PreRotation[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, 0, math.rad( increase ) ) );
&#9;&#9;&#9;&#9;&#9;elseif self.Options.pivot == &quot;last&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Item.CFrame = ( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, 0, math.rad( increase ) ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):inverse() );
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- Make joints with surrounding parts again once the resizing is done
&#9;&#9;&#9;&#9;Item:MakeJoints();

&#9;&#9;&#9;end;

&#9;&#9;end );

&#9;end;

&#9;-- Stop listening for the existence of the previous adornee (if any)
&#9;if self.Connections.AdorneeExistenceListener then
&#9;&#9;self.Connections.AdorneeExistenceListener:disconnect();
&#9;&#9;self.Connections.AdorneeExistenceListener = nil;
&#9;end;

&#9;-- Attach the handles to `Part`
&#9;self.Handles.Adornee = Part;

&#9;-- Make sure to hide the handles if `Part` suddenly stops existing
&#9;self.Connections.AdorneeExistenceListener = Part.AncestryChanged:connect( function ( Object, NewParent )

&#9;&#9;-- Make sure this change in parent applies directly to `Part`
&#9;&#9;if Object ~= Part then
&#9;&#9;&#9;return;
&#9;&#9;end;

&#9;&#9;-- Show the handles according to the existence of the part
&#9;&#9;if NewParent == nil then
&#9;&#9;&#9;self:hideHandles();
&#9;&#9;else
&#9;&#9;&#9;self:showHandles( Part );
&#9;&#9;end;

&#9;end );

end;

Tools.Rotate.hideHandles = function ( self )

&#9;-- Hide the handles if they exist
&#9;if self.Handles then
&#9;&#9;self.Handles.Adornee = nil;
&#9;end;

end;

Tools.Rotate.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX5">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTPaintTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Paint tool
------------------------------------------

-- Create the main container for this tool
Tools.Paint = {};

-- Define the color of the tool
Tools.Paint.Color = BrickColor.new( &quot;Really red&quot; );

-- Define options
Tools.Paint.Options = {
&#9;[&quot;Color&quot;] = nil
};

Tools.Paint.State = {};

-- Add listeners
Tools.Paint.Listeners = {};

Tools.Paint.Listeners.Equipped = function ()

&#9;local self = Tools.Paint;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Show the GUI
&#9;self:showGUI();

&#9;-- Update the selected color
&#9;self:changeColor( self.Options.Color );

end;

Tools.Paint.Listeners.Unequipped = function ()

&#9;local self = Tools.Paint;

&#9;-- Clear out the preferred color option
&#9;self:changeColor( nil );

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Restore the original color of the selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Paint.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_colors = {};
&#9;&#9;terminal_colors = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.BrickColor = self.initial_colors[Target];
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.BrickColor = self.terminal_colors[Target];
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_colors[Item] = Item.BrickColor;
&#9;&#9;end;
&#9;end;

end;

Tools.Paint.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_colors[Item] = Item.BrickColor;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Paint.Listeners.Button1Up = function ()

&#9;local self = Tools.Paint;

&#9;-- Make sure that they clicked on one of the items in their selection
&#9;-- (and they weren&apos;t multi-selecting)
&#9;if Selection:find( Mouse.Target ) and not selecting and not selecting then

&#9;&#9;override_selection = true;

&#9;&#9;self:startHistoryRecord();

&#9;&#9;-- Paint all of the selected items `Tools.Paint.Options.Color`
&#9;&#9;if self.Options.Color then
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;&#9;Item.BrickColor = self.Options.Color;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;self:finishHistoryRecord();

&#9;end;

end;

Tools.Paint.changeColor = function ( self, Color )

&#9;-- Alright so if `Color` is given, set that as the preferred color
&#9;if Color then

&#9;&#9;-- First of all, change the color option itself
&#9;&#9;self.Options.Color = Color;

&#9;&#9;self:startHistoryRecord();

&#9;&#9;-- Then, we want to update the color of any items in the selection
&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;Item.BrickColor = Color;
&#9;&#9;end;

&#9;&#9;self:finishHistoryRecord();

&#9;&#9;-- After that, we want to mark our new color in the palette
&#9;&#9;if self.GUI then

&#9;&#9;&#9;-- First clear out any other marks
&#9;&#9;&#9;for _, ColorSquare in pairs( self.GUI.Palette:GetChildren() ) do
&#9;&#9;&#9;&#9;ColorSquare.Text = &quot;&quot;;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Then mark the right square
&#9;&#9;&#9;self.GUI.Palette[Color.Name].Text = &quot;X&quot;;

&#9;&#9;end;

&#9;-- Otherwise, let&apos;s assume no color at all
&#9;else

&#9;&#9;-- Set the preferred color to none
&#9;&#9;self.Options.Color = nil;

&#9;&#9;-- Clear out any color option marks on any of the squares
&#9;&#9;if self.GUI then
&#9;&#9;&#9;for _, ColorSquare in pairs( self.GUI.Palette:GetChildren() ) do
&#9;&#9;&#9;&#9;ColorSquare.Text = &quot;&quot;;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;end;

end;

Tools.Paint.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTPaintToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;for _, ColorButton in pairs( Container.Palette:GetChildren() ) do
&#9;&#9;&#9;ColorButton.MouseButton1Click:connect( function ()
&#9;&#9;&#9;&#9;self:changeColor( BrickColor.new( ColorButton.Name ) );
&#9;&#9;&#9;end );
&#9;&#9;end;

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Paint.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Paint.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX6">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTSurfaceTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Surface tool
------------------------------------------

-- Create the tool
Tools.Surface = {};

-- Define the tool&apos;s color
Tools.Surface.Color = BrickColor.new( &quot;Bright violet&quot; );

-- Keep a container for temporary connections
Tools.Surface.Connections = {};

-- Keep a container for state data
Tools.Surface.State = {
&#9;[&quot;type&quot;] = nil;
};

-- Maintain a container for options
Tools.Surface.Options = {
&#9;[&quot;side&quot;] = Enum.NormalId.Front;
};

-- Keep a container for platform event connections
Tools.Surface.Listeners = {};

-- Start adding functionality to the tool
Tools.Surface.Listeners.Equipped = function ()

&#9;local self = Tools.Surface;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Restore the side option
&#9;self:changeSurface( self.Options.side );

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;local updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the surface type of every item in the selection
&#9;&#9;&#9;&#9;local surface_type = nil;
&#9;&#9;&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;surface_type = Item[self.Options.side.Name .. &quot;Surface&quot;];

&#9;&#9;&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;if surface_type ~= Item[self.Options.side.Name .. &quot;Surface&quot;] then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;surface_type = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self.State.type = surface_type;

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Surface.Listeners.Unequipped = function ()

&#9;local self = Tools.Surface;

&#9;-- Stop the GUI updating loop
&#9;self.Updater();
&#9;self.Updater = nil;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Surface.Listeners.Button2Down = function ()

&#9;local self = Tools.Surface;

&#9;-- Capture the camera rotation (for later use
&#9;-- in determining whether a surface was being
&#9;-- selected or the camera was being rotated
&#9;-- with the right mouse button)
&#9;local cr_x, cr_y, cr_z = Camera.CoordinateFrame:toEulerAnglesXYZ();
&#9;self.State.PreB2DownCameraRotation = Vector3.new( cr_x, cr_y, cr_z );

end;

Tools.Surface.Listeners.Button2Up = function ()

&#9;local self = Tools.Surface;

&#9;local cr_x, cr_y, cr_z = Camera.CoordinateFrame:toEulerAnglesXYZ();
&#9;local CameraRotation = Vector3.new( cr_x, cr_y, cr_z );

&#9;-- If a surface is selected
&#9;if Selection:find( Mouse.Target ) and self.State.PreB2DownCameraRotation == CameraRotation then
&#9;&#9;self:changeSurface( Mouse.TargetSurface );
&#9;end;

end;

Tools.Surface.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;target_surface = self.Options.side;
&#9;&#9;initial_surfaces = {};
&#9;&#9;terminal_surfaces = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target[self.target_surface.Name .. &quot;Surface&quot;] = self.initial_surfaces[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target[self.target_surface.Name .. &quot;Surface&quot;] = self.terminal_surfaces[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_surfaces[Item] = Item[self.Options.side.Name .. &quot;Surface&quot;];
&#9;&#9;end;
&#9;end;

end;

Tools.Surface.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_surfaces[Item] = Item[self.Options.side.Name .. &quot;Surface&quot;];
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Surface.SpecialTypeNames = {
&#9;SmoothNoOutlines = &quot;NO OUTLINE&quot;,
&#9;Inlet = &quot;INLETS&quot;
};

Tools.Surface.changeType = function ( self, surface_type )

&#9;self:startHistoryRecord();

&#9;-- Apply `surface_type` to all items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item[self.Options.side.Name .. &quot;Surface&quot;] = surface_type;
&#9;&#9;Item:MakeJoints();
&#9;end;

&#9;self:finishHistoryRecord();

&#9;self.TypeDropdown:selectOption( self.SpecialTypeNames[surface_type.Name] or surface_type.Name:upper() );
&#9;if self.TypeDropdown.open then
&#9;&#9;self.TypeDropdown:toggle();
&#9;end;
end;

Tools.Surface.changeSurface = function ( self, surface )
&#9;self.Options.side = surface;
&#9;self.SideDropdown:selectOption( surface.Name:upper() );
&#9;if self.SideDropdown.open then
&#9;&#9;self.SideDropdown:toggle();
&#9;end;
end;

Tools.Surface.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;if #Selection.Items &gt; 0 then
&#9;&#9;self.TypeDropdown:selectOption( self.State.type and ( self.SpecialTypeNames[self.State.type.Name] or self.State.type.Name:upper() ) or &quot;*&quot; );
&#9;else
&#9;&#9;self.TypeDropdown:selectOption( &quot;&quot; );
&#9;end;

end;

Tools.Surface.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTSurfaceToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;local SideDropdown = createDropdown();
&#9;&#9;self.SideDropdown = SideDropdown;
&#9;&#9;SideDropdown.Frame.Parent = Container.SideOption;
&#9;&#9;SideDropdown.Frame.Position = UDim2.new( 0, 30, 0, 0 );
&#9;&#9;SideDropdown.Frame.Size = UDim2.new( 0, 72, 0, 25 );

&#9;&#9;SideDropdown:addOption( &quot;TOP&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSurface( Enum.NormalId.Top );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;BOTTOM&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSurface( Enum.NormalId.Bottom );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;FRONT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSurface( Enum.NormalId.Front );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;BACK&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSurface( Enum.NormalId.Back );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;LEFT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSurface( Enum.NormalId.Left );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;RIGHT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSurface( Enum.NormalId.Right );
&#9;&#9;end );

&#9;&#9;local TypeDropdown = createDropdown();
&#9;&#9;self.TypeDropdown = TypeDropdown;
&#9;&#9;TypeDropdown.Frame.Parent = Container.TypeOption;
&#9;&#9;TypeDropdown.Frame.Position = UDim2.new( 0, 30, 0, 0 );
&#9;&#9;TypeDropdown.Frame.Size = UDim2.new( 0, 87, 0, 25 );

&#9;&#9;TypeDropdown:addOption( &quot;STUDS&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Studs );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;INLETS&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Inlet );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;SMOOTH&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Smooth );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;WELD&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Weld );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;GLUE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Glue );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;UNIVERSAL&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Universal );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;HINGE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Hinge );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;MOTOR&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.Motor );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;NO OUTLINE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.SurfaceType.SmoothNoOutlines );
&#9;&#9;end );

&#9;&#9;self.GUI = Container;

&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Surface.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Surface.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX7">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTMaterialTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Material tool
------------------------------------------

-- Create the tool
Tools.Material = {};
Tools.Material.Color = BrickColor.new( &quot;Bright violet&quot; );
Tools.Material.Connections = {};
Tools.Material.State = {
&#9;[&quot;material&quot;] = nil;
&#9;[&quot;reflectance_focused&quot;] = false;
&#9;[&quot;transparency_focused&quot;] = false;
};
Tools.Material.Listeners = {};
Tools.Material.SpecialMaterialNames = {
&#9;CorrodedMetal = &quot;CORRODED METAL&quot;,
&#9;DiamondPlate = &quot;DIAMOND PLATE&quot;,
&#9;SmoothPlastic = &quot;SMOOTH PLASTIC&quot;
};

-- Start adding functionality to the tool
Tools.Material.Listeners.Equipped = function ()

&#9;local self = Tools.Material;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;local updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the material type of every item in the selection
&#9;&#9;&#9;&#9;local material_type, transparency, reflectance = nil, nil, nil;
&#9;&#9;&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;material_type = Item.Material;
&#9;&#9;&#9;&#9;&#9;&#9;transparency = Item.Transparency;
&#9;&#9;&#9;&#9;&#9;&#9;reflectance = Item.Reflectance;

&#9;&#9;&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;if material_type ~= Item.Material then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;material_type = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;&#9;if reflectance ~= Item.Reflectance then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;reflectance = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;&#9;if transparency ~= Item.Transparency then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;transparency = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self.State.material = material_type;
&#9;&#9;&#9;&#9;self.State.transparency = transparency;
&#9;&#9;&#9;&#9;self.State.reflectance = reflectance;

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Material.Listeners.Unequipped = function ()

&#9;local self = Tools.Material;

&#9;-- Stop the GUI updating loop
&#9;self.Updater();
&#9;self.Updater = nil;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Material.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_material = {};
&#9;&#9;terminal_material = {};
&#9;&#9;initial_transparency = {};
&#9;&#9;terminal_transparency = {};
&#9;&#9;initial_reflectance = {};
&#9;&#9;terminal_reflectance = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.Material = self.initial_material[Target];
&#9;&#9;&#9;&#9;&#9;Target.Transparency = self.initial_transparency[Target];
&#9;&#9;&#9;&#9;&#9;Target.Reflectance = self.initial_reflectance[Target];
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.Material = self.terminal_material[Target];
&#9;&#9;&#9;&#9;&#9;Target.Transparency = self.terminal_transparency[Target];
&#9;&#9;&#9;&#9;&#9;Target.Reflectance = self.terminal_reflectance[Target];
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_material[Item] = Item.Material;
&#9;&#9;&#9;self.State.HistoryRecord.initial_transparency[Item] = Item.Transparency;
&#9;&#9;&#9;self.State.HistoryRecord.initial_reflectance[Item] = Item.Reflectance;
&#9;&#9;end;
&#9;end;

end;

Tools.Material.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_material[Item] = Item.Material;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_transparency[Item] = Item.Transparency;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_reflectance[Item] = Item.Reflectance;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Material.changeMaterial = function ( self, material_type )

&#9;self:startHistoryRecord();

&#9;-- Apply `material_type` to all items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.Material = material_type;
&#9;end;

&#9;self:finishHistoryRecord();

&#9;if self.MaterialDropdown.open then
&#9;&#9;self.MaterialDropdown:toggle();
&#9;end;
end;

Tools.Material.changeTransparency = function ( self, transparency )

&#9;self:startHistoryRecord();

&#9;-- Apply `transparency` to all items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.Transparency = transparency;
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Material.changeReflectance = function ( self, reflectance )

&#9;self:startHistoryRecord();

&#9;-- Apply `reflectance` to all items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.Reflectance = reflectance;
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Material.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;if #Selection.Items &gt; 0 then
&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 145 );
&#9;&#9;self.GUI.MaterialOption.Visible = true;
&#9;&#9;self.GUI.ReflectanceOption.Visible = true;
&#9;&#9;self.GUI.TransparencyOption.Visible = true;
&#9;&#9;self.GUI.SelectNote.Visible = false;
&#9;&#9;self.MaterialDropdown:selectOption( self.State.material and ( self.SpecialMaterialNames[self.State.material.Name] or self.State.material.Name:upper() ) or &quot;*&quot; );

&#9;&#9;-- Update the text inputs without interrupting the user
&#9;&#9;if not self.State.transparency_focused then
&#9;&#9;&#9;self.GUI.TransparencyOption.TransparencyInput.TextBox.Text = self.State.transparency and tostring( _round( self.State.transparency, 2 ) ) or &quot;*&quot;;
&#9;&#9;end;
&#9;&#9;if not self.State.reflectance_focused then
&#9;&#9;&#9;self.GUI.ReflectanceOption.ReflectanceInput.TextBox.Text = self.State.reflectance and tostring( _round( self.State.reflectance, 2 ) ) or &quot;*&quot;;
&#9;&#9;end;

&#9;else
&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 62 );
&#9;&#9;self.GUI.MaterialOption.Visible = false;
&#9;&#9;self.GUI.ReflectanceOption.Visible = false;
&#9;&#9;self.GUI.TransparencyOption.Visible = false;
&#9;&#9;self.GUI.SelectNote.Visible = true;
&#9;&#9;self.MaterialDropdown:selectOption( &quot;&quot; );
&#9;&#9;self.GUI.TransparencyOption.TransparencyInput.TextBox.Text = &quot;&quot;;
&#9;&#9;self.GUI.ReflectanceOption.ReflectanceInput.TextBox.Text = &quot;&quot;;
&#9;end;

end;


Tools.Material.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTMaterialToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;local MaterialDropdown = createDropdown();
&#9;&#9;self.MaterialDropdown = MaterialDropdown;
&#9;&#9;MaterialDropdown.Frame.Parent = Container.MaterialOption;
&#9;&#9;MaterialDropdown.Frame.Position = UDim2.new( 0, 50, 0, 0 );
&#9;&#9;MaterialDropdown.Frame.Size = UDim2.new( 0, 130, 0, 25 );

&#9;&#9;MaterialDropdown:addOption( &quot;SMOOTH PLASTIC&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.SmoothPlastic );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;PLASTIC&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Plastic );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;CONCRETE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Concrete );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;DIAMOND PLATE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.DiamondPlate );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;CORRODED METAL&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.CorrodedMetal );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;BRICK&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Brick );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;FABRIC&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Fabric );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;FOIL&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Foil );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;GRANITE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Granite );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;GRASS&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Grass );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;ICE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Ice );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;MARBLE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Marble );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;PEBBLE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Pebble );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;SAND&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Sand );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;SLATE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Slate );
&#9;&#9;end );
&#9;&#9;MaterialDropdown:addOption( &quot;WOOD&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeMaterial( Enum.Material.Wood );
&#9;&#9;end );

&#9;&#9;-- Capture focus of the input when clicked
&#9;&#9;-- (so we can detect when it is focused-on)
&#9;&#9;Container.TransparencyOption.TransparencyInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.transparency_focused = true;
&#9;&#9;&#9;Container.TransparencyOption.TransparencyInput.TextBox:CaptureFocus();
&#9;&#9;end );

&#9;&#9;-- Change the transparency when the value of the textbox is updated
&#9;&#9;Container.TransparencyOption.TransparencyInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.TransparencyOption.TransparencyInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 1 then
&#9;&#9;&#9;&#9;&#9;potential_new = 1;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeTransparency( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.transparency_focused = false;
&#9;&#9;end );

&#9;&#9;-- Capture focus of the input when clicked
&#9;&#9;-- (so we can detect when it is focused-on)
&#9;&#9;Container.ReflectanceOption.ReflectanceInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.reflectance_focused = true;
&#9;&#9;&#9;Container.ReflectanceOption.ReflectanceInput.TextBox:CaptureFocus();
&#9;&#9;end );

&#9;&#9;-- Change the reflectance when the value of the textbox is updated
&#9;&#9;Container.ReflectanceOption.ReflectanceInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.ReflectanceOption.ReflectanceInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 1 then
&#9;&#9;&#9;&#9;&#9;potential_new = 1;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeReflectance( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.reflectance_focused = false;
&#9;&#9;end );

&#9;&#9;self.GUI = Container;

&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Material.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Material.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX8">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTAnchorTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Anchor tool
------------------------------------------

-- Create the tool
Tools.Anchor = {};

-- Create structures to hold data that the tool needs
Tools.Anchor.Connections = {};

Tools.Anchor.State = {
&#9;[&quot;anchored&quot;] = nil;
};

Tools.Anchor.Listeners = {};

-- Define the color of the tool
Tools.Anchor.Color = BrickColor.new( &quot;Really black&quot; );

-- Start adding functionality to the tool
Tools.Anchor.Listeners.Equipped = function ()

&#9;local self = Tools.Anchor;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;local updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the anchor status of every item in the selection
&#9;&#9;&#9;&#9;local anchor_status = nil;
&#9;&#9;&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;anchor_status = Item.Anchored;

&#9;&#9;&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;if anchor_status ~= Item.Anchored then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;anchor_status = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self.State.anchored = anchor_status;

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

&#9;-- Listen for the Enter button to be pressed to toggle the anchor
&#9;self.Connections.EnterButtonListener = Mouse.KeyDown:connect( function ( key )

&#9;&#9;local key = key:lower();
&#9;&#9;local key_code = key:byte();

&#9;&#9;-- If the Enter button is pressed
&#9;&#9;if key_code == 13 then

&#9;&#9;&#9;if self.State.anchored == true then
&#9;&#9;&#9;&#9;self:unanchor();

&#9;&#9;&#9;elseif self.State.anchored == false then
&#9;&#9;&#9;&#9;self:anchor();

&#9;&#9;&#9;elseif self.State.anchored == nil then
&#9;&#9;&#9;&#9;self:anchor();

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end );

end;


Tools.Anchor.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_positions = {};
&#9;&#9;terminal_positions = {};
&#9;&#9;initial_anchors = {};
&#9;&#9;terminal_anchors = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.RotVelocity = Vector3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;&#9;Target.Velocity = Vector3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.initial_positions[Target];
&#9;&#9;&#9;&#9;&#9;Target.Anchored = self.initial_anchors[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.RotVelocity = Vector3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;&#9;Target.Velocity = Vector3.new( 0, 0, 0 );
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.terminal_positions[Target];
&#9;&#9;&#9;&#9;&#9;Target.Anchored = self.terminal_anchors[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_anchors[Item] = Item.Anchored;
&#9;&#9;&#9;self.State.HistoryRecord.initial_positions[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;

end;

Tools.Anchor.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_anchors[Item] = Item.Anchored;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_positions[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Anchor.anchor = function ( self )

&#9;self:startHistoryRecord();

&#9;-- Anchor all the items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.Anchored = true;
&#9;&#9;Item:MakeJoints();
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Anchor.unanchor = function ( self )

&#9;self:startHistoryRecord();

&#9;-- Unanchor all the items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.Anchored = false;
&#9;&#9;Item.Velocity = Vector3.new( 0, 0, 0 );
&#9;&#9;Item.RotVelocity = Vector3.new( 0, 0, 0 );
&#9;&#9;Item:MakeJoints();
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Anchor.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTAnchorToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;-- Change the anchor status when the button is clicked
&#9;&#9;Container.Status.Anchored.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:anchor();
&#9;&#9;end );

&#9;&#9;Container.Status.Unanchored.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:unanchor();
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Anchor.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;local GUI = self.GUI;

&#9;if self.State.anchored == nil then
&#9;&#9;GUI.Status.Anchored.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.Anchored.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;GUI.Status.Unanchored.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.Unanchored.SelectedIndicator.BackgroundTransparency = 1;

&#9;elseif self.State.anchored == true then
&#9;&#9;GUI.Status.Anchored.Background.Image = dark_slanted_rectangle;
&#9;&#9;GUI.Status.Anchored.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;GUI.Status.Unanchored.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.Unanchored.SelectedIndicator.BackgroundTransparency = 1;

&#9;elseif self.State.anchored == false then
&#9;&#9;GUI.Status.Anchored.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.Anchored.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;GUI.Status.Unanchored.Background.Image = dark_slanted_rectangle;
&#9;&#9;GUI.Status.Unanchored.SelectedIndicator.BackgroundTransparency = 0;

&#9;end;

end;

Tools.Anchor.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Anchor.Listeners.Unequipped = function ()

&#9;local self = Tools.Anchor;

&#9;-- Stop the update loop
&#9;self.Updater();
&#9;self.Updater = nil;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Clear out any temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of the selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Anchor.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX9">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTCollisionTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Collision tool
------------------------------------------

-- Create the tool
Tools.Collision = {};

-- Create structures to hold data that the tool needs
Tools.Collision.Connections = {};

Tools.Collision.State = {
&#9;[&quot;colliding&quot;] = nil;
};

Tools.Collision.Listeners = {};

-- Define the color of the tool
Tools.Collision.Color = BrickColor.new( &quot;Really black&quot; );

-- Start adding functionality to the tool
Tools.Collision.Listeners.Equipped = function ()

&#9;local self = Tools.Collision;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;local updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.Updater = function ()
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the collision status of every item in the selection
&#9;&#9;&#9;&#9;local colliding = nil;
&#9;&#9;&#9;&#9;for item_index, Item in pairs( Selection.Items ) do

&#9;&#9;&#9;&#9;&#9;-- Set the first values for the first item
&#9;&#9;&#9;&#9;&#9;if item_index == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;colliding = Item.CanCollide;

&#9;&#9;&#9;&#9;&#9;-- Otherwise, compare them and set them to `nil` if they&apos;re not identical
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;if colliding ~= Item.CanCollide then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;colliding = nil;
&#9;&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;self.State.colliding = colliding;

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

&#9;-- Listen for the Enter button to be pressed to toggle collision
&#9;self.Connections.EnterButtonListener = Mouse.KeyDown:connect( function ( key )

&#9;&#9;local key = key:lower();
&#9;&#9;local key_code = key:byte();

&#9;&#9;-- If the Enter button is pressed
&#9;&#9;if key_code == 13 then

&#9;&#9;&#9;if self.State.colliding == true then
&#9;&#9;&#9;&#9;self:disable();

&#9;&#9;&#9;elseif self.State.colliding == false then
&#9;&#9;&#9;&#9;self:enable();

&#9;&#9;&#9;elseif self.State.colliding == nil then
&#9;&#9;&#9;&#9;self:enable();

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end );

end;

Tools.Collision.startHistoryRecord = function ( self )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( Selection.Items );
&#9;&#9;initial_collide = {};
&#9;&#9;terminal_collide = {};
&#9;&#9;initial_cframe = {};
&#9;&#9;terminal_cframe = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.CanCollide = self.initial_collide[Target];
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.initial_cframe[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Target.CanCollide = self.terminal_collide[Target];
&#9;&#9;&#9;&#9;&#9;Target.CFrame = self.terminal_cframe[Target];
&#9;&#9;&#9;&#9;&#9;Target:MakeJoints();
&#9;&#9;&#9;&#9;&#9;Selection:add( Target );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_collide[Item] = Item.CanCollide;
&#9;&#9;&#9;self.State.HistoryRecord.initial_cframe[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;

end;

Tools.Collision.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_collide[Item] = Item.CanCollide;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_cframe[Item] = Item.CFrame;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Collision.enable = function ( self )

&#9;self:startHistoryRecord();

&#9;-- Enable collision for all the items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.CanCollide = true;
&#9;&#9;Item:MakeJoints();
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Collision.disable = function ( self )

&#9;self:startHistoryRecord();

&#9;-- Disable collision for all the items in the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;Item.CanCollide = false;
&#9;&#9;Item:MakeJoints();
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Collision.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTCollisionToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;Container.Status.On.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:enable();
&#9;&#9;end );

&#9;&#9;Container.Status.Off.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:disable();
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Collision.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;local GUI = self.GUI;

&#9;if self.State.colliding == nil then
&#9;&#9;GUI.Status.On.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.On.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;GUI.Status.Off.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.Off.SelectedIndicator.BackgroundTransparency = 1;

&#9;elseif self.State.colliding == true then
&#9;&#9;GUI.Status.On.Background.Image = dark_slanted_rectangle;
&#9;&#9;GUI.Status.On.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;GUI.Status.Off.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.Off.SelectedIndicator.BackgroundTransparency = 1;

&#9;elseif self.State.colliding == false then
&#9;&#9;GUI.Status.On.Background.Image = light_slanted_rectangle;
&#9;&#9;GUI.Status.On.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;GUI.Status.Off.Background.Image = dark_slanted_rectangle;
&#9;&#9;GUI.Status.Off.SelectedIndicator.BackgroundTransparency = 0;

&#9;end;

end;

Tools.Collision.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Collision.Listeners.Unequipped = function ()

&#9;local self = Tools.Collision;

&#9;-- Stop the update loop
&#9;self.Updater();
&#9;self.Updater = nil;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Clear out any temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of the selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Collision.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX10">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTNewPartTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- New part tool
------------------------------------------

-- Create the tool
Tools.NewPart = {};

-- Define the tool&apos;s color
Tools.NewPart.Color = BrickColor.new( &quot;Really black&quot; );

-- Keep a container for temporary connections
Tools.NewPart.Connections = {};

-- Keep a container for state data
Tools.NewPart.State = {
&#9;[&quot;Part&quot;] = nil;
};

-- Maintain a container for options
Tools.NewPart.Options = {
&#9;[&quot;type&quot;] = &quot;normal&quot;
};

-- Keep a container for platform event connections
Tools.NewPart.Listeners = {};

-- Start adding functionality to the tool
Tools.NewPart.Listeners.Equipped = function ()

&#9;local self = Tools.NewPart;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Restore the type option
&#9;self:changeType( self.Options.type );

end;

Tools.NewPart.Listeners.Unequipped = function ()

&#9;local self = Tools.NewPart;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.NewPart.Listeners.Button1Down = function ()

&#9;local self = Tools.NewPart;

&#9;local NewPart;

&#9;-- Create the new part of type `self.Options.type`
&#9;if self.Options.type == &quot;normal&quot; then
&#9;&#9;NewPart = Instance.new( &quot;Part&quot;, Services.Workspace );
&#9;elseif self.Options.type == &quot;truss&quot; then
&#9;&#9;NewPart = Instance.new( &quot;TrussPart&quot;, Services.Workspace );
&#9;elseif self.Options.type == &quot;wedge&quot; then
&#9;&#9;NewPart = Instance.new( &quot;WedgePart&quot;, Services.Workspace );
&#9;elseif self.Options.type == &quot;corner&quot; then
&#9;&#9;NewPart = Instance.new( &quot;CornerWedgePart&quot;, Services.Workspace );
&#9;elseif self.Options.type == &quot;cylinder&quot; then
&#9;&#9;NewPart = Instance.new( &quot;Part&quot;, Services.Workspace );
&#9;&#9;NewPart.Shape = &quot;Cylinder&quot;;
&#9;elseif self.Options.type == &quot;ball&quot; then
&#9;&#9;NewPart = Instance.new( &quot;Part&quot;, Services.Workspace );
&#9;&#9;NewPart.Shape = &quot;Ball&quot;;
&#9;elseif self.Options.type == &quot;seat&quot; then
&#9;&#9;NewPart = Instance.new( &quot;Seat&quot;, Services.Workspace );
&#9;elseif self.Options.type == &quot;vehicle seat&quot; then
&#9;&#9;NewPart = Instance.new( &quot;VehicleSeat&quot;, Services.Workspace );
&#9;elseif self.Options.type == &quot;spawn&quot; then
&#9;&#9;NewPart = Instance.new( &quot;SpawnLocation&quot;, Services.Workspace );
&#9;end;
&#9;NewPart.Anchored = true;

&#9;-- Select the new part
&#9;Selection:clear();
&#9;Selection:add( NewPart );

&#9;local HistoryRecord = {
&#9;&#9;target = NewPart;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;if self.target then
&#9;&#9;&#9;&#9;self.target.Parent = Services.Workspace;
&#9;&#9;&#9;&#9;Selection:add( self.target );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;if self.target then
&#9;&#9;&#9;&#9;self.target.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;History:add( HistoryRecord );

&#9;-- Switch to the move tool and simulate clicking so
&#9;-- that the user could easily position their new part
&#9;equipTool( Tools.Move );
&#9;Tools.Move.ManualTarget = NewPart;
&#9;NewPart.CFrame = CFrame.new( Mouse.Hit.p );
&#9;Tools.Move.Listeners.Button1Down();
&#9;Tools.Move.Listeners.Move();

end;

Tools.NewPart.changeType = function ( self, new_type )
&#9;self.Options.type = new_type;
&#9;self.TypeDropdown:selectOption( new_type:upper() );
&#9;if self.TypeDropdown.open then
&#9;&#9;self.TypeDropdown:toggle();
&#9;end;
end;

Tools.NewPart.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTNewPartToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;local TypeDropdown = createDropdown();
&#9;&#9;self.TypeDropdown = TypeDropdown;
&#9;&#9;TypeDropdown.Frame.Parent = Container.TypeOption;
&#9;&#9;TypeDropdown.Frame.Position = UDim2.new( 0, 70, 0, 0 );
&#9;&#9;TypeDropdown.Frame.Size = UDim2.new( 0, 140, 0, 25 );

&#9;&#9;TypeDropdown:addOption( &quot;NORMAL&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;normal&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;TRUSS&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;truss&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;WEDGE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;wedge&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;CORNER&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;corner&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;CYLINDER&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;cylinder&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;BALL&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;ball&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;SEAT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;seat&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;VEHICLE SEAT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;vehicle seat&quot; );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;SPAWN&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( &quot;spawn&quot; );
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.NewPart.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.NewPart.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX11">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTMeshTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Mesh tool
------------------------------------------

-- Create the tool
Tools.Mesh = {};

-- Define the tool&apos;s color
Tools.Mesh.Color = BrickColor.new( &quot;Bright violet&quot; );

-- Keep a container for state data
Tools.Mesh.State = {};

-- Keep a container for temporary connections
Tools.Mesh.Connections = {};

-- Keep a container for platform event connections
Tools.Mesh.Listeners = {};

-- Start adding functionality to the tool
Tools.Mesh.Listeners.Equipped = function ()

&#9;local self = Tools.Mesh;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;local updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.stopGUIUpdater = function ( self )
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Mesh.Listeners.Unequipped = function ()

&#9;local self = Tools.Mesh;

&#9;-- Stop the GUI updater
&#9;self:stopGUIUpdater();

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Mesh.TypeDropdownLabels = {
&#9;[Enum.MeshType.Brick] = &quot;BLOCK&quot;;
&#9;[Enum.MeshType.Cylinder] = &quot;CYLINDER&quot;;
&#9;[Enum.MeshType.FileMesh] = &quot;FILE&quot;;
&#9;[Enum.MeshType.Head] = &quot;HEAD&quot;;
&#9;[Enum.MeshType.Sphere] = &quot;SPHERE&quot;;
&#9;[Enum.MeshType.Torso] = &quot;TRAPEZOID&quot;;
&#9;[Enum.MeshType.Wedge] = &quot;WEDGE&quot;;
};

Tools.Mesh.changeType = function ( self, new_type )

&#9;self:startHistoryRecord();

&#9;-- Apply type `new_type` to all the meshes in items from the selection
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;if Mesh then
&#9;&#9;&#9;Mesh.MeshType = new_type;
&#9;&#9;end;
&#9;end;

&#9;if self.TypeDropdown.open then
&#9;&#9;self.TypeDropdown:toggle();
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Mesh.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;local GUI = self.GUI;

&#9;if #Selection.Items &gt; 0 then

&#9;&#9;local meshes = {};
&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;&#9;if Mesh then
&#9;&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;local show_add, show_remove, show_mesh_id;
&#9;&#9;local mesh_type, mesh_scale_x, mesh_scale_y, mesh_scale_z, mesh_id, mesh_texture, mesh_tint_r, mesh_tint_g, mesh_tint_b;

&#9;&#9;-- If every item has a mesh
&#9;&#9;if #meshes == #Selection.Items then
&#9;&#9;&#9;show_add = false;
&#9;&#9;&#9;show_remove = true;

&#9;&#9;-- If no item has a mesh
&#9;&#9;elseif #meshes == 0 then
&#9;&#9;&#9;show_add = true;
&#9;&#9;&#9;show_remove = false;

&#9;&#9;-- If some items have a mesh
&#9;&#9;else
&#9;&#9;&#9;show_add = true;
&#9;&#9;&#9;show_remove = true;
&#9;&#9;end;

&#9;&#9;-- If there are meshes
&#9;&#9;if #meshes &gt; 0 then
&#9;&#9;&#9;show_type = true;
&#9;&#9;&#9;for mesh_index, Mesh in pairs( meshes ) do

&#9;&#9;&#9;&#9;-- Set the start values for later comparison
&#9;&#9;&#9;&#9;if mesh_index == 1 then
&#9;&#9;&#9;&#9;&#9;mesh_type = Mesh.MeshType;
&#9;&#9;&#9;&#9;&#9;mesh_scale_x, mesh_scale_y, mesh_scale_z = Mesh.Scale.x, Mesh.Scale.y, Mesh.Scale.z;
&#9;&#9;&#9;&#9;&#9;mesh_id = Mesh.MeshId:lower();
&#9;&#9;&#9;&#9;&#9;mesh_texture = Mesh.TextureId:lower();
&#9;&#9;&#9;&#9;&#9;mesh_tint_r, mesh_tint_g, mesh_tint_b = Mesh.VertexColor.x, Mesh.VertexColor.y, Mesh.VertexColor.z;

&#9;&#9;&#9;&#9;-- Set the values to `nil` if they vary across the selection
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;if mesh_type ~= Mesh.MeshType then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_type = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_scale_x ~= Mesh.Scale.x then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_scale_x = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_scale_y ~= Mesh.Scale.y then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_scale_y = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_scale_z ~= Mesh.Scale.z then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_scale_z = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_id ~= Mesh.MeshId:lower() then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_id = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_texture ~= Mesh.TextureId:lower() then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_texture = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_tint_r ~= Mesh.VertexColor.x then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_tint_r = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_tint_g ~= Mesh.VertexColor.y then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_tint_g = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if mesh_tint_b ~= Mesh.VertexColor.z then
&#9;&#9;&#9;&#9;&#9;&#9;mesh_tint_b = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;&#9;-- If there&apos;s a FileMesh around here, note that
&#9;&#9;&#9;&#9;if Mesh.MeshType == Enum.MeshType.FileMesh then
&#9;&#9;&#9;&#9;&#9;show_mesh_id = true;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;&#9;if show_mesh_id and show_add and show_remove then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TintOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Position = UDim2.new( 0, 14, 0, 65 );
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Position = UDim2.new( 0, 0, 0, 100 );
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.Position = UDim2.new( 0, 14, 0, 135 );
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.Position = UDim2.new( 0, 14, 0, 165 );
&#9;&#9;&#9;&#9;self.GUI.TintOption.Position = UDim2.new( 0, 0, 0, 200 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 265 );
&#9;&#9;&#9;elseif show_mesh_id and not show_add and show_remove then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TintOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Position = UDim2.new( 0, 14, 0, 30 );
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Position = UDim2.new( 0, 0, 0, 65 );
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.Position = UDim2.new( 0, 14, 0, 100 );
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.Position = UDim2.new( 0, 14, 0, 130 );
&#9;&#9;&#9;&#9;self.GUI.TintOption.Position = UDim2.new( 0, 0, 0, 165 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 230 );

&#9;&#9;&#9;elseif not show_mesh_id and show_add and show_remove then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TintOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Position = UDim2.new( 0, 14, 0, 65 );
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Position = UDim2.new( 0, 0, 0, 100 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 165 );
&#9;&#9;&#9;elseif not show_mesh_id and not show_add and show_remove then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TintOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TypeOption.Position = UDim2.new( 0, 14, 0, 30 );
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.Position = UDim2.new( 0, 0, 0, 65 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 130 );
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Update the values shown on the GUI
&#9;&#9;&#9;if not self.State.mesh_id_focused then
&#9;&#9;&#9;&#9;self.GUI.MeshIDOption.TextBox.Text = mesh_id and ( mesh_id:match( &quot;%?id=([0-9]+)&quot; ) or &quot;&quot; ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.texture_id_focused then
&#9;&#9;&#9;&#9;self.GUI.TextureIDOption.TextBox.Text = mesh_texture and ( mesh_texture:match( &quot;%?id=([0-9]+)&quot; ) or &quot;&quot; ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.TypeDropdown:selectOption( mesh_type and self.TypeDropdownLabels[mesh_type] or &quot;*&quot; );
&#9;&#9;&#9;if not self.State.scale_x_focused then
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.XInput.TextBox.Text = mesh_scale_x and _round( mesh_scale_x, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.scale_y_focused then
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.YInput.TextBox.Text = mesh_scale_y and _round( mesh_scale_y, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.scale_z_focused then
&#9;&#9;&#9;&#9;self.GUI.ScaleOption.ZInput.TextBox.Text = mesh_scale_z and _round( mesh_scale_z, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.tint_r_focused then
&#9;&#9;&#9;&#9;self.GUI.TintOption.RInput.TextBox.Text = mesh_tint_r and _round( mesh_tint_r * 255, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.tint_g_focused then
&#9;&#9;&#9;&#9;self.GUI.TintOption.GInput.TextBox.Text = mesh_tint_g and _round( mesh_tint_g * 255, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.tint_b_focused then
&#9;&#9;&#9;&#9;self.GUI.TintOption.BInput.TextBox.Text = mesh_tint_b and _round( mesh_tint_b * 255, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;

&#9;&#9;-- If there are no meshes
&#9;&#9;else
&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.RemoveButton.Visible = false;
&#9;&#9;&#9;self.GUI.MeshIDOption.Visible = false;
&#9;&#9;&#9;self.GUI.TextureIDOption.Visible = false;
&#9;&#9;&#9;self.GUI.ScaleOption.Visible = false;
&#9;&#9;&#9;self.GUI.TintOption.Visible = false;
&#9;&#9;&#9;self.GUI.TypeOption.Visible = false;
&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 62 );
&#9;&#9;end;
&#9;&#9;self.GUI.SelectNote.Visible = false;

&#9;-- Show a note that says to select something
&#9;else
&#9;&#9;self.GUI.AddButton.Visible = false;
&#9;&#9;self.GUI.RemoveButton.Visible = false;
&#9;&#9;self.GUI.MeshIDOption.Visible = false;
&#9;&#9;self.GUI.TextureIDOption.Visible = false;
&#9;&#9;self.GUI.ScaleOption.Visible = false;
&#9;&#9;self.GUI.TintOption.Visible = false;
&#9;&#9;self.GUI.TypeOption.Visible = false;
&#9;&#9;self.GUI.SelectNote.Visible = true;
&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 55 );
&#9;end;

end;

Tools.Mesh.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then
&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTMeshToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;-- Add functionality to the add/remove buttons
&#9;&#9;Container.AddButton.Button.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:addMesh();
&#9;&#9;end );
&#9;&#9;Container.RemoveButton.Button.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:removeMesh();
&#9;&#9;end );

&#9;&#9;-- Add the type dropdown
&#9;&#9;local TypeDropdown = createDropdown();
&#9;&#9;self.TypeDropdown = TypeDropdown;
&#9;&#9;TypeDropdown.Frame.Parent = Container.TypeOption;
&#9;&#9;TypeDropdown.Frame.Position = UDim2.new( 0, 40, 0, 0 );
&#9;&#9;TypeDropdown.Frame.Size = UDim2.new( 1, -40, 0, 25 );
&#9;&#9;TypeDropdown:addOption( &quot;BLOCK&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.Brick );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;CYLINDER&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.Cylinder );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;FILE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.FileMesh );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;HEAD&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.Head );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;SPHERE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.Sphere );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;TRAPEZOID&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.Torso );
&#9;&#9;end );
&#9;&#9;TypeDropdown:addOption( &quot;WEDGE&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeType( Enum.MeshType.Wedge );
&#9;&#9;end );

&#9;&#9;-- Add functionality to the scale inputs
&#9;&#9;Container.ScaleOption.XInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.scale_x_focused = true;
&#9;&#9;&#9;Container.ScaleOption.XInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.ScaleOption.XInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.ScaleOption.XInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeScale( &apos;x&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.scale_x_focused = false;
&#9;&#9;end );

&#9;&#9;Container.ScaleOption.YInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.scale_y_focused = true;
&#9;&#9;&#9;Container.ScaleOption.YInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.ScaleOption.YInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.ScaleOption.YInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeScale( &apos;y&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.scale_y_focused = false;
&#9;&#9;end );

&#9;&#9;Container.ScaleOption.ZInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.scale_z_focused = true;
&#9;&#9;&#9;Container.ScaleOption.ZInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.ScaleOption.ZInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.ScaleOption.ZInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeScale( &apos;z&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.scale_z_focused = false;
&#9;&#9;end );

&#9;&#9;-- Add functionality to the mesh/texture ID inputs
&#9;&#9;Container.MeshIDOption.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.mesh_id_focused = true;
&#9;&#9;&#9;Container.MeshIDOption.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.MeshIDOption.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local input = Container.MeshIDOption.TextBox.Text;
&#9;&#9;&#9;local potential_new = tonumber( input ) or input:lower():match( &quot;%?id=([0-9]+)&quot; );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeMesh( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.mesh_id_focused = false;
&#9;&#9;end );

&#9;&#9;Container.TextureIDOption.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.texture_id_focused = true;
&#9;&#9;&#9;Container.TextureIDOption.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.TextureIDOption.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local input = Container.TextureIDOption.TextBox.Text;
&#9;&#9;&#9;local potential_new = tonumber( input ) or input:lower():match( &quot;%?id=([0-9]+)&quot; );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeTexture( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.texture_id_focused = false;
&#9;&#9;end );

&#9;&#9;-- Add functionality to the tint inputs
&#9;&#9;Container.TintOption.RInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.tint_r_focused = true;
&#9;&#9;&#9;Container.TintOption.RInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.TintOption.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.TintOption.RInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeTint( &apos;r&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.tint_r_focused = false;
&#9;&#9;end );

&#9;&#9;Container.TintOption.GInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.tint_g_focused = true;
&#9;&#9;&#9;Container.TintOption.GInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.TintOption.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.TintOption.GInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeTint( &apos;g&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.tint_g_focused = false;
&#9;&#9;end );

&#9;&#9;Container.TintOption.BInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.tint_b_focused = true;
&#9;&#9;&#9;Container.TintOption.BInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.TintOption.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.TintOption.BInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeTint( &apos;b&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.tint_b_focused = false;
&#9;&#9;end );


&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Mesh.addMesh = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Mesh in pairs( self.meshes ) do
&#9;&#9;&#9;&#9;Mesh.Parent = self.mesh_parents[Mesh];
&#9;&#9;&#9;&#9;Selection:add( Mesh.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Mesh in pairs( self.meshes ) do
&#9;&#9;&#9;&#9;Selection:add( Mesh.Parent );
&#9;&#9;&#9;&#9;Mesh.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Add meshes to all the items from the selection that
&#9;-- don&apos;t already have one
&#9;local meshes = {};
&#9;local mesh_parents = {};
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;if not Mesh then
&#9;&#9;&#9;local Mesh = RbxUtility.Create &quot;SpecialMesh&quot; {
&#9;&#9;&#9;&#9;Parent = Item;
&#9;&#9;&#9;&#9;MeshType = Enum.MeshType.Brick;
&#9;&#9;&#9;};
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;&#9;mesh_parents[Mesh] = Item;
&#9;&#9;end;
&#9;end;

&#9;HistoryRecord.meshes = meshes;
&#9;HistoryRecord.mesh_parents = mesh_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Mesh.removeMesh = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Mesh in pairs( self.meshes ) do
&#9;&#9;&#9;&#9;Selection:add( Mesh.Parent );
&#9;&#9;&#9;&#9;Mesh.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Mesh in pairs( self.meshes ) do
&#9;&#9;&#9;&#9;Mesh.Parent = self.mesh_parents[Mesh];
&#9;&#9;&#9;&#9;Selection:add( Mesh.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;local meshes = {};
&#9;local mesh_parents = {};
&#9;-- Remove meshes from all the selected items
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local meshes_found = _getChildrenOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;for _, Mesh in pairs( meshes_found ) do
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;&#9;mesh_parents[Mesh] = Mesh.Parent;
&#9;&#9;&#9;Mesh.Parent = nil;
&#9;&#9;end;
&#9;end;

&#9;HistoryRecord.meshes = meshes;
&#9;HistoryRecord.mesh_parents = mesh_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Mesh.startHistoryRecord = function ( self, meshes )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( meshes );
&#9;&#9;initial_mesh = {};
&#9;&#9;terminal_mesh = {};
&#9;&#9;initial_texture = {};
&#9;&#9;terminal_texture = {};
&#9;&#9;initial_scale = {};
&#9;&#9;terminal_scale = {};
&#9;&#9;initial_tint = {};
&#9;&#9;terminal_tint = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;Target.MeshId = self.initial_mesh[Target];
&#9;&#9;&#9;&#9;&#9;Target.TextureId = self.initial_texture[Target];
&#9;&#9;&#9;&#9;&#9;Target.Scale = self.initial_scale[Target];
&#9;&#9;&#9;&#9;&#9;Target.VertexColor = self.initial_tint[Target];
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;Target.MeshId = self.terminal_mesh[Target];
&#9;&#9;&#9;&#9;&#9;Target.TextureId = self.terminal_texture[Target];
&#9;&#9;&#9;&#9;&#9;Target.Scale = self.terminal_scale[Target];
&#9;&#9;&#9;&#9;&#9;Target.VertexColor = self.terminal_tint[Target];
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_mesh[Item] = Item.MeshId;
&#9;&#9;&#9;self.State.HistoryRecord.initial_texture[Item] = Item.TextureId;
&#9;&#9;&#9;self.State.HistoryRecord.initial_scale[Item] = Item.Scale;
&#9;&#9;&#9;self.State.HistoryRecord.initial_tint[Item] = Item.VertexColor;
&#9;&#9;end;
&#9;end;

end;

Tools.Mesh.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_mesh[Item] = Item.MeshId;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_texture[Item] = Item.TextureId;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_scale[Item] = Item.Scale;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_tint[Item] = Item.VertexColor;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Mesh.changeMesh = function ( self, mesh_id )

&#9;local meshes = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;if Mesh then
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;end;
&#9;end;
&#9;self:startHistoryRecord( meshes );
&#9;for _, Mesh in pairs( meshes ) do
&#9;&#9;Mesh.MeshId = &quot;http://www.roblox.com/asset/?id=&quot; .. mesh_id;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Mesh.changeTexture = function ( self, texture_id )

&#9;local meshes = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;if Mesh then
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;end;
&#9;end;
&#9;self:startHistoryRecord( meshes );
&#9;for _, Mesh in pairs( meshes ) do
&#9;&#9;Mesh.TextureId = &quot;http://www.roblox.com/asset/?id=&quot; .. texture_id;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Mesh.changeScale = function ( self, component, new_value )

&#9;local meshes = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;if Mesh then
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;end;
&#9;end;

&#9;self:startHistoryRecord( meshes );
&#9;for _, Mesh in pairs( meshes ) do
&#9;&#9;Mesh.Scale = Vector3.new(
&#9;&#9;&#9;component == &apos;x&apos; and new_value or Mesh.Scale.x,
&#9;&#9;&#9;component == &apos;y&apos; and new_value or Mesh.Scale.y,
&#9;&#9;&#9;component == &apos;z&apos; and new_value or Mesh.Scale.z
&#9;&#9;);
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Mesh.changeTint = function ( self, component, new_value )

&#9;local meshes = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Mesh = _getChildOfClass( Item, &quot;SpecialMesh&quot; );
&#9;&#9;if Mesh then
&#9;&#9;&#9;table.insert( meshes, Mesh );
&#9;&#9;end;
&#9;end;

&#9;self:startHistoryRecord();
&#9;for _, Mesh in pairs( meshes ) do
&#9;&#9;Mesh.VertexColor = Vector3.new(
&#9;&#9;&#9;component == &apos;r&apos; and new_value or Mesh.VertexColor.x,
&#9;&#9;&#9;component == &apos;g&apos; and new_value or Mesh.VertexColor.y,
&#9;&#9;&#9;component == &apos;b&apos; and new_value or Mesh.VertexColor.z
&#9;&#9;);
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Mesh.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Mesh.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX12">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTTextureTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Texture tool
------------------------------------------

-- Create the tool
Tools.Texture = {};

-- Define the tool&apos;s color
Tools.Texture.Color = BrickColor.new( &quot;Bright violet&quot; );

-- Keep a container for state data
Tools.Texture.Options = {
&#9;side = Enum.NormalId.Front;
&#9;mode = &quot;decal&quot;;
};
Tools.Texture.State = {};

-- Keep a container for temporary connections
Tools.Texture.Connections = {};

-- Keep a container for platform event connections
Tools.Texture.Listeners = {};

-- Start adding functionality to the tool
Tools.Texture.Listeners.Equipped = function ()

&#9;local self = Tools.Texture;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Prepare the GUI
&#9;self:changeSide( self.Options.side );
&#9;self:changeMode( self.Options.mode );

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;local updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.stopGUIUpdater = function ( self )
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Texture.Listeners.Unequipped = function ()

&#9;local self = Tools.Texture;

&#9;-- Stop the GUI updater
&#9;self:stopGUIUpdater();

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Texture.Listeners.Button2Down = function ()

&#9;local self = Tools.Texture;

&#9;-- Capture the camera rotation (for later use
&#9;-- in determining whether a surface was being
&#9;-- selected or the camera was being rotated
&#9;-- with the right mouse button)
&#9;local cr_x, cr_y, cr_z = Camera.CoordinateFrame:toEulerAnglesXYZ();
&#9;self.State.PreB2DownCameraRotation = Vector3.new( cr_x, cr_y, cr_z );

end;

Tools.Texture.Listeners.Button2Up = function ()

&#9;local self = Tools.Texture;

&#9;local cr_x, cr_y, cr_z = Camera.CoordinateFrame:toEulerAnglesXYZ();
&#9;local CameraRotation = Vector3.new( cr_x, cr_y, cr_z );

&#9;-- If a surface is selected, change the side option
&#9;if Selection:find( Mouse.Target ) and self.State.PreB2DownCameraRotation == CameraRotation then
&#9;&#9;self:changeSide( Mouse.TargetSurface );
&#9;end;

end;

Tools.Texture.startHistoryRecord = function ( self, textures )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( textures );
&#9;&#9;initial_texture = {};
&#9;&#9;terminal_texture = {};
&#9;&#9;initial_transparency = {};
&#9;&#9;terminal_transparency = {};
&#9;&#9;initial_repeat = {};
&#9;&#9;terminal_repeat = {};
&#9;&#9;initial_side = {};
&#9;&#9;terminal_side = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;Target.Texture = self.initial_texture[Target];
&#9;&#9;&#9;&#9;&#9;Target.Transparency = self.initial_transparency[Target];
&#9;&#9;&#9;&#9;&#9;Target.Face = self.initial_side[Target];
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &quot;Texture&quot; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.StudsPerTileU = self.initial_repeat[Target].x;
&#9;&#9;&#9;&#9;&#9;&#9;Target.StudsPerTileV = self.initial_repeat[Target].y;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;Target.Texture = self.terminal_texture[Target];
&#9;&#9;&#9;&#9;&#9;Target.Transparency = self.terminal_transparency[Target];
&#9;&#9;&#9;&#9;&#9;Target.Face = self.terminal_side[Target];
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &quot;Texture&quot; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.StudsPerTileU = self.terminal_repeat[Target].x;
&#9;&#9;&#9;&#9;&#9;&#9;Target.StudsPerTileV = self.terminal_repeat[Target].y;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_texture[Item] = Item.Texture;
&#9;&#9;&#9;self.State.HistoryRecord.initial_transparency[Item] = Item.Transparency;
&#9;&#9;&#9;self.State.HistoryRecord.initial_side[Item] = Item.Face;
&#9;&#9;&#9;if Item:IsA( &quot;Texture&quot; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_repeat[Item] = Vector2.new( Item.StudsPerTileU, Item.StudsPerTileV );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

end;

Tools.Texture.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_texture[Item] = Item.Texture;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_transparency[Item] = Item.Transparency;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_side[Item] = Item.Face;
&#9;&#9;&#9;if Item:IsA( &quot;Texture&quot; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_repeat[Item] = Vector2.new( Item.StudsPerTileU, Item.StudsPerTileV );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Texture.changeMode = function ( self, new_mode )

&#9;-- Set the option
&#9;self.Options.mode = new_mode;

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;-- Update the GUI
&#9;if new_mode == &quot;decal&quot; then
&#9;&#9;self.GUI.ModeOption.Decal.SelectedIndicator.Transparency = 0;
&#9;&#9;self.GUI.ModeOption.Texture.SelectedIndicator.Transparency = 1;
&#9;&#9;self.GUI.ModeOption.Decal.Background.Image = dark_slanted_rectangle;
&#9;&#9;self.GUI.ModeOption.Texture.Background.Image = light_slanted_rectangle;
&#9;&#9;self.GUI.AddButton.Button.Text = &quot;ADD DECAL&quot;;
&#9;&#9;self.GUI.RemoveButton.Button.Text = &quot;REMOVE DECAL&quot;;
&#9;elseif new_mode == &quot;texture&quot; then
&#9;&#9;self.GUI.ModeOption.Decal.SelectedIndicator.Transparency = 1;
&#9;&#9;self.GUI.ModeOption.Texture.SelectedIndicator.Transparency = 0;
&#9;&#9;self.GUI.ModeOption.Decal.Background.Image = light_slanted_rectangle;
&#9;&#9;self.GUI.ModeOption.Texture.Background.Image = dark_slanted_rectangle;
&#9;&#9;self.GUI.AddButton.Button.Text = &quot;ADD TEXTURE&quot;;
&#9;&#9;self.GUI.RemoveButton.Button.Text = &quot;REMOVE TEXTURE&quot;;
&#9;end;

end;

Tools.Texture.changeSide = function ( self, new_side )

&#9;-- Set the option
&#9;self.Options.side = new_side;

&#9;-- Update the GUI
&#9;if self.SideDropdown then
&#9;&#9;self.SideDropdown:selectOption( new_side.Name:upper() );
&#9;&#9;if self.SideDropdown.open then
&#9;&#9;&#9;self.SideDropdown:toggle();
&#9;&#9;end;
&#9;end;

end;

Tools.Texture.changeTexture = function ( self, new_texture )

&#9;local textures = {};

&#9;-- Apply the new texture to any items w/ textures in the selection
&#9;-- that are on the side in the options
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local textures_found = _getChildrenOfClass( Item, &quot;Texture&quot; );
&#9;&#9;for _, Texture in pairs( textures_found ) do
&#9;&#9;&#9;if Texture.Face == self.Options.side then
&#9;&#9;&#9;&#9;table.insert( textures, Texture );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;self:startHistoryRecord( textures );
&#9;for _, Texture in pairs( textures ) do
&#9;&#9;Texture.Texture = &quot;http://www.roblox.com/asset/?id=&quot; .. new_texture;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Texture.changeDecal = function ( self, new_decal )

&#9;local decals = {};

&#9;-- Apply the new decal to any items w/ decals in the selection
&#9;-- that are on the side in the options
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local decals_found = _getChildrenOfClass( Item, &quot;Decal&quot; );
&#9;&#9;for _, Decal in pairs( decals_found ) do
&#9;&#9;&#9;if Decal.Face == self.Options.side then
&#9;&#9;&#9;&#9;table.insert( decals, Decal );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;self:startHistoryRecord( decals );
&#9;for _, Decal in pairs( decals ) do
&#9;&#9;Decal.Texture = &quot;http://www.roblox.com/asset/?id=&quot; .. new_decal;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Texture.changeTransparency = function ( self, new_transparency )

&#9;local textures = {};

&#9;-- Apply the new transparency to any items w/
&#9;-- decals/textures in the selectionthat are on
&#9;-- the side in the options
&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;if self.Options.mode == &quot;texture&quot; then
&#9;&#9;&#9;local textures_found = _getChildrenOfClass( Item, &quot;Texture&quot; );
&#9;&#9;&#9;for _, Texture in pairs( textures_found ) do
&#9;&#9;&#9;&#9;if Texture.Face == self.Options.side then
&#9;&#9;&#9;&#9;&#9;table.insert( textures, Texture );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;elseif self.Options.mode == &quot;decal&quot; then
&#9;&#9;&#9;local decals_found = _getChildrenOfClass( Item, &quot;Decal&quot; );
&#9;&#9;&#9;for _, Decal in pairs( decals_found ) do
&#9;&#9;&#9;&#9;if Decal.Face == self.Options.side then
&#9;&#9;&#9;&#9;&#9;table.insert( textures, Decal );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;end;

&#9;self:startHistoryRecord( textures );
&#9;for _, Texture in pairs( textures ) do
&#9;&#9;Texture.Transparency = new_transparency;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Texture.changeFrequency = function ( self, direction, new_frequency )

&#9;local textures = {};

&#9;-- Apply the new frequency to any items w/ textures
&#9;-- in the selection that are on the side in the options
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local textures_found = _getChildrenOfClass( Item, &quot;Texture&quot; );
&#9;&#9;for _, Texture in pairs( textures_found ) do
&#9;&#9;&#9;if Texture.Face == self.Options.side then
&#9;&#9;&#9;&#9;table.insert( textures, Texture );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;self:startHistoryRecord( textures );
&#9;for _, Texture in pairs( textures ) do
&#9;&#9;-- Apply the new frequency to the right direction
&#9;&#9;if direction == &quot;x&quot; then
&#9;&#9;&#9;Texture.StudsPerTileU = new_frequency;
&#9;&#9;elseif direction == &quot;y&quot; then
&#9;&#9;&#9;Texture.StudsPerTileV = new_frequency;
&#9;&#9;end;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Texture.addTexture = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Texture in pairs( self.textures ) do
&#9;&#9;&#9;&#9;Texture.Parent = self.texture_parents[Texture];
&#9;&#9;&#9;&#9;Selection:add( Texture.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Texture in pairs( self.textures ) do
&#9;&#9;&#9;&#9;Selection:add( Texture.Parent );
&#9;&#9;&#9;&#9;Texture.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;local textures = {};
&#9;local texture_parents = {};

&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;-- Check if the item has a texture already
&#9;&#9;local textures_found = _getChildrenOfClass( Item, &quot;Texture&quot; );
&#9;&#9;local has_texture = false;
&#9;&#9;for _, Texture in pairs( textures_found ) do
&#9;&#9;&#9;if Texture.Face == self.Options.side then
&#9;&#9;&#9;&#9;has_texture = true;
&#9;&#9;&#9;&#9;break;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- Only add a texture if it doesn&apos;t already exist
&#9;&#9;if not has_texture then
&#9;&#9;&#9;local Texture = RbxUtility.Create &quot;Texture&quot; {
&#9;&#9;&#9;&#9;Parent = Item;
&#9;&#9;&#9;&#9;Face = self.Options.side;
&#9;&#9;&#9;};
&#9;&#9;&#9;table.insert( textures, Texture );
&#9;&#9;&#9;texture_parents[Texture] = Item;
&#9;&#9;end;

&#9;end;

&#9;HistoryRecord.textures = textures;
&#9;HistoryRecord.texture_parents = texture_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Texture.addDecal = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Decal in pairs( self.decals ) do
&#9;&#9;&#9;&#9;Decal.Parent = self.decal_parents[Decal];
&#9;&#9;&#9;&#9;Selection:add( Decal.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Decal in pairs( self.decals ) do
&#9;&#9;&#9;&#9;Selection:add( Decal.Parent );
&#9;&#9;&#9;&#9;Decal.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;local decals = {};
&#9;local decal_parents = {};

&#9;for _, Item in pairs( Selection.Items ) do

&#9;&#9;-- Check if the item has a decal already
&#9;&#9;local decals_found = _getChildrenOfClass( Item, &quot;Decal&quot; );
&#9;&#9;local has_decal = false;
&#9;&#9;for _, Decal in pairs( decals_found ) do
&#9;&#9;&#9;if Decal.Face == self.Options.side then
&#9;&#9;&#9;&#9;has_decal = true;
&#9;&#9;&#9;&#9;break;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- Only add a texture if it doesn&apos;t already exist
&#9;&#9;if not has_decal then
&#9;&#9;&#9;local Decal = RbxUtility.Create &quot;Decal&quot; {
&#9;&#9;&#9;&#9;Parent = Item;
&#9;&#9;&#9;&#9;Face = self.Options.side;
&#9;&#9;&#9;};
&#9;&#9;&#9;table.insert( decals, Decal );
&#9;&#9;&#9;decal_parents[Decal] = Item;
&#9;&#9;end;

&#9;end;

&#9;HistoryRecord.decals = decals;
&#9;HistoryRecord.decal_parents = decal_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Texture.removeTexture = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;textures = {};
&#9;&#9;texture_parents = {};
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Texture in pairs( self.textures ) do
&#9;&#9;&#9;&#9;Selection:add( Texture.Parent );
&#9;&#9;&#9;&#9;Texture.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Texture in pairs( self.textures ) do
&#9;&#9;&#9;&#9;Texture.Parent = self.texture_parents[Texture];
&#9;&#9;&#9;&#9;Selection:add( Texture.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Remove any textures on the selected side
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local textures = _getChildrenOfClass( Item, &quot;Texture&quot; );
&#9;&#9;for _, Texture in pairs( textures ) do
&#9;&#9;&#9;if Texture.Face == self.Options.side then
&#9;&#9;&#9;&#9;table.insert( HistoryRecord.textures, Texture );
&#9;&#9;&#9;&#9;HistoryRecord.texture_parents[Texture] = Texture.Parent;
&#9;&#9;&#9;&#9;Texture.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;History:add( HistoryRecord );

end;

Tools.Texture.removeDecal = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;decals = {};
&#9;&#9;decal_parents = {};
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Decal in pairs( self.decals ) do
&#9;&#9;&#9;&#9;Selection:add( Decal.Parent );
&#9;&#9;&#9;&#9;Decal.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Decal in pairs( self.decals ) do
&#9;&#9;&#9;&#9;Decal.Parent = self.decal_parents[Decal];
&#9;&#9;&#9;&#9;Selection:add( Decal.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Remove any decals on the selected side
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local decals = _getChildrenOfClass( Item, &quot;Decal&quot; );
&#9;&#9;for _, Decal in pairs( decals ) do
&#9;&#9;&#9;if Decal.Face == self.Options.side then
&#9;&#9;&#9;&#9;table.insert( HistoryRecord.decals, Decal );
&#9;&#9;&#9;&#9;HistoryRecord.decal_parents[Decal] = Decal.Parent;
&#9;&#9;&#9;&#9;Decal.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;History:add( HistoryRecord );

end;

Tools.Texture.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;local GUI = self.GUI;

&#9;-- If there are no items selected, just minimize
&#9;-- non-tool-option controls
&#9;if #Selection.Items == 0 then
&#9;&#9;self.GUI.AddButton.Visible = false;
&#9;&#9;self.GUI.RemoveButton.Visible = false;
&#9;&#9;self.GUI.ImageIDOption.Visible = false;
&#9;&#9;self.GUI.TransparencyOption.Visible = false;
&#9;&#9;self.GUI.RepeatOption.Visible = false;
&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 100 );

&#9;else
&#9;&#9;if self.Options.mode == &quot;texture&quot; then

&#9;&#9;&#9;-- Get the applicable textures
&#9;&#9;&#9;local textures = {};
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;&#9;local textures_found = _getChildrenOfClass( Item, &quot;Texture&quot; );
&#9;&#9;&#9;&#9;for _, Texture in pairs( textures_found ) do
&#9;&#9;&#9;&#9;&#9;if Texture.Face == self.Options.side then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert( textures, Texture );
&#9;&#9;&#9;&#9;&#9;&#9;break;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- If there are no textures
&#9;&#9;&#9;if #textures == 0 then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 130 );

&#9;&#9;&#9;-- If only some parts have textures
&#9;&#9;&#9;elseif #textures ~= #Selection.Items then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Position = UDim2.new( 0, 14, 0, 135 );
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Position = UDim2.new( 0, 14, 0, 170 );
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Position = UDim2.new( 0, 0, 0, 205 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 280 );

&#9;&#9;&#9;-- If every item has a texture
&#9;&#9;&#9;elseif #textures == #Selection.Items then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Position = UDim2.new( 0, 14, 0, 100 );
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Position = UDim2.new( 0, 14, 0, 135 );
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Position = UDim2.new( 0, 0, 0, 170 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 245 );
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Get the values to display on the GUI
&#9;&#9;&#9;local texture_id, texture_transparency, texture_repeat_x, texture_repeat_y;
&#9;&#9;&#9;for texture_index, Texture in pairs( textures ) do

&#9;&#9;&#9;&#9;-- Set the start values for later comparison
&#9;&#9;&#9;&#9;if texture_index == 1 then
&#9;&#9;&#9;&#9;&#9;texture_id = Texture.Texture:lower();
&#9;&#9;&#9;&#9;&#9;texture_transparency = Texture.Transparency;
&#9;&#9;&#9;&#9;&#9;texture_repeat_x = Texture.StudsPerTileU;
&#9;&#9;&#9;&#9;&#9;texture_repeat_y = Texture.StudsPerTileV;

&#9;&#9;&#9;&#9;-- Set the values to `nil` if they vary across the selection
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;if texture_id ~= Texture.Texture:lower() then
&#9;&#9;&#9;&#9;&#9;&#9;texture_id = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if texture_transparency ~= Texture.Transparency then
&#9;&#9;&#9;&#9;&#9;&#9;texture_transparency = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if texture_repeat_x ~= Texture.StudsPerTileU then
&#9;&#9;&#9;&#9;&#9;&#9;texture_repeat_x = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if texture_repeat_y ~= Texture.StudsPerTileV then
&#9;&#9;&#9;&#9;&#9;&#9;texture_repeat_y = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Update the GUI&apos;s values
&#9;&#9;&#9;if not self.State.image_id_focused then
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.TextBox.Text = texture_id and ( texture_id:match( &quot;%?id=([0-9]+)&quot; ) or &quot;&quot; ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.transparency_focused then
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.TransparencyInput.TextBox.Text = texture_transparency and _round( texture_transparency, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.rep_x_focused then
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.XInput.TextBox.Text = texture_repeat_x and _round( texture_repeat_x, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.rep_y_focused then
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.YInput.TextBox.Text = texture_repeat_y and _round( texture_repeat_y, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;

&#9;&#9;elseif self.Options.mode == &quot;decal&quot; then

&#9;&#9;&#9;-- Get the applicable decals
&#9;&#9;&#9;local decals = {};
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;&#9;local decals_found = _getChildrenOfClass( Item, &quot;Decal&quot; );
&#9;&#9;&#9;&#9;for _, Decal in pairs( decals_found ) do
&#9;&#9;&#9;&#9;&#9;if Decal.Face == self.Options.side then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert( decals, Decal );
&#9;&#9;&#9;&#9;&#9;&#9;break;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- If there are no decals
&#9;&#9;&#9;if #decals == 0 then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 130 );

&#9;&#9;&#9;-- If only some parts have decals
&#9;&#9;&#9;elseif #decals ~= #Selection.Items then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Position = UDim2.new( 0, 14, 0, 135 );
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Position = UDim2.new( 0, 14, 0, 170 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 245 );

&#9;&#9;&#9;-- If every item has a decal
&#9;&#9;&#9;elseif #decals == #Selection.Items then
&#9;&#9;&#9;&#9;self.GUI.AddButton.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.RemoveButton.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Visible = true;
&#9;&#9;&#9;&#9;self.GUI.RepeatOption.Visible = false;
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.Position = UDim2.new( 0, 14, 0, 100 );
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.Position = UDim2.new( 0, 14, 0, 135 );
&#9;&#9;&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 205 );
&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Get the values to display on the GUI
&#9;&#9;&#9;local decal_id, decal_transparency;
&#9;&#9;&#9;for decal_index, Decal in pairs( decals ) do

&#9;&#9;&#9;&#9;-- Set the start values for later comparison
&#9;&#9;&#9;&#9;if decal_index == 1 then
&#9;&#9;&#9;&#9;&#9;decal_id = Decal.Texture:lower();
&#9;&#9;&#9;&#9;&#9;decal_transparency = Decal.Transparency;

&#9;&#9;&#9;&#9;-- Set the values to `nil` if they vary across the selection
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;if decal_id ~= Decal.Texture:lower() then
&#9;&#9;&#9;&#9;&#9;&#9;decal_id = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;&#9;if decal_transparency ~= Decal.Transparency then
&#9;&#9;&#9;&#9;&#9;&#9;decal_transparency = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;&#9;-- Update the GUI&apos;s values
&#9;&#9;&#9;if not self.State.image_id_focused then
&#9;&#9;&#9;&#9;self.GUI.ImageIDOption.TextBox.Text = decal_id and ( decal_id:match( &quot;%?id=([0-9]+)&quot; ) or &quot;&quot; ) or &quot;*&quot;;
&#9;&#9;&#9;end;
&#9;&#9;&#9;if not self.State.transparency_focused then
&#9;&#9;&#9;&#9;self.GUI.TransparencyOption.TransparencyInput.TextBox.Text = decal_transparency and _round( decal_transparency, 2 ) or &quot;*&quot;;
&#9;&#9;&#9;end;

&#9;&#9;end;
&#9;end;

end;

Tools.Texture.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then
&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTTextureToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;-- Add functionality to the add/remove buttons
&#9;&#9;Container.AddButton.Button.MouseButton1Up:connect( function ()
&#9;&#9;&#9;if self.Options.mode == &quot;decal&quot; then
&#9;&#9;&#9;&#9;self:addDecal();
&#9;&#9;&#9;elseif self.Options.mode == &quot;texture&quot; then
&#9;&#9;&#9;&#9;self:addTexture();
&#9;&#9;&#9;end;
&#9;&#9;end );
&#9;&#9;Container.RemoveButton.Button.MouseButton1Up:connect( function ()
&#9;&#9;&#9;if self.Options.mode == &quot;decal&quot; then
&#9;&#9;&#9;&#9;self:removeDecal();
&#9;&#9;&#9;elseif self.Options.mode == &quot;texture&quot; then
&#9;&#9;&#9;&#9;self:removeTexture();
&#9;&#9;&#9;end;
&#9;&#9;end );

&#9;&#9;-- Add functionality to the mode selectors
&#9;&#9;Container.ModeOption.Decal.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeMode( &quot;decal&quot; );
&#9;&#9;end );
&#9;&#9;Container.ModeOption.Texture.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeMode( &quot;texture&quot; );
&#9;&#9;end );

&#9;&#9;-- Add the side dropdown
&#9;&#9;local SideDropdown = createDropdown();
&#9;&#9;self.SideDropdown = SideDropdown;
&#9;&#9;SideDropdown.Frame.Parent = Container.SideOption;
&#9;&#9;SideDropdown.Frame.Position = UDim2.new( 0, 35, 0, 0 );
&#9;&#9;SideDropdown.Frame.Size = UDim2.new( 1, -50, 0, 25 );
&#9;&#9;SideDropdown:addOption( &quot;TOP&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Top );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;BOTTOM&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Bottom );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;FRONT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Front );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;BACK&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Back );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;LEFT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Left );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;RIGHT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Right );
&#9;&#9;end );

&#9;&#9;-- Add functionality to the repeat inputs
&#9;&#9;Container.RepeatOption.XInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.rep_x_focused = true;
&#9;&#9;&#9;Container.RepeatOption.XInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.RepeatOption.XInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.RepeatOption.XInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeFrequency( &apos;x&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.rep_x_focused = false;
&#9;&#9;end );

&#9;&#9;Container.RepeatOption.YInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.rep_y_focused = true;
&#9;&#9;&#9;Container.RepeatOption.YInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.RepeatOption.YInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.RepeatOption.YInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeFrequency( &apos;y&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.rep_y_focused = false;
&#9;&#9;end );

&#9;&#9;-- Add functionality to the decal/texture ID inputs
&#9;&#9;Container.ImageIDOption.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.image_id_focused = true;
&#9;&#9;&#9;Container.ImageIDOption.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.ImageIDOption.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local input = Container.ImageIDOption.TextBox.Text;
&#9;&#9;&#9;local potential_new = tonumber( input ) or input:lower():match( &quot;%?id=([0-9]+)&quot; );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if self.Options.mode == &quot;decal&quot; then
&#9;&#9;&#9;&#9;&#9;self:changeDecal( potential_new );
&#9;&#9;&#9;&#9;elseif self.Options.mode == &quot;texture&quot; then
&#9;&#9;&#9;&#9;&#9;self:changeTexture( potential_new );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.image_id_focused = false;
&#9;&#9;end );

&#9;&#9;Container.TransparencyOption.TransparencyInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.transparency_focused = true;
&#9;&#9;&#9;Container.TransparencyOption.TransparencyInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;Container.TransparencyOption.TransparencyInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( Container.TransparencyOption.TransparencyInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 1 then
&#9;&#9;&#9;&#9;&#9;potential_new = 1;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeTransparency( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.transparency_focused = false;
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Texture.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Texture.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX13">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTWeldTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Weld tool
------------------------------------------

-- Create the tool
Tools.Weld = {};

-- Define the tool&apos;s color
Tools.Weld.Color = BrickColor.new( &quot;Really black&quot; );

-- Keep a container for state data
Tools.Weld.State = {};

-- Keep a container for temporary connections
Tools.Weld.Connections = {};

-- Keep a container for platform event connections
Tools.Weld.Listeners = {};

-- Start adding functionality to the tool
Tools.Weld.Listeners.Equipped = function ()

&#9;local self = Tools.Weld;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Highlight the last part in the selection
&#9;if Selection.Last then
&#9;&#9;SelectionBoxes[Selection.Last].Color = BrickColor.new( &quot;Dark stone grey&quot; );
&#9;end;
&#9;self.Connections.LastPartHighlighter = Selection.Changed:connect( function ()
&#9;&#9;updateSelectionBoxColor();
&#9;&#9;if Selection.Last then
&#9;&#9;&#9;SelectionBoxes[Selection.Last].Color = BrickColor.new( &quot;Dark stone grey&quot; );
&#9;&#9;end;
&#9;end );

end;

Tools.Weld.Listeners.Unequipped = function ()

&#9;local self = Tools.Weld;

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Weld.Listeners.Button2Down = function ()

&#9;local self = Tools.Weld;

&#9;-- Capture the camera rotation (for later use
&#9;-- in determining whether a surface was being
&#9;-- selected or the camera was being rotated
&#9;-- with the right mouse button)
&#9;local cr_x, cr_y, cr_z = Camera.CoordinateFrame:toEulerAnglesXYZ();
&#9;self.State.PreB2DownCameraRotation = Vector3.new( cr_x, cr_y, cr_z );

end;

Tools.Weld.Listeners.Button2Up = function ()

&#9;local self = Tools.Weld;

&#9;local cr_x, cr_y, cr_z = Camera.CoordinateFrame:toEulerAnglesXYZ();
&#9;local CameraRotation = Vector3.new( cr_x, cr_y, cr_z );

&#9;-- If a part is selected
&#9;if Selection:find( Mouse.Target ) and self.State.PreB2DownCameraRotation == CameraRotation then
&#9;&#9;Selection:focus( Mouse.Target );
&#9;end;

end;

Tools.Weld.weld = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;weld_parents = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Weld in pairs( self.welds ) do
&#9;&#9;&#9;&#9;Selection:add( Weld.Part0 );
&#9;&#9;&#9;&#9;Selection:add( Weld.Part1 );
&#9;&#9;&#9;&#9;Weld.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Weld in pairs( self.welds ) do
&#9;&#9;&#9;&#9;Weld.Parent = self.weld_parents[Weld];
&#9;&#9;&#9;&#9;Selection:add( Weld.Part0 );
&#9;&#9;&#9;&#9;Selection:add( Weld.Part1 );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Keep track of the welds we create
&#9;local welds = {};

&#9;-- Make sure there&apos;s more than one item
&#9;if #Selection.Items &gt; 1 and Selection.Last then

&#9;&#9;-- Weld all the parts to the last part
&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;if Item ~= Selection.Last then
&#9;&#9;&#9;&#9;local Weld = RbxUtility.Create &quot;Weld&quot; {
&#9;&#9;&#9;&#9;&#9;Name = &apos;BTWeld&apos;;
&#9;&#9;&#9;&#9;&#9;Parent = Selection.Last;
&#9;&#9;&#9;&#9;&#9;Part0 = Selection.Last;
&#9;&#9;&#9;&#9;&#9;Part1 = Item;
&#9;&#9;&#9;&#9;&#9;Archivable = false;

&#9;&#9;&#9;&#9;&#9;-- Calculate the offset of `Item` from `Selection.Last`
&#9;&#9;&#9;&#9;&#9;C1 = Item.CFrame:toObjectSpace( Selection.Last.CFrame );
&#9;&#9;&#9;&#9;};
&#9;&#9;&#9;&#9;table.insert( welds, Weld );
&#9;&#9;&#9;&#9;HistoryRecord.weld_parents[Weld] = Weld.Parent;
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;end;

&#9;HistoryRecord.welds = welds;
&#9;History:add( HistoryRecord );

&#9;-- Update the change bar
&#9;self.GUI.Changes.Text.Text = &quot;created &quot; .. #welds .. &quot; weld&quot; .. ( #welds ~= 1 and &quot;s&quot; or &quot;&quot; );

&#9;-- Play a confirmation sound
&#9;local Sound = RbxUtility.Create &quot;Sound&quot; {
&#9;&#9;Name = &quot;BTActionCompletionSound&quot;;
&#9;&#9;Pitch = 1.5;
&#9;&#9;SoundId = action_completion_sound;
&#9;&#9;Volume = 1;
&#9;&#9;Parent = Player;
&#9;};
&#9;Sound:Play();
&#9;Sound:Destroy();

end;

Tools.Weld.breakWelds = function ( self )

&#9;local HistoryRecord = {
&#9;&#9;weld_parents = {};
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Weld in pairs( self.welds ) do
&#9;&#9;&#9;&#9;Selection:add( Weld.Part0 );
&#9;&#9;&#9;&#9;Selection:add( Weld.Part1 );
&#9;&#9;&#9;&#9;Weld.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Weld in pairs( self.welds ) do
&#9;&#9;&#9;&#9;Selection:add( Weld.Part1 );
&#9;&#9;&#9;&#9;Selection:add( Weld.Part0 );
&#9;&#9;&#9;&#9;Weld.Parent = self.weld_parents[Weld];
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Break any welds we created for each item in the selection
&#9;local welds = {};
&#9;local all_objects = _getAllDescendants( Game.Workspace );
&#9;for _, Weld in pairs( all_objects ) do
&#9;&#9;if Weld:IsA( &quot;Weld&quot; ) and Weld.Name == &quot;BTWeld&quot; then
&#9;&#9;&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;&#9;&#9;if Weld.Part0 == Item or Weld.Part1 == Item then
&#9;&#9;&#9;&#9;&#9;if not HistoryRecord.weld_parents[Weld] then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert( welds, Weld );
&#9;&#9;&#9;&#9;&#9;&#9;HistoryRecord.weld_parents[Weld] = Weld.Parent;
&#9;&#9;&#9;&#9;&#9;&#9;Weld.Parent = nil;
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

&#9;HistoryRecord.welds = welds;
&#9;History:add( HistoryRecord );

&#9;-- Update the change bar
&#9;self.GUI.Changes.Text.Text = &quot;broke &quot; .. #welds .. &quot; weld&quot; .. ( #welds ~= 1 and &quot;s&quot; or &quot;&quot; );

&#9;-- Play a confirmation sound
&#9;local Sound = RbxUtility.Create &quot;Sound&quot; {
&#9;&#9;Name = &quot;BTActionCompletionSound&quot;;
&#9;&#9;Pitch = 1.5;
&#9;&#9;SoundId = action_completion_sound;
&#9;&#9;Volume = 1;
&#9;&#9;Parent = Player;
&#9;};
&#9;Sound:Play();
&#9;Sound:Destroy();

end;

Tools.Weld.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then

&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTWeldToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;Container.Interface.WeldButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:weld();
&#9;&#9;end );

&#9;&#9;Container.Interface.BreakWeldsButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:breakWelds();
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Weld.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Weld.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX14">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BTLightingTool</string>
					<ProtectedString name="Source">-- Load the main tool&apos;s core environment when it&apos;s ready
repeat wait() until (
&#9;_G.BTCoreEnv and
&#9;_G.BTCoreEnv[script.Parent.Parent] and
&#9;_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Lighting tool
------------------------------------------

-- Create the tool
Tools.Lighting = {};

-- Define the tool&apos;s color
Tools.Lighting.Color = BrickColor.new( &quot;Really black&quot; );

-- Keep a container for state data
Tools.Lighting.State = {};

-- Keep a container for temporary connections
Tools.Lighting.Connections = {};

-- Keep a container for platform event connections
Tools.Lighting.Listeners = {};

-- Start adding functionality to the tool
Tools.Lighting.Listeners.Equipped = function ()

&#9;local self = Tools.Lighting;

&#9;-- Change the color of selection boxes temporarily
&#9;self.State.PreviousSelectionBoxColor = SelectionBoxColor;
&#9;SelectionBoxColor = self.Color;
&#9;updateSelectionBoxColor();

&#9;-- Reveal the GUI
&#9;self:showGUI();

&#9;-- Update the GUI regularly
&#9;coroutine.wrap( function ()
&#9;&#9;local updater_on = true;

&#9;&#9;-- Provide a function to stop the loop
&#9;&#9;self.stopGUIUpdater = function ( self )
&#9;&#9;&#9;updater_on = false;
&#9;&#9;end;

&#9;&#9;while wait( 0.1 ) and updater_on do

&#9;&#9;&#9;-- Make sure the tool&apos;s equipped
&#9;&#9;&#9;if CurrentTool == self then

&#9;&#9;&#9;&#9;-- Update the GUI if it&apos;s visible
&#9;&#9;&#9;&#9;if self.GUI and self.GUI.Visible then
&#9;&#9;&#9;&#9;&#9;self:updateGUI();
&#9;&#9;&#9;&#9;end;

&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;end )();

end;

Tools.Lighting.Listeners.Unequipped = function ()

&#9;local self = Tools.Lighting;

&#9;-- Stop the GUI updater
&#9;self:stopGUIUpdater();

&#9;-- Hide the GUI
&#9;self:hideGUI();

&#9;-- Disconnect temporary connections
&#9;for connection_index, Connection in pairs( self.Connections ) do
&#9;&#9;Connection:disconnect();
&#9;&#9;self.Connections[connection_index] = nil;
&#9;end;

&#9;-- Restore the original color of selection boxes
&#9;SelectionBoxColor = self.State.PreviousSelectionBoxColor;
&#9;updateSelectionBoxColor();

end;

Tools.Lighting.Listeners.Button2Down = function ()

&#9;local self = Tools.Lighting;

&#9;-- Capture the camera rotation (for later use
&#9;-- in determining whether a surface was being
&#9;-- selected or the camera was being rotated
&#9;-- with the right mouse button)
&#9;local cr_x, cr_y, cr_z = Camera.CoordinateFrame:toEulerAnglesXYZ();
&#9;self.State.PreB2DownCameraRotation = Vector3.new( cr_x, cr_y, cr_z );

end;

Tools.Lighting.Listeners.Button2Up = function ()

&#9;local self = Tools.Lighting;

&#9;local cr_x, cr_y, cr_z = Camera.CoordinateFrame:toEulerAnglesXYZ();
&#9;local CameraRotation = Vector3.new( cr_x, cr_y, cr_z );

&#9;-- If a surface is selected, change the side option
&#9;if Selection:find( Mouse.Target ) and self.State.PreB2DownCameraRotation == CameraRotation then
&#9;&#9;self:changeSide( Mouse.TargetSurface );
&#9;end;

end;

Tools.Lighting.updateGUI = function ( self )

&#9;-- Make sure the GUI exists
&#9;if not self.GUI then
&#9;&#9;return;
&#9;end;

&#9;-- If there are items, display the regular interface
&#9;if #Selection.Items &gt; 0 then
&#9;&#9;local spotlights = self:getSpotlights();
&#9;&#9;local pointlights = self:getPointLights();

&#9;&#9;-- Get the properties of the spot/point lights
&#9;&#9;local sl_color_r, sl_color_g, sl_color_b, sl_brightness, sl_range, sl_shadows, sl_angle, sl_side;
&#9;&#9;local pl_color_r, pl_color_g, pl_color_b, pl_brightness, pl_range, pl_shadows;
&#9;&#9;for light_index, Light in pairs( spotlights ) do

&#9;&#9;&#9;-- Set the initial values for later comparison
&#9;&#9;&#9;if light_index == 1 then
&#9;&#9;&#9;&#9;sl_color_r, sl_color_g, sl_color_b = Light.Color.r, Light.Color.g, Light.Color.b;
&#9;&#9;&#9;&#9;sl_brightness = Light.Brightness;
&#9;&#9;&#9;&#9;sl_range = Light.Range;
&#9;&#9;&#9;&#9;sl_shadows = Light.Shadows;
&#9;&#9;&#9;&#9;sl_angle = Light.Angle;
&#9;&#9;&#9;&#9;sl_side = Light.Face;

&#9;&#9;&#9;-- Set the values to `nil` if they vary across the selection
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if sl_color_r ~= Light.Color.r then
&#9;&#9;&#9;&#9;&#9;sl_color_r = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_color_g ~= Light.Color.g then
&#9;&#9;&#9;&#9;&#9;sl_color_g = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_color_b ~= Light.Color.b then
&#9;&#9;&#9;&#9;&#9;sl_color_b = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_brightness ~= Light.Brightness then
&#9;&#9;&#9;&#9;&#9;sl_brightness = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_range ~= Light.Range then
&#9;&#9;&#9;&#9;&#9;sl_range = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_shadows ~= Light.Shadows then
&#9;&#9;&#9;&#9;&#9;sl_shadows = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_angle ~= Light.Angle then
&#9;&#9;&#9;&#9;&#9;sl_angle = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if sl_side ~= Light.Face then
&#9;&#9;&#9;&#9;&#9;sl_side = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;&#9;for light_index, Light in pairs( pointlights ) do

&#9;&#9;&#9;-- Set the initial values for later comparison
&#9;&#9;&#9;if light_index == 1 then
&#9;&#9;&#9;&#9;pl_color_r, pl_color_g, pl_color_b = Light.Color.r, Light.Color.g, Light.Color.b;
&#9;&#9;&#9;&#9;pl_brightness = Light.Brightness;
&#9;&#9;&#9;&#9;pl_range = Light.Range;
&#9;&#9;&#9;&#9;pl_shadows = Light.Shadows;

&#9;&#9;&#9;-- Set the values to `nil` if they vary across the selection
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if pl_color_r ~= Light.Color.r then
&#9;&#9;&#9;&#9;&#9;pl_color_r = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if pl_color_g ~= Light.Color.g then
&#9;&#9;&#9;&#9;&#9;pl_color_g = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if pl_color_b ~= Light.Color.b then
&#9;&#9;&#9;&#9;&#9;pl_color_b = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if pl_brightness ~= Light.Brightness then
&#9;&#9;&#9;&#9;&#9;pl_brightness = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if pl_range ~= Light.Range then
&#9;&#9;&#9;&#9;&#9;pl_range = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;if pl_shadows ~= Light.Shadows then
&#9;&#9;&#9;&#9;&#9;pl_shadows = nil;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;

&#9;&#9;end;

&#9;&#9;self.State.sl_color = ( sl_color_r and sl_color_g and sl_color_b ) and Color3.new( sl_color_r, sl_color_g, sl_color_b ) or nil;
&#9;&#9;self.State.pl_color = ( pl_color_r and pl_color_g and pl_color_b ) and Color3.new( pl_color_r, pl_color_g, pl_color_b ) or nil;

&#9;&#9;-- Update the spotlight GUI data
&#9;&#9;if not self.State.sl_color_r_focused then
&#9;&#9;&#9;self.GUI.Spotlight.Options.ColorOption.RInput.TextBox.Text = sl_color_r and _round( sl_color_r * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.sl_color_g_focused then
&#9;&#9;&#9;self.GUI.Spotlight.Options.ColorOption.GInput.TextBox.Text = sl_color_g and _round( sl_color_g * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.sl_color_b_focused then
&#9;&#9;&#9;self.GUI.Spotlight.Options.ColorOption.BInput.TextBox.Text = sl_color_b and _round( sl_color_b * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.sl_brightness_focused then
&#9;&#9;&#9;self.GUI.Spotlight.Options.BrightnessOption.Input.TextBox.Text = sl_brightness and _round( sl_brightness, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.sl_range_focused then
&#9;&#9;&#9;self.GUI.Spotlight.Options.RangeOption.Input.TextBox.Text = sl_range and _round( sl_range, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if sl_shadows == nil then
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.On.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.Off.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;elseif sl_shadows == true then
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.On.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.Off.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;elseif sl_shadows == false then
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.On.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.Off.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;self.GUI.Spotlight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;end;
&#9;&#9;if not self.State.sl_angle_focused then
&#9;&#9;&#9;self.GUI.Spotlight.Options.AngleOption.Input.TextBox.Text = sl_angle and _round( sl_angle, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;self.SideDropdown:selectOption( sl_side and sl_side.Name:upper() or &apos;*&apos; );

&#9;&#9;-- Update the point light GUI info
&#9;&#9;if not self.State.pl_color_r_focused then
&#9;&#9;&#9;self.GUI.PointLight.Options.ColorOption.RInput.TextBox.Text = pl_color_r and _round( pl_color_r * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.pl_color_g_focused then
&#9;&#9;&#9;self.GUI.PointLight.Options.ColorOption.GInput.TextBox.Text = pl_color_g and _round( pl_color_g * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.pl_color_b_focused then
&#9;&#9;&#9;self.GUI.PointLight.Options.ColorOption.BInput.TextBox.Text = pl_color_b and _round( pl_color_b * 255, 0 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.pl_brightness_focused then
&#9;&#9;&#9;self.GUI.PointLight.Options.BrightnessOption.Input.TextBox.Text = pl_brightness and _round( pl_brightness, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if not self.State.pl_range_focused then
&#9;&#9;&#9;self.GUI.PointLight.Options.RangeOption.Input.TextBox.Text = pl_range and _round( pl_range, 2 ) or &apos;*&apos;;
&#9;&#9;end;
&#9;&#9;if pl_shadows == nil then
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.On.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.Off.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;elseif pl_shadows == true then
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.On.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.Off.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;elseif pl_shadows == false then
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.On.Background.Image = light_slanted_rectangle;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 1;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.Off.Background.Image = dark_slanted_rectangle;
&#9;&#9;&#9;self.GUI.PointLight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 0;
&#9;&#9;end;

&#9;&#9;if self.GUI.SelectNote.Visible then
&#9;&#9;&#9;self:closePointLight();
&#9;&#9;&#9;self:closeSpotlight();
&#9;&#9;end;
&#9;&#9;self.GUI.Spotlight.Visible = true;
&#9;&#9;self.GUI.PointLight.Visible = true;
&#9;&#9;self.GUI.SelectNote.Visible = false;

&#9;&#9;if not self.State.spotlight_open and not self.State.pointlight_open then
&#9;&#9;&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 95 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;&#9;end;

&#9;&#9;-- If there are no spotlights
&#9;&#9;if #spotlights == 0 then
&#9;&#9;&#9;self.GUI.Spotlight.Options.Size = UDim2.new( 1, -3, 0, 0 );
&#9;&#9;&#9;self.GUI.Spotlight.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.Spotlight.RemoveButton.Visible = false;
&#9;&#9;&#9;if self.State.spotlight_open then
&#9;&#9;&#9;&#9;self:closeSpotlight();
&#9;&#9;&#9;end;

&#9;&#9;-- If only some items have spotlights
&#9;&#9;elseif #spotlights ~= #Selection.Items then
&#9;&#9;&#9;self.GUI.Spotlight.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.Spotlight.RemoveButton.Position = UDim2.new( 0, 90, 0, 3 );
&#9;&#9;&#9;self.GUI.Spotlight.RemoveButton.Visible = true;

&#9;&#9;-- If all items have spotlights
&#9;&#9;elseif #spotlights == #Selection.Items then
&#9;&#9;&#9;self.GUI.Spotlight.AddButton.Visible = false;
&#9;&#9;&#9;self.GUI.Spotlight.RemoveButton.Position = UDim2.new( 0, 127, 0, 3 );
&#9;&#9;&#9;self.GUI.Spotlight.RemoveButton.Visible = true;
&#9;&#9;&#9;if self.GUI.Spotlight.Size == UDim2.new( 0, 200, 0, 52 ) then
&#9;&#9;&#9;&#9;self.GUI.Spotlight.Size = UDim2.new( 0, 200, 0, 95 );
&#9;&#9;&#9;end;
&#9;&#9;end;

&#9;&#9;-- If there are no point lights
&#9;&#9;if #pointlights == 0 then
&#9;&#9;&#9;self.GUI.PointLight.Options.Size = UDim2.new( 1, -3, 0, 0 );
&#9;&#9;&#9;self.GUI.PointLight.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.PointLight.RemoveButton.Visible = false;
&#9;&#9;&#9;if self.State.pointlight_open then
&#9;&#9;&#9;&#9;self:closePointLight();
&#9;&#9;&#9;end;

&#9;&#9;-- If only some items have point lights
&#9;&#9;elseif #pointlights ~= #Selection.Items then
&#9;&#9;&#9;self.GUI.PointLight.AddButton.Visible = true;
&#9;&#9;&#9;self.GUI.PointLight.RemoveButton.Position = UDim2.new( 0, 90, 0, 3 );
&#9;&#9;&#9;self.GUI.PointLight.RemoveButton.Visible = true;

&#9;&#9;-- If all items have point lights
&#9;&#9;elseif #pointlights == #Selection.Items then
&#9;&#9;&#9;self.GUI.PointLight.AddButton.Visible = false;
&#9;&#9;&#9;self.GUI.PointLight.RemoveButton.Position = UDim2.new( 0, 127, 0, 3 );
&#9;&#9;&#9;self.GUI.PointLight.RemoveButton.Visible = true;
&#9;&#9;end;

&#9;-- If nothing is selected, show the select something note
&#9;else
&#9;&#9;self.GUI.Spotlight.Visible = false;
&#9;&#9;self.GUI.PointLight.Visible = false;
&#9;&#9;self.GUI.SelectNote.Visible = true;
&#9;&#9;self.GUI.Size = UDim2.new( 0, 200, 0, 52 );
&#9;end;

end;

Tools.Lighting.openSpotlight = function ( self )
&#9;self.State.spotlight_open = true;
&#9;self:closePointLight();
&#9;self.GUI.Spotlight.Options:TweenSize( UDim2.new( 1, -3, 0, 300 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI.Spotlight:TweenPosition( UDim2.new( 0, 10, 0, 30 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 275 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
end;

Tools.Lighting.openPointLight = function ( self )
&#9;self.State.pointlight_open = true;
&#9;self:closeSpotlight();
&#9;self.GUI.PointLight.Options:TweenSize( UDim2.new( 1, -3, 0, 110 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI.PointLight:TweenPosition( UDim2.new( 0, 10, 0, 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 200 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
end;

Tools.Lighting.closeSpotlight = function ( self )
&#9;self.State.spotlight_open = false;
&#9;self.GUI.Spotlight.Options:TweenSize( UDim2.new( 1, -3, 0, 0 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI.PointLight:TweenPosition( UDim2.new( 0, 10, 0, 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;if not self.State.pointlight_open then
&#9;&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 95 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;end;
end;

Tools.Lighting.closePointLight = function ( self )
&#9;self.State.pointlight_open = false;
&#9;self.GUI.PointLight:TweenPosition( UDim2.new( 0, 10, 0, self.State.spotlight_open and 240 or 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;self.GUI.PointLight.Options:TweenSize( UDim2.new( 1, -3, 0, 0 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;if not self.State.spotlight_open then
&#9;&#9;self.GUI:TweenSize( UDim2.new( 0, 200, 0, 95 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
&#9;end;
end;

Tools.Lighting.showGUI = function ( self )

&#9;-- Initialize the GUI if it&apos;s not ready yet
&#9;if not self.GUI then
&#9;&#9;local Container = Tool.Interfaces:WaitForChild( &quot;BTLightingToolGUI&quot; ):Clone();
&#9;&#9;Container.Parent = UI;

&#9;&#9;Container.Spotlight.ArrowButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;if not self.State.spotlight_open and #self:getSpotlights() &gt; 0 then
&#9;&#9;&#9;&#9;self:openSpotlight();
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:closeSpotlight();
&#9;&#9;&#9;end;
&#9;&#9;end );
&#9;&#9;Container.PointLight.ArrowButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;if not self.State.pointlight_open and #self:getPointLights() &gt; 0 then
&#9;&#9;&#9;&#9;self:openPointLight();
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self:closePointLight();
&#9;&#9;&#9;end;
&#9;&#9;end );

&#9;&#9;Container.Spotlight.AddButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:addLight( &apos;SpotLight&apos; );
&#9;&#9;&#9;self:openSpotlight();
&#9;&#9;end );
&#9;&#9;Container.PointLight.AddButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:addLight( &apos;PointLight&apos; );
&#9;&#9;&#9;self:openPointLight();
&#9;&#9;end );
&#9;&#9;Container.Spotlight.RemoveButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:removeLight( &apos;spotlight&apos; );
&#9;&#9;&#9;self:closeSpotlight();
&#9;&#9;end );
&#9;&#9;Container.PointLight.RemoveButton.MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:removeLight( &apos;pointlight&apos; );
&#9;&#9;&#9;self:closePointLight();
&#9;&#9;end );

&#9;&#9;-- Create the spotlight interface&apos;s side dropdown
&#9;&#9;local SideDropdown = createDropdown();
&#9;&#9;self.SideDropdown = SideDropdown;
&#9;&#9;SideDropdown.Frame.Parent = Container.Spotlight.Options.SideOption;
&#9;&#9;SideDropdown.Frame.Position = UDim2.new( 0, 35, 0, 0 );
&#9;&#9;SideDropdown.Frame.Size = UDim2.new( 0, 90, 0, 25 );

&#9;&#9;SideDropdown:addOption( &quot;TOP&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Top );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;BOTTOM&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Bottom );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;FRONT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Front );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;BACK&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Back );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;LEFT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Left );
&#9;&#9;end );
&#9;&#9;SideDropdown:addOption( &quot;RIGHT&quot; ).MouseButton1Up:connect( function ()
&#9;&#9;&#9;self:changeSide( Enum.NormalId.Right );
&#9;&#9;end );

&#9;&#9;-- Add functionality to spotlight inputs
&#9;&#9;local SpotlightUI = Container.Spotlight;

&#9;&#9;local SLColor = SpotlightUI.Options.ColorOption;
&#9;&#9;SLColor.RInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sl_color_r_focused = true;
&#9;&#9;&#9;SLColor.RInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SLColor.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SLColor.RInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeColor( &apos;spotlight&apos;, &apos;r&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sl_color_r_focused = false;
&#9;&#9;end );
&#9;&#9;SLColor.GInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sl_color_g_focused = true;
&#9;&#9;&#9;SLColor.GInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SLColor.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SLColor.GInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeColor( &apos;spotlight&apos;, &apos;g&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sl_color_g_focused = false;
&#9;&#9;end );
&#9;&#9;SLColor.BInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sl_color_b_focused = true;
&#9;&#9;&#9;SLColor.BInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SLColor.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SLColor.BInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeColor( &apos;spotlight&apos;, &apos;b&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sl_color_b_focused = false;
&#9;&#9;end );

&#9;&#9;SLColor.HSVPicker.MouseButton1Up:connect( function ()
&#9;&#9;&#9;ColorPicker:start( function ( ... )
&#9;&#9;&#9;&#9;local args = { ... };
&#9;&#9;&#9;&#9;-- If a color was picked, change the spotlights&apos; color
&#9;&#9;&#9;&#9;-- to the selected color
&#9;&#9;&#9;&#9;if #args == 3 then
&#9;&#9;&#9;&#9;&#9;self:changeColor( &apos;spotlight&apos;, _HSVToRGB( ... ) );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end, self.State.sl_color );
&#9;&#9;end );

&#9;&#9;local SLBrightness = SpotlightUI.Options.BrightnessOption.Input;
&#9;&#9;SLBrightness.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sl_brightness_focused = true;
&#9;&#9;&#9;SLBrightness.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SLBrightness.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SLBrightness.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 5 then
&#9;&#9;&#9;&#9;&#9;potential_new = 5;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeBrightness( &apos;spotlight&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sl_brightness_focused = false;
&#9;&#9;end );

&#9;&#9;local SLAngle = SpotlightUI.Options.AngleOption.Input;
&#9;&#9;SLAngle.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sl_angle_focused = true;
&#9;&#9;&#9;SLAngle.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SLAngle.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SLAngle.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;self:changeAngle( potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sl_angle_focused = false;
&#9;&#9;end );

&#9;&#9;local SLRange = SpotlightUI.Options.RangeOption.Input;
&#9;&#9;SLRange.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.sl_range_focused = true;
&#9;&#9;&#9;SLRange.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;SLRange.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( SLRange.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 60 then
&#9;&#9;&#9;&#9;&#9;potential_new = 60;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeRange( &apos;spotlight&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.sl_range_focused = false;
&#9;&#9;end );

&#9;&#9;local SLShadows = SpotlightUI.Options.ShadowsOption;
&#9;&#9;SLShadows.On.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeShadows( &apos;spotlight&apos;, true );
&#9;&#9;end );
&#9;&#9;SLShadows.Off.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeShadows( &apos;spotlight&apos;, false );
&#9;&#9;end );

&#9;&#9;-- Add functionality to point light inputs
&#9;&#9;local PointLightUI = Container.PointLight;

&#9;&#9;local PLColor = PointLightUI.Options.ColorOption;
&#9;&#9;PLColor.RInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pl_color_r_focused = true;
&#9;&#9;&#9;PLColor.RInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;PLColor.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( PLColor.RInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeColor( &apos;pointlight&apos;, &apos;r&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pl_color_r_focused = false;
&#9;&#9;end );
&#9;&#9;PLColor.GInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pl_color_g_focused = true;
&#9;&#9;&#9;PLColor.GInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;PLColor.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( PLColor.GInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeColor( &apos;pointlight&apos;, &apos;g&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pl_color_g_focused = false;
&#9;&#9;end );
&#9;&#9;PLColor.BInput.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pl_color_b_focused = true;
&#9;&#9;&#9;PLColor.BInput.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;PLColor.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( PLColor.BInput.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 255 then
&#9;&#9;&#9;&#9;&#9;potential_new = 255;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeColor( &apos;pointlight&apos;, &apos;b&apos;, potential_new / 255 );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pl_color_b_focused = false;
&#9;&#9;end );

&#9;&#9;PLColor.HSVPicker.MouseButton1Up:connect( function ()
&#9;&#9;&#9;ColorPicker:start( function ( ... )
&#9;&#9;&#9;&#9;local args = { ... };
&#9;&#9;&#9;&#9;-- If a color was picked, change the point lights&apos; color
&#9;&#9;&#9;&#9;-- to the selected color
&#9;&#9;&#9;&#9;if #args == 3 then
&#9;&#9;&#9;&#9;&#9;self:changeColor( &apos;pointlight&apos;, _HSVToRGB( ... ) );
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end, self.State.pl_color );
&#9;&#9;end );

&#9;&#9;local PLBrightness = PointLightUI.Options.BrightnessOption.Input;
&#9;&#9;PLBrightness.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pl_brightness_focused = true;
&#9;&#9;&#9;PLBrightness.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;PLBrightness.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( PLBrightness.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 5 then
&#9;&#9;&#9;&#9;&#9;potential_new = 5;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeBrightness( &apos;pointlight&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pl_brightness_focused = false;
&#9;&#9;end );

&#9;&#9;local PLRange = PointLightUI.Options.RangeOption.Input;
&#9;&#9;PLRange.TextButton.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self.State.pl_range_focused = true;
&#9;&#9;&#9;PLRange.TextBox:CaptureFocus();
&#9;&#9;end );
&#9;&#9;PLRange.TextBox.FocusLost:connect( function ( enter_pressed )
&#9;&#9;&#9;local potential_new = tonumber( PLRange.TextBox.Text );
&#9;&#9;&#9;if potential_new then
&#9;&#9;&#9;&#9;if potential_new &gt; 60 then
&#9;&#9;&#9;&#9;&#9;potential_new = 60;
&#9;&#9;&#9;&#9;elseif potential_new &lt; 0 then
&#9;&#9;&#9;&#9;&#9;potential_new = 0;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;self:changeRange( &apos;pointlight&apos;, potential_new );
&#9;&#9;&#9;end;
&#9;&#9;&#9;self.State.pl_range_focused = false;
&#9;&#9;end );

&#9;&#9;local PLShadows = PointLightUI.Options.ShadowsOption;
&#9;&#9;PLShadows.On.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeShadows( &apos;pointlight&apos;, true );
&#9;&#9;end );
&#9;&#9;PLShadows.Off.Button.MouseButton1Down:connect( function ()
&#9;&#9;&#9;self:changeShadows( &apos;pointlight&apos;, false );
&#9;&#9;end );

&#9;&#9;self.GUI = Container;
&#9;end;

&#9;-- Reveal the GUI
&#9;self.GUI.Visible = true;

end;

Tools.Lighting.changeSide = function ( self, side )

&#9;local lights = self:getSpotlights();

&#9;self:startHistoryRecord( lights );
&#9;for _, Light in pairs( lights ) do
&#9;&#9;Light.Face = side;
&#9;end;
&#9;self:finishHistoryRecord();

&#9;if self.SideDropdown.open then
&#9;&#9;self.SideDropdown:toggle();
&#9;end;

end;

Tools.Lighting.changeAngle = function ( self, angle )

&#9;local lights = self:getSpotlights();

&#9;self:startHistoryRecord( lights );
&#9;for _, Light in pairs( lights ) do
&#9;&#9;Light.Angle = angle;
&#9;end;
&#9;self:finishHistoryRecord();

end;

Tools.Lighting.getSpotlights = function ( self )
&#9;-- Returns a list of all the relevant spotlights in the selection items

&#9;local spotlights = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Spotlight = _getChildOfClass( Item, &apos;SpotLight&apos; );
&#9;&#9;if Spotlight then
&#9;&#9;&#9;table.insert( spotlights, Spotlight );
&#9;&#9;end;
&#9;end;

&#9;return spotlights;

end;

Tools.Lighting.getPointLights = function ( self )
&#9;-- Returns a list of all the relevant point lights in the selection items

&#9;local pointlights = {};

&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local PointLight = _getChildOfClass( Item, &apos;PointLight&apos; );
&#9;&#9;if PointLight then
&#9;&#9;&#9;table.insert( pointlights, PointLight );
&#9;&#9;end;
&#9;end;

&#9;return pointlights;

end;

Tools.Lighting.changeColor = function ( self, target, ... )

&#9;local args = { ... };
&#9;local targets;

&#9;if target == &apos;spotlight&apos; then
&#9;&#9;targets = self:getSpotlights();
&#9;elseif target == &apos;pointlight&apos; then
&#9;&#9;targets = self:getPointLights();
&#9;end;

&#9;self:startHistoryRecord( targets );

&#9;-- If only one component is being changed at a time
&#9;if #args == 2 then
&#9;&#9;local component = args[1];
&#9;&#9;local component_value = args[2];

&#9;&#9;for _, Light in pairs( targets ) do
&#9;&#9;&#9;Light.Color = Color3.new(
&#9;&#9;&#9;&#9;component == &apos;r&apos; and component_value or Light.Color.r,
&#9;&#9;&#9;&#9;component == &apos;g&apos; and component_value or Light.Color.g,
&#9;&#9;&#9;&#9;component == &apos;b&apos; and component_value or Light.Color.b
&#9;&#9;&#9;);
&#9;&#9;end;

&#9;-- If all 3 components of the color are being changed
&#9;elseif #args == 3 then
&#9;&#9;local r, g, b = ...;

&#9;&#9;for _, Light in pairs( targets ) do
&#9;&#9;&#9;Light.Color = Color3.new( r, g, b );
&#9;&#9;end;
&#9;end;

&#9;self:finishHistoryRecord();
end;

Tools.Lighting.changeBrightness = function ( self, target, new_brightness )

&#9;local targets;

&#9;if target == &apos;spotlight&apos; then
&#9;&#9;targets = self:getSpotlights();
&#9;elseif target == &apos;pointlight&apos; then
&#9;&#9;targets = self:getPointLights();
&#9;end;

&#9;self:startHistoryRecord( targets );

&#9;for _, Light in pairs( targets ) do
&#9;&#9;Light.Brightness = new_brightness;
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Lighting.changeRange = function ( self, target, new_range )

&#9;local targets;

&#9;if target == &apos;spotlight&apos; then
&#9;&#9;targets = self:getSpotlights();
&#9;elseif target == &apos;pointlight&apos; then
&#9;&#9;targets = self:getPointLights();
&#9;end;

&#9;self:startHistoryRecord( targets );

&#9;for _, Light in pairs( targets ) do
&#9;&#9;Light.Range = new_range;
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Lighting.changeShadows = function ( self, target, new_shadows )

&#9;local targets;

&#9;if target == &apos;spotlight&apos; then
&#9;&#9;targets = self:getSpotlights();
&#9;elseif target == &apos;pointlight&apos; then
&#9;&#9;targets = self:getPointLights();
&#9;end;

&#9;self:startHistoryRecord( targets );

&#9;for _, Light in pairs( targets ) do
&#9;&#9;Light.Shadows = new_shadows;
&#9;end;

&#9;self:finishHistoryRecord();

end;

Tools.Lighting.addLight = function ( self, light_type )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Light in pairs( self.lights ) do
&#9;&#9;&#9;&#9;Light.Parent = self.light_parents[Light];
&#9;&#9;&#9;&#9;Selection:add( Light.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Light in pairs( self.lights ) do
&#9;&#9;&#9;&#9;Selection:add( Light.Parent );
&#9;&#9;&#9;&#9;Light.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;-- Add lights to all the items from the selection that
&#9;-- don&apos;t already have one
&#9;local lights = {};
&#9;local light_parents = {};
&#9;for _, Item in pairs( Selection.Items ) do
&#9;&#9;local Light = _getChildOfClass( Item, light_type );
&#9;&#9;if not Light then
&#9;&#9;&#9;local Light = RbxUtility.Create( light_type ) {
&#9;&#9;&#9;&#9;Parent = Item;
&#9;&#9;&#9;};
&#9;&#9;&#9;table.insert( lights, Light );
&#9;&#9;&#9;light_parents[Light] = Item;
&#9;&#9;end;
&#9;end;

&#9;HistoryRecord.lights = lights;
&#9;HistoryRecord.light_parents = light_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Lighting.removeLight = function ( self, light_type )

&#9;local HistoryRecord = {
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Light in pairs( self.lights ) do
&#9;&#9;&#9;&#9;Selection:add( Light.Parent );
&#9;&#9;&#9;&#9;Light.Parent = nil;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Light in pairs( self.lights ) do
&#9;&#9;&#9;&#9;Light.Parent = self.light_parents[Light];
&#9;&#9;&#9;&#9;Selection:add( Light.Parent );
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};

&#9;local lights = {};
&#9;local light_parents = {};

&#9;-- Remove lights from all the selected items
&#9;local lights;
&#9;if light_type == &apos;spotlight&apos; then
&#9;&#9;lights = self:getSpotlights();
&#9;elseif light_type == &apos;pointlight&apos; then
&#9;&#9;lights = self:getPointLights();
&#9;end;

&#9;for _, Light in pairs( lights ) do
&#9;&#9;light_parents[Light] = Light.Parent;
&#9;&#9;Light.Parent = nil;
&#9;end;

&#9;HistoryRecord.lights = lights;
&#9;HistoryRecord.light_parents = light_parents;
&#9;History:add( HistoryRecord );

end;

Tools.Lighting.startHistoryRecord = function ( self, lights )

&#9;if self.State.HistoryRecord then
&#9;&#9;self.State.HistoryRecord = nil;
&#9;end;

&#9;-- Create a history record
&#9;self.State.HistoryRecord = {
&#9;&#9;targets = _cloneTable( lights );
&#9;&#9;initial_color = {};&#9;&#9;&#9;terminal_color = {};
&#9;&#9;initial_brightness = {};&#9;terminal_brightness = {};
&#9;&#9;initial_range = {};&#9;&#9;&#9;terminal_range = {};
&#9;&#9;initial_shadows = {};&#9;&#9;terminal_shadows = {};
&#9;&#9;-- Spotlights only
&#9;&#9;initial_side = {};&#9;&#9;&#9;terminal_side = {};
&#9;&#9;initial_angle = {};&#9;&#9;&#9;terminal_angle = {};
&#9;&#9;unapply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;Target.Color = self.initial_color[Target];
&#9;&#9;&#9;&#9;&#9;Target.Brightness = self.initial_brightness[Target];
&#9;&#9;&#9;&#9;&#9;Target.Range = self.initial_range[Target];
&#9;&#9;&#9;&#9;&#9;Target.Shadows = self.initial_shadows[Target];
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &apos;SpotLight&apos; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.Face = self.initial_side[Target];
&#9;&#9;&#9;&#9;&#9;&#9;Target.Angle = self.initial_angle[Target];
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;&#9;apply = function ( self )
&#9;&#9;&#9;Selection:clear();
&#9;&#9;&#9;for _, Target in pairs( self.targets ) do
&#9;&#9;&#9;&#9;if Target then
&#9;&#9;&#9;&#9;&#9;Selection:add( Target.Parent );
&#9;&#9;&#9;&#9;&#9;Target.Color = self.terminal_color[Target];
&#9;&#9;&#9;&#9;&#9;Target.Brightness = self.terminal_brightness[Target];
&#9;&#9;&#9;&#9;&#9;Target.Range = self.terminal_range[Target];
&#9;&#9;&#9;&#9;&#9;Target.Shadows = self.terminal_shadows[Target];
&#9;&#9;&#9;&#9;&#9;if Target:IsA( &apos;SpotLight&apos; ) then
&#9;&#9;&#9;&#9;&#9;&#9;Target.Face = self.terminal_side[Target];
&#9;&#9;&#9;&#9;&#9;&#9;Target.Angle = self.terminal_angle[Target];
&#9;&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;&#9;end;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;};
&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.initial_color[Item] = Item.Color;
&#9;&#9;&#9;self.State.HistoryRecord.initial_brightness[Item] = Item.Brightness;
&#9;&#9;&#9;self.State.HistoryRecord.initial_range[Item] = Item.Range;
&#9;&#9;&#9;self.State.HistoryRecord.initial_shadows[Item] = Item.Shadows;
&#9;&#9;&#9;if Item:IsA( &apos;SpotLight&apos; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_side[Item] = Item.Face;
&#9;&#9;&#9;&#9;self.State.HistoryRecord.initial_angle[Item] = Item.Angle;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;

end;

Tools.Lighting.finishHistoryRecord = function ( self )

&#9;if not self.State.HistoryRecord then
&#9;&#9;return;
&#9;end;

&#9;for _, Item in pairs( self.State.HistoryRecord.targets ) do
&#9;&#9;if Item then
&#9;&#9;&#9;self.State.HistoryRecord.terminal_color[Item] = Item.Color;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_brightness[Item] = Item.Brightness;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_range[Item] = Item.Range;
&#9;&#9;&#9;self.State.HistoryRecord.terminal_shadows[Item] = Item.Shadows;
&#9;&#9;&#9;if Item:IsA( &apos;SpotLight&apos; ) then
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_side[Item] = Item.Face;
&#9;&#9;&#9;&#9;self.State.HistoryRecord.terminal_angle[Item] = Item.Angle;
&#9;&#9;&#9;end;
&#9;&#9;end;
&#9;end;
&#9;History:add( self.State.HistoryRecord );
&#9;self.State.HistoryRecord = nil;

end;

Tools.Lighting.hideGUI = function ( self )

&#9;-- Hide the GUI if it exists already
&#9;if self.GUI then
&#9;&#9;self.GUI.Visible = false;
&#9;end;

end;

Tools.Lighting.Loaded = true;</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="RemoteFunction" referent="RBX15">
			<Properties>
				<string name="Name">GetAsync</string>
			</Properties>
			<Item class="Script" referent="RBX16">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Script</string>
					<ProtectedString name="Source">local HttpService = Game:GetService( &apos;HttpService&apos; );

-- Provide an interface that allows the client
-- to use HttpService&apos;s GetAsync
script.Parent.OnServerInvoke = function ( Player, ... )
&#9;return HttpService:GetAsync( ... );
end;</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="RemoteFunction" referent="RBX17">
			<Properties>
				<string name="Name">PostAsync</string>
			</Properties>
			<Item class="Script" referent="RBX18">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Script</string>
					<ProtectedString name="Source">local HttpService = Game:GetService( &apos;HttpService&apos; );

-- Provide an interface that allows the client
-- to use HttpService&apos;s PostAsync
script.Parent.OnServerInvoke = function ( Player, ... )
&#9;return HttpService:PostAsync( ... );
end;</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Frame" referent="RBX19">
			<Properties>
				<bool name="Active">false</bool>
				<Color3 name="BackgroundColor3">4294967295</Color3>
				<float name="BackgroundTransparency">0</float>
				<Color3 name="BorderColor3">4279970357</Color3>
				<int name="BorderSizePixel">1</int>
				<bool name="ClipsDescendants">false</bool>
				<bool name="Draggable">false</bool>
				<string name="Name">Interfaces</string>
				<UDim2 name="Position">
					<XS>0</XS>
					<XO>0</XO>
					<YS>0</YS>
					<YO>0</YO>
				</UDim2>
				<float name="Rotation">0</float>
				<UDim2 name="Size">
					<XS>0</XS>
					<XO>100</XO>
					<YS>0</YS>
					<YO>100</YO>
				</UDim2>
				<token name="SizeConstraint">0</token>
				<token name="Style">0</token>
				<bool name="Visible">true</bool>
				<int name="ZIndex">1</int>
			</Properties>
			<Item class="Frame" referent="RBX20">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTAnchorToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>245</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX21">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX22">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX23">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">ANCHOR TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX24">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX25">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Status</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX26">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Status</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX27">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Anchored</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX28">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>9</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-9</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX29">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX30">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX31">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">ANCHORED</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX32">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Unanchored</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>140</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX33">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>9</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-9</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX34">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX35">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX36">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">UNANCHORED</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX37">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Tip</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX38">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX39">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">TIP: Press Enter to quickly toggle the anchor.</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX40">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTCollisionToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX41">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX42">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX43">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">COLLISION TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX44">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX45">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Status</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX46">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Collision</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX47">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">On</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX48">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX49">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX50">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX51">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">ON</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX52">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Off</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>113</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX53">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX54">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX55">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX56">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">OFF</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX57">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Tip</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX58">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX59">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">TIP: Press Enter to quickly toggle collision.</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX60">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4278190080</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTExportDialog</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>100</XO>
						<YS>0</YS>
						<YO>128</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>110</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX61">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Info</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>75</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX62">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<string name="Name">CreationIDLabel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>40</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Your creation&apos;s ID:</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX63">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">7</token>
							<string name="Name">CreationID</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>40</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">j5of0</string>
							<Color3 name="TextColor3">4285558896</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4294967295</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX64">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX65">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294946560</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Yellow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX66">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283144011</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Green</string>
								<UDim2 name="Position">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX67">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278497260</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Blue</string>
								<UDim2 name="Position">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX68">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294901760</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Red</string>
								<UDim2 name="Position">
									<XS>0.600000024</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX69">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4285215356</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Purple</string>
								<UDim2 name="Position">
									<XS>0.800000012</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX70">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Tip</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>75</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX71">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">4</token>
							<string name="Name">Tip</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>7</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Use the ID above to import your creation using the plugin.</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX72">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">180</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX73">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294946560</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Yellow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX74">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283144011</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Green</string>
								<UDim2 name="Position">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX75">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278497260</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Blue</string>
								<UDim2 name="Position">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX76">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294901760</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Red</string>
								<UDim2 name="Position">
									<XS>0.600000024</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX77">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4285215356</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Purple</string>
								<UDim2 name="Position">
									<XS>0.800000012</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX78">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Close</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>5</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX79">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<bool name="Modal">false</bool>
							<string name="Name">Button</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">Got it</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX80">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX81">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Loading</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>80</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX82">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX83">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294946560</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Yellow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX84">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283144011</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Green</string>
								<UDim2 name="Position">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX85">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278497260</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Blue</string>
								<UDim2 name="Position">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX86">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294901760</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Red</string>
								<UDim2 name="Position">
									<XS>0.600000024</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX87">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4285215356</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Purple</string>
								<UDim2 name="Position">
									<XS>0.800000012</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX88">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<string name="Name">TextLabel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>50</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Uploading your creation...</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX89">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">BottomColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">180</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX90">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294946560</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Yellow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX91">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283144011</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Green</string>
								<UDim2 name="Position">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX92">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278497260</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Blue</string>
								<UDim2 name="Position">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX93">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294901760</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Red</string>
								<UDim2 name="Position">
									<XS>0.600000024</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX94">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4285215356</Color3>
								<float name="BackgroundTransparency">0.25</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Purple</string>
								<UDim2 name="Position">
									<XS>0.800000012</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0.200000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBX95">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">5</token>
							<bool name="Modal">false</bool>
							<string name="Name">CloseButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>45</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">Close</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.850000024</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX96">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.699999988</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX97">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTMaterialToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>172</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>145</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX98">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX99">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX100">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">MATERIAL TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX101">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX102">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">MaterialOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-14</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX103">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Material</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX104">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TransparencyOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>65</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX105">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Transparency</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX106">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TransparencyInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX107">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX108">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX109">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX110">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX111">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ReflectanceOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX112">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Reflectance</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX113">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ReflectanceInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>85</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX114">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX115">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX116">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX117">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX118">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Bottom</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>1</YS>
							<YO>-10</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX119">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX120">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<token name="FontSize">5</token>
						<string name="Name">SelectNote</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>27</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>15</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Select something to use this tool.</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">true</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.5</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX121">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTMeshToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>172</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>55</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX122">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX123">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX124">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">MESH TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX125">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX126">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TypeOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>65</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-14</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX127">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Type</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX128">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ScaleOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX129">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Scale</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX130">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">XInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX131">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX132">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX133">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX134">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">1</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX135">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">YInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX136">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX137">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX138">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX139">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">1</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX140">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ZInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>145</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX141">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX142">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX143">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX144">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">1</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX145">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">AddButton</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX146">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.449999988</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Button</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">ADD MESH</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX147">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX148">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">MeshIDOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>135</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX149">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Mesh ID</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextBox" referent="RBX150">
						<Properties>
							<bool name="Active">true</bool>
							<Color3 name="BackgroundColor3">4283760767</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClearTextOnFocus">true</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<bool name="MultiLine">false</bool>
							<string name="Name">TextBox</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">true</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX151">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextBoxBorder</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>56</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>85</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX152">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">BottomBorder</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>1</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX153">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">LeftBorder</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX154">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">RightBorder</string>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-1</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX155">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4283760767</Color3>
							<float name="BackgroundTransparency">0.899999976</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextBoxBackground</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>86</XO>
								<YS>0</YS>
								<YO>22</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX156">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<bool name="Modal">false</bool>
							<string name="Name">TextButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX157">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4285215356</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">BottomColorBar</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>1</YS>
							<YO>-2</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>2</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX158">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TextureIDOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>165</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX159">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Texture ID</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextBox" referent="RBX160">
						<Properties>
							<bool name="Active">true</bool>
							<Color3 name="BackgroundColor3">4283760767</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClearTextOnFocus">true</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<bool name="MultiLine">false</bool>
							<string name="Name">TextBox</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">true</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX161">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextBoxBorder</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>61</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>85</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX162">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">BottomBorder</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>1</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX163">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">LeftBorder</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX164">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">RightBorder</string>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-1</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX165">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4283760767</Color3>
							<float name="BackgroundTransparency">0.899999976</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextBoxBackground</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>86</XO>
								<YS>0</YS>
								<YO>22</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX166">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<bool name="Modal">false</bool>
							<string name="Name">TextButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX167">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">RemoveButton</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>1</YS>
							<YO>-30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX168">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.449999988</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Button</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">REMOVE MESH</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX169">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX170">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TintOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>200</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX171">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Tex. Tint</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX172">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">RInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX173">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX174">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX175">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294901760</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>4</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX176">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">255</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX177">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">GInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>110</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX178">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX179">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX180">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278255360</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>4</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX181">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">255</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX182">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">BInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX183">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX184">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX185">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190335</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>4</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX186">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">255</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX187">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<token name="FontSize">5</token>
						<string name="Name">SelectNote</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>27</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>15</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Select something to use this tool.</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">true</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.5</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX188">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTMoveToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>245</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX189">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">AxesOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX190">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Global</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX191">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX192">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX193">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127774197</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX194">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">GLOBAL</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX195">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Local</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>110</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX196">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX197">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX198">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX199">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">LOCAL</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX200">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Last</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>175</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX201">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX202">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX203">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX204">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">LAST</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX205">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX206">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Axes</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX207">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX208">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294945280</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX209">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">MOVE TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX210">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX211">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">IncrementOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>65</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX212">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Increment</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX213">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX214">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">1</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX215">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX216">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>75</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX217">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Increment</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX218">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Info</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX219">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294945280</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX220">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">SELECTION INFO</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX221">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Center</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX222">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>75</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Position</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX223">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">X</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>70</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBX224">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX225">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="TextBox" referent="RBX226">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX227">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Y</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>117</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageLabel" referent="RBX228">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextBox" referent="RBX229">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX230">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX231">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Z</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>164</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX232">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX233">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX234">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX235">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Changes</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX236">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294945280</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX237">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">moved 0 studs</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX238">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTNewPartToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>220</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX239">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX240">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX241">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">NEW PART TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX242">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX243">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TypeOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX244">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Part Type</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX245">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Tip</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX246">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX247">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">TIP: Point and click for a new part.</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX248">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTPaintToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>230</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>205</XO>
						<YS>0</YS>
						<YO>230</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX249">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX250">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294901760</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX251">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">PAINT TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX252">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX253">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Palette</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>205</XO>
							<YS>0</YS>
							<YO>205</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX254">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4288986439</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Br. yellowish green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX255">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294298928</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright yellow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX256">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4292511041</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX257">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4291045404</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright red</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX258">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright violet</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX259">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4279069100</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX260">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278226844</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright bluish green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX261">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4283144011</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Bright green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX262">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294506744</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Institutional white</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX263">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294112243</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">White</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX264">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4293256415</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Light stone grey</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX265">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4291677645</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Mid gray</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX266">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Medium stone grey</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX267">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4284702562</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Dark stone grey</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX268">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4279970357</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Black</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX269">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Really black</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX270">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4286549604</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Grime</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX271">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4293040960</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Br. yellowish orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX272">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4293572754</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Light orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX273">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4287986039</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Sand red</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX274">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4287388575</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Lavender</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX275">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4285826717</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Sand blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX276">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4285438410</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Medium blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX277">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4286091394</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Sand green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>55</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX278">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4292330906</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Brick yellow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX279">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294830733</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Cool yellow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX280">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4292178749</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Neon orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX281">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4292511354</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Medium red</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX282">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4293442248</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Light reddish violet</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX283">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4286626779</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel Blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX284">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4279430868</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Teal</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX285">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4288791692</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Medium green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX286">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294954137</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel brown</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX287">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967244</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel yellow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX288">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294953417</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX289">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294928076</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pink</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX290">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4289832959</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel violet</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX291">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4289715711</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel light blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX292">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4288672745</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel blue-green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX293">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4291624908</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Pastel green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX294">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4290887234</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Olive</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX295">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967040</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">New Yeller</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX296">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294946560</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Deep orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX297">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294901760</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Really red</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX298">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294901951</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Hot pink</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX299">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190335</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Really blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX300">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278255615</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Toothpaste</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX301">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278255360</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Lime green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>130</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX302">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4286340166</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Brown</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX303">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4291595881</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Nougat</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX304">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4288700213</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Dark orange</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX305">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4284622289</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Royal purple</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX306">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4290019583</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Alder</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX307">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278497260</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Cyan</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX308">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4290040548</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Light blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX309">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4282023189</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Camo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>155</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX310">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4285087784</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Reddish brown</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX311">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4289352960</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">CGA brown</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX312">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4288891723</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Dusty Rose</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX313">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4289331370</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Magenta</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX314">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4280374457</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Deep blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX315">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278198368</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Navy blue</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>130</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX316">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4280844103</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Dark green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>155</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX317">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4280763949</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Earth green</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>180</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.75</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX318">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTResizeToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>245</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX319">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">DirectionsOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX320">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Normal</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX321">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX322">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX323">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127774197</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX324">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">NORMAL</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX325">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Both</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>135</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX326">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX327">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX328">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX329">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">BOTH</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX330">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>75</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX331">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Directions</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX332">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX333">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278497260</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX334">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">RESIZE TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX335">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX336">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">IncrementOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>65</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX337">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Increment</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX338">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX339">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">1</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX340">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX341">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>75</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX342">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Increment</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX343">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Info</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX344">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278497260</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX345">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">SELECTION INFO</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX346">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">SizeInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX347">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>75</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Size</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX348">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">X</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>70</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX349">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX350">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX351">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX352">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Y</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>117</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX353">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX354">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX355">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX356">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Z</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>164</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX357">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX358">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX359">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX360">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Changes</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX361">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278497260</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX362">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">resized 0 studs</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX363">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTRotateToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>245</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX364">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">PivotOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX365">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Center</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX366">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX367">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX368">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127774197</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX369">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">CENTER</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX370">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Local</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>115</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX371">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX372">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX373">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX374">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">LOCAL</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX375">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Last</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>180</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX376">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>6</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX377">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX378">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX379">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">LAST</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX380">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX381">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Pivot</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX382">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX383">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4283144011</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX384">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">ROTATE TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX385">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX386">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">IncrementOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>65</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX387">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Increment</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX388">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX389">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">15</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX390">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX391">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>75</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX392">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Increment</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX393">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Info</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX394">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4283144011</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX395">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">SELECTION INFO</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX396">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">RotationInfo</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX397">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">TextLabel</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>75</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Rotation</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX398">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">X</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>70</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX399">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX400">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX401">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX402">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Y</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>117</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX403">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX404">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX405">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX406">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Z</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>164</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextBox" referent="RBX407">
								<Properties>
									<bool name="Active">true</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">TextBox</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX408">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">0</token>
									<token name="FontSize">0</token>
									<bool name="Modal">false</bool>
									<string name="Name">TextButton</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX409">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<string name="Name">Background</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX410">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Changes</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX411">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4283144011</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX412">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">rotated 0 degrees</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX413">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">EdgeSelectionTip</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Press E for edge selection.</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX414">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTSurfaceToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>172</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>245</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX415">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX416">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX417">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">SURFACE TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX418">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX419">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">SideOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>120</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX420">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Side</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX421">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TypeOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>124</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>120</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX422">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Type</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX423">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Tip</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX424">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX425">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>6</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-6</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">TIP: Select a part and right click on a surface</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX426">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTTextureToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>172</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>205</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX427">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX428">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4285215356</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX429">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">TEXTURE TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX430">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX431">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">SideOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>65</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-14</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX432">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Side</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX433">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">RepeatOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>205</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX434">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Repeat</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX435">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">XInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX436">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX437">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX438">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX439">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">2</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX440">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">YInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>105</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX441">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX442">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX443">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX444">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">2</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX445">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4285215356</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">BottomColorBar</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>1</YS>
							<YO>-2</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>2</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX446">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">TransparencyOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>135</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX447">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Transparency</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX448">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TransparencyInput</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>75</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>45</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX449">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX450">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX451">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX452">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">0</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX453">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ModeOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX454">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>14</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Mode</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX455">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Decal</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX456">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>7</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-7</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX457">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX458">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX459">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">DECAL</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX460">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Texture</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>122</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX461">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">Button</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX462">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX463">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<string name="Name">Label</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">TEXTURE</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX464">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SelectedIndicator</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>7</XO>
									<YS>0</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-7</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX465">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ImageIDOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>14</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX466">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>70</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Image ID</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX467">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextBoxBorder</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>61</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>85</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX468">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">BottomBorder</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>1</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX469">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">LeftBorder</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX470">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4283760767</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">RightBorder</string>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-1</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX471">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4283760767</Color3>
							<float name="BackgroundTransparency">0.899999976</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TextBoxBackground</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>86</XO>
								<YS>0</YS>
								<YO>22</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX472">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<bool name="Modal">false</bool>
							<string name="Name">TextButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="TextBox" referent="RBX473">
						<Properties>
							<bool name="Active">true</bool>
							<Color3 name="BackgroundColor3">4283760767</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClearTextOnFocus">true</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<bool name="MultiLine">false</bool>
							<string name="Name">TextBox</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>65</XO>
								<YS>0</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">true</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX474">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">AddButton</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX475">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.449999988</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Button</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">ADD DECAL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX476">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX477">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">RemoveButton</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>1</YS>
							<YO>-35</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX478">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.449999988</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">Button</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">REMOVE DECAL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.800000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX479">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX480">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">2</token>
						<token name="FontSize">3</token>
						<string name="Name">Text</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>6</XO>
							<YS>1</YS>
							<YO>2</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-6</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">TIP: Select a part &amp; right click on a surface</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.5</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX481">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTWeldToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>280</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>220</XO>
						<YS>0</YS>
						<YO>90</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX482">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX483">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX484">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">WELD TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX485">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX486">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Interface</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX487">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.400000006</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">WeldButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0.479999989</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">WELD TO LAST</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.850000024</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX488">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.150000006</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBX489">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.400000006</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">BreakWeldsButton</string>
							<UDim2 name="Position">
								<XS>0.519999981</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0.479999989</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">BREAK WELDS</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.850000024</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX490">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.150000006</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-2</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX491">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Changes</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-5</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX492">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4279308561</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX493">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">3</token>
							<string name="Name">Text</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX494">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTLightingToolGUI</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>172</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>200</XO>
						<YS>0</YS>
						<YO>95</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX495">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">BottomColorBar</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>5</XO>
							<YS>1</YS>
							<YO>-2</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>2</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX496">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Title</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX497">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>5</XO>
								<YS>0</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-5</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX498">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">LIGHTING TOOL</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX499">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">F3XSignature</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">F3X</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX500">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0.675000012</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Spotlight</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX501">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Spotlight</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageButton" referent="RBX502">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=134367382</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="Modal">false</bool>
							<string name="Name">ArrowButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX503">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294946364</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX504">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">AddButton</string>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>-40</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">ADD</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX505">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">RemoveButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>127</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>58</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">REMOVE</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX506">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX507">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Options</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-3</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX508">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ColorOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX509">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Color</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX510">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">RInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>35</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX511">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX512">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX513">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294901760</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX514">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX515">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">GInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>72</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX516">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX517">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX518">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278255360</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX519">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX520">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">BInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>109</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX521">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX522">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX523">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190335</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX524">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="ImageButton" referent="RBX525">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.400000006</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=141313631</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="Modal">false</bool>
									<string name="Name">HSVPicker</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>160</XO>
										<YS>0</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>27</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX526">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX527">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX528">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>16</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX529">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>10</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX530">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">BrightnessOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>45</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX531">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Brightness</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX532">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>60</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX533">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX534">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX535">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX536">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">1</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX537">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">AngleOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>115</XO>
									<YS>0</YS>
									<YO>46</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-115</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX538">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Angle</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX539">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>35</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX540">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX541">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX542">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX543">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">90</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX544">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">RangeOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>80</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX545">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Range</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX546">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>40</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX547">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX548">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX549">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX550">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">16</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX551">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SideOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>115</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX552">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Side</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX553">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ShadowsOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>150</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX554">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Shadows</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX555">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">On</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>55</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>45</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX556">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>4</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-4</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX557">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">1</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX558">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX559">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">ON</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX560">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Off</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>100</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>45</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX561">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>4</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-4</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX562">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">1</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX563">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX564">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">OFF</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX565">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<token name="FontSize">5</token>
						<string name="Name">SelectNote</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>27</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>15</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Select something to use this tool.</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">true</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.5</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX566">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0.675000012</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">PointLight</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>60</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-10</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX567">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>60</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Point light</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageButton" referent="RBX568">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=134367382</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="Modal">false</bool>
							<string name="Name">ArrowButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX569">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4292411647</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX570">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">AddButton</string>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>-40</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>35</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">ADD</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX571">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">4</token>
							<bool name="Modal">false</bool>
							<string name="Name">RemoveButton</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>58</XO>
								<YS>0</YS>
								<YO>19</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">REMOVE</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX572">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.75</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-1</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>1</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX573">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Options</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>-3</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX574">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ColorOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX575">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Color</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX576">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">RInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>35</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX577">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX578">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX579">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294901760</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX580">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX581">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">GInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>72</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX582">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX583">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX584">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278255360</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX585">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX586">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">BInput</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>109</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX587">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX588">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX589">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190335</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX590">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">255</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="ImageButton" referent="RBX591">
								<Properties>
									<bool name="Active">true</bool>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.400000006</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.roblox.com/asset/?id=141313631</url></Content>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="Modal">false</bool>
									<string name="Name">HSVPicker</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>160</XO>
										<YS>0</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selected">false</bool>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>27</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="Frame" referent="RBX592">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX593">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX594">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>16</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX595">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4284572001</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Separator</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>151</XO>
										<YS>0</YS>
										<YO>10</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>4</XO>
										<YS>0</YS>
										<YO>4</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX596">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">BrightnessOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>45</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX597">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Brightness</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX598">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>60</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX599">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX600">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX601">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX602">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">1</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX603">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">RangeOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>110</XO>
									<YS>0</YS>
									<YO>45</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX604">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Range</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX605">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Input</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>40</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>38</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX606">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX607">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX608">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX609">
									<Properties>
										<bool name="Active">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">16</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX610">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ShadowsOption</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>80</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX611">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">4</token>
									<string name="Name">Label</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Shadows</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX612">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">On</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>55</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>45</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX613">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>4</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-4</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX614">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">1</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX615">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX616">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">ON</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX617">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Off</string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>100</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>45</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX618">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SelectedIndicator</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>4</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-4</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX619">
									<Properties>
										<bool name="Active">true</bool>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">0</token>
										<token name="FontSize">0</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selected">false</bool>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">1</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX620">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<string name="Name">Background</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX621">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">OFF</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX622">
				<Properties>
					<bool name="Active">true</bool>
					<Color3 name="BackgroundColor3">4278190080</Color3>
					<float name="BackgroundTransparency">0.899999976</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">0</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">true</bool>
					<string name="Name">BTHSVColorPicker</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>220</XO>
						<YS>0</YS>
						<YO>116</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>250</XO>
						<YS>0</YS>
						<YO>380</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="ImageButton" referent="RBX623">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4281677109</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><url>http://www.roblox.com/asset?id=141066192</url></Content>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<bool name="Modal">false</bool>
						<string name="Name">HueSaturation</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>10</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>209</XO>
							<YS>0</YS>
							<YO>200</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="ImageLabel" referent="RBX624">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141186650</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<string name="Name">Cursor</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-8</XO>
								<YS>0</YS>
								<YO>194</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>16</XO>
								<YS>0</YS>
								<YO>16</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="ImageButton" referent="RBX625">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4281677109</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><url>http://www.roblox.com/asset/?id=141066196</url></Content>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<bool name="Modal">false</bool>
						<string name="Name">Value</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>229</XO>
							<YS>0</YS>
							<YO>10</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>13</XO>
							<YS>0</YS>
							<YO>200</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="Frame" referent="RBX626">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">ColorBG</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX627">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=141186650</url></Content>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<string name="Name">Cursor</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-2</XO>
								<YS>0</YS>
								<YO>-8</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>16</XO>
								<YS>0</YS>
								<YO>16</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX628">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">HueOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>218</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-25</XO>
							<YS>0</YS>
							<YO>34</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX629">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>15</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Hue</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX630">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Input</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>55</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>26</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX631">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX632">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX633">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">360</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX634">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Bar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>-4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX635">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-3</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>3</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX636">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">SaturationOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>255</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-25</XO>
							<YS>0</YS>
							<YO>34</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX637">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>15</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Saturation</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX638">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Input</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>26</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX639">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX640">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX641">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">100%</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX642">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Bar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>-4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX643">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-3</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>3</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX644">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ValueOption</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>292</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>-25</XO>
							<YS>0</YS>
							<YO>34</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX645">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<string name="Name">Label</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>15</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Brightness</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX646">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Input</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>26</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX647">
							<Properties>
								<bool name="Active">true</bool>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">0</token>
								<bool name="Modal">false</bool>
								<string name="Name">TextButton</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selected">false</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX648">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=127772502</url></Content>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<string name="Name">Background</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBX649">
							<Properties>
								<bool name="Active">true</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">4</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-10</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">100%</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX650">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Bar</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>3</XO>
								<YS>1</YS>
								<YO>-4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX651">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Shadow</string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-3</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>3</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX652">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ColorDisplay</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>180</XO>
							<YS>0</YS>
							<YO>220</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>60</XO>
							<YS>0</YS>
							<YO>103</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX653">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0.899999976</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Shadow</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextButton" referent="RBX654">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4294943279</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<token name="FontSize">6</token>
						<bool name="Modal">false</bool>
						<string name="Name">OkButton</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0</YS>
							<YO>335</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>140</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<string name="Text">Ok</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.850000024</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="Frame" referent="RBX655">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4291592485</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Bevel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextButton" referent="RBX656">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4294943279</Color3>
						<float name="BackgroundTransparency">0.600000024</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<token name="FontSize">6</token>
						<bool name="Modal">false</bool>
						<string name="Name">CancelButton</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>160</XO>
							<YS>0</YS>
							<YO>335</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>80</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<string name="Text">Cancel</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0.850000024</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="Frame" referent="RBX657">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4291592485</Color3>
							<float name="BackgroundTransparency">0.600000024</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Bevel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>2</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
</roblox>